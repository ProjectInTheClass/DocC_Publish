{"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"uisearchcontroller1.png"}]},{"anchor":"시작하기에-앞서","level":2,"type":"heading","text":"시작하기에 앞서"},{"type":"paragraph","inlineContent":[{"type":"text","text":"이번 기술 블로그에서는 "},{"type":"strong","inlineContent":[{"type":"text","text":"UISearchController"}]},{"type":"text","text":"를 이용하여 "},{"type":"strong","inlineContent":[{"type":"text","text":"Search Bar"}]},{"type":"text","text":" 를 개발하는 방법과 함께 간단한 검색 어플리케이션 예제를 제작합니다."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Search Bar는 여러 데이터의 모음(collection)에서 검색을 하기 위해 사용되는 인터페이스"}]},{"type":"text","text":"입니다. 테이블이 있는 대부분의 어플리케이션에서 검색 기능이 있는 것을 볼 수 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"iOS8부터 search bar API가 업데이트되었기 때문에 본 블로그에서는 API의 변경점에 대해 알아본 후 새로운 API를 이용하여 search bar를 구현합니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Search Bar를 어플리케이션에 구현할 때의 가이드라인은 "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/design\/human-interface-guidelines\/ios\/bars\/search-bars\/"},{"type":"text","text":"에서 확인할 수 있습니다."}]},{"anchor":"iOS-8-이전-UISearchDisplayController","level":2,"type":"heading","text":"iOS 8 이전 – UISearchDisplayController"},{"type":"paragraph","inlineContent":[{"type":"text","text":"아래 다이어그램은 현재는 deprecated된 UISearchDisplayController class와 관련된 델리게이트를 정리한 것입니다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"uisearchcontroller2.svg"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"iOS 8 이전에는 UISearchDisplayController class와 델리게이트를 이용하여 search bar를 구현하였습니다. 유저가 검색을 활성화하면 search display controller가 기존의 내용 위에 search result view를 보여주는 방식으로 동작하였고, "},{"type":"strong","inlineContent":[{"type":"text","text":"현재 이 방법은 더이상 추천되지 않습니다."}]}]},{"anchor":"iOS-8이후-새로-등장한-UISearchController","level":2,"type":"heading","text":"iOS 8이후 – 새로 등장한 UISearchController"},{"type":"paragraph","inlineContent":[{"type":"text","text":"2014년 WWDC에서 애플은 검색과 관련된 새로운 클래스를 소개합니다."}]},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2014\/228\/"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"uisearchcontroller3.svg"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"UISearchDisplayController가 UISearchController로 변경되었습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"UISearchDisplayDelegate를UISearchControllerDelegate를 대체합니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"또한 UISearchResultsUpdating이라는 새로운 프로토콜이 등장합니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"일단은, 아래에서 이전 클래스와 무엇이 달라졌는지 살펴보겠습니다."}]},{"anchor":"업데이트-내역-살펴보기","level":2,"type":"heading","text":"업데이트 내역 살펴보기"},{"type":"paragraph","inlineContent":[{"type":"text","text":"iOS8부터 UISearchDisplayController 클래스 대신 UISearchController 클래스를 제공합니다. 두 클래스 모두 controller와 함께 delegate, property, search bar를 제공하지만, 몇 가지의 주요한 차이점이 있습니다."}]},{"anchor":"UISearchController-vs-UISearchDisplayController","level":4,"type":"heading","text":"[UISearchController vs UISearchDisplayController]"},{"type":"paragraph","inlineContent":[{"type":"text","text":"우선, Controller는 검색 결과를 나타내는 데 있어 다른 방법을 사용합니다. 기존에는 UISearchDisplayController의 UITableView 속성을 이용하여 검색 결과를 스크린에 나타냈습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"새로운 UISearchController는 검색 결과 표시를 UISearchResultsUpdating 이라는 새로운 프로토콜을 통해 제어하게 합니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"이 방법은 우리가 결과를 표시할 때 UICollectionView 등을 이용할 수 있게 하는 유연성을 제공합니다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"uisearchcontroller4.png"}]},{"anchor":"UISearchControllerDelegate-vs-UISearchDisplayDelegate","level":4,"type":"heading","text":"[UISearchControllerDelegate vs UISearchDisplayDelegate]"},{"type":"paragraph","inlineContent":[{"type":"text","text":"기존의 UISearchDisplayDelegate과 새로운 UISearchControllerDelegate 모두 검색을 시작할 때와 종료할 때의 행동을 정의할 수 있는 메소드를 제공한다는 공통점이 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"하지만 UISearchControllerDelegate에서는 오직 searchController가 자동으로 present 혹은 dismiss될 때만 실행됩니다. 또한 델리게이트에서도 UITableView와 관련된 메소드들이 삭제되었습니다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"uisearchcontroller5.png"}]},{"anchor":"델리게이트의-이해","level":2,"type":"heading","text":"델리게이트의 이해"},{"type":"paragraph","inlineContent":[{"type":"text","text":"새롭게 추가한 델리게이트들을 먼저 알아보고, 변경되지 않은 UISearchBarDelegate도 함께 살펴보겠습니다."}]},{"anchor":"UISearchResultsUpdating","level":4,"type":"heading","text":"[UISearchResultsUpdating]"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"UISearchResultsUpdating 프로토콜은 search bar에 입력되는 정보에 따라 검색 결과를 업데이트합니다."}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"searchController.searchResultsUpdater = self와 같은 식으로 검색 결과를 업데이트할 때 이용할 뷰 컨트롤러를 선택할 수 있습니다. 이 프로토콜의 updateSearchResults(for: UISearchController) 메소드는 search bar에 사용자가 입력한 키워드가 변경되거나 search bar가 first responder가 되는 경우에 호출되므로 검색 키워드에 따라 검색 결과를 업데이트 할 수 있습니다."}]},{"anchor":"UISearchControllerDelegate","level":4,"type":"heading","text":"[UISearchControllerDelegate]"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"UISearchControllerDelegate는 search controller가 present되거나 dismiss될 때의 메소드를 제공합니다."}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"searchController.delegate = self처럼 선언할 수 있습니다."}]},{"anchor":"UISearchBarDelegate","level":4,"type":"heading","text":"[UISearchBarDelegate]"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"UISearchBarDelegate 프로토콜은 search bar에 대한 선택적인 메소드를 제공하여 더 많은 기능을 추가할 수 있습니다."}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Editing Text의 시작과 종료, Clicking Buttons, Scope Button 등에 대한 정보를 제공합니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"UISearchBarController.searchBar.delegate = self와 같은 식으로 선언합니다. 예를 들어, 우리는 이 델리게이트를 이용하여 scope가 변화되었을 때의 기능을 추가해줄 수 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"세부적인 기능은 아래와 같습니다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"uisearchcontroller6.svg"}]},{"anchor":"UISearchContainerViewController","level":4,"type":"heading","text":"[UISearchContainerViewController]"},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uisearchcontainerviewcontroller"},{"type":"text","text":"과 애플의 개발 가이드라인을 보면 search controller 객체를 네비게이션 컨트롤러 스택에 push 하거나, 다른 container view controller의 child로 사용하려면 이 클래스의 인스턴스에 search controller을 담아야 한다고 정리되어 있습니다."}]},{"anchor":"시작하기","level":2,"type":"heading","text":"시작하기"},{"type":"paragraph","inlineContent":[{"type":"text","text":"이제 UISearchController을 이용해 searchBar를 구현하겠습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"우선 기본적인 검색을 만든 후 scope를 추가한 검색까지 구현해 볼 것입니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"각각의 예제 파일은 "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/quino0627\/searchbar-2"},{"type":"text","text":"와 "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/quino0627\/searchbar-2\/tree\/scope"},{"type":"text","text":"에서 확인할 수 있습니다."}]},{"anchor":"STEP-1-SetUp","level":2,"type":"heading","text":"STEP 1. SetUp"},{"anchor":"Setup-Interface-Builder","level":4,"type":"heading","text":"[Setup Interface Builder]"},{"type":"paragraph","inlineContent":[{"type":"text","text":"다음과 같이 Table View Controller를 만들고 initial View Controller로 설정합니다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"uisearchcontroller7.png"}]},{"anchor":"Setup-Data","level":4,"type":"heading","text":"[Setup Data]"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"uisearchcontroller8.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Search Bar를 사용하기 위해 "},{"type":"strong","inlineContent":[{"type":"text","text":"검색할 데이터 집합"}]},{"type":"text","text":"이 있어야 합니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"New Group을 하나 만들어 Model을 저장하겠습니다. 그 안에 Data.swift라는 새로운 클래스 파일을 만들고 그 안에 다음과 같이 Data 클래스를 간단히 만들겠습니다. 이 클래스에는 검색 레이블에 표시할 문자열인 main 프로퍼티와 scope 설정에 사용할 enum 타입의 detail 프로퍼티가 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"uisearchcontroller9.png"}]},{"type":"codeListing","syntax":"swift","code":["class Data{","var main:String","var detail:detailtype","","","init(main: String, detail: detailtype) {","self.main = main","self.detail = detail","    }","}","","enum detailtype:String {","case A = \"A\"","case B = \"B\"","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"작성한 클래스의 인스턴스들을 추후 테이블에 나타낼 수 있도록 deviceArray에 추가하여 줍니다. currentDeviceArray는 Search Bar를 이용하여 검색할 때 나타날 수 있도록 필터링 된 데이터를 저장하는 배열입니다."}]},{"anchor":"Setup-SearchController","level":4,"type":"heading","text":"[Setup SearchController]"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"uisearchcontroller10.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"이전에는 UISearchDisplayController를 인터페이스 빌더에서 작업할 수 있었습니다. 이것은 UISearchBar과 UISearchDisplayController, 그리고 몇몇 델리게이트를 설정해서 search bar를 구현하게 도와주었습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"하지만 UISearchController는 인터페이스 빌더에서 만드는 것을 지원하지 않습니다. 그래서 이것은 code로 작업하여야 합니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"우선, UISearchController과 결과를 표시할 result View Controller를 선언하고 초기화합니다."}]},{"type":"codeListing","syntax":"swift","code":["var searchController = UISearchController()","var resultVC = UITableViewController()"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"이제 search bar과 관련된 델리게이트를 연결해 주어야 합니다. viewDidLoad 함수에 다음을 추가합니다. searchResultsController로 resultVC를 설정합니다. 테이블뷰에 searchBar를 추가합니다. 그리고 델리게이트를 연결합니다. 본 프로젝트에서는 델리게이트를 모두 self로 설정해 주었습니다. resultVC로 해주어도 무방합니다."}]},{"type":"codeListing","syntax":"swift","code":["searchController = UISearchController(searchResultsController: resultVC)","tableView.tableHeaderView = searchController.searchBar","\/\/usally good to set the presentation context  ","self.definesPresentationContext = true","searchController.searchResultsUpdater = self","searchController.searchBar.delegate = self","searchController.delegate = self"]},{"anchor":"Setup-ResultController","level":4,"type":"heading","text":"[Setup ResultController]"},{"type":"paragraph","inlineContent":[{"type":"text","text":"이제 해야할 것은 검색 결과를 띄울 result ViewController를 세팅하는 것입니다. 테이블 뷰의 델리게이트를 self로 설정하여 TableViewController에서 테이블 델리게이트를 함께 다루도록 하겠습니다. viewDidLoad에 다음을 추가합니다."}]},{"type":"codeListing","syntax":"swift","code":["resultVC.tableView.delegate = self","resultVC.tableView.dataSource = self"]},{"anchor":"STEP-2-Implement-delegate","level":2,"type":"heading","text":"STEP 2. Implement delegate"},{"anchor":"UISearchResultsUpdating","level":4,"type":"heading","text":"[UISearchResultsUpdating]"},{"type":"paragraph","inlineContent":[{"type":"text","text":"검색 델리게이트를 구현함에 있어서 실질적으로 검색 기능을 가능하게 하는 logic을 작성하는 과정입니다. filter는 순차 작업을 수행하는 함수로, dataArray를 기반으로 새로운 배열 filteredData를 반환합니다. filter에 대한 정보를 더 얻고 싶으시다면 "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/array\/2994718-filter"},{"type":"text","text":" 페이지를 참고하시기 바랍니다."}]},{"type":"codeListing","syntax":"swift","code":["func updateSearchResults(for searchController: UISearchController) {","        fileteredData = dataArray.filter({ (data:Data) -> Bool in","            return data.main.lowercased().contains(searchController.searchBar.text!.lowercased())","        })","        resultVC.tableView.reloadData()","    }"]},{"anchor":"STEP-3-Table에-결과-보여주기","level":2,"type":"heading","text":"STEP 3. Table에 결과 보여주기"},{"type":"paragraph","inlineContent":[{"type":"text","text":"테이블의 델리게이트를 구현하여 검색 결과를 출력하는 것을 구현해야합니다. View Controller.tableView와 resultsController.tableView의 델리게이트를 모두 self로 초기화하였기 때문에 이 클래스 파일 안에서 두 테이블을 모두 제어할 수 있습니다. "},{"type":"strong","inlineContent":[{"type":"text","text":"삼항연산자"}]},{"type":"text","text":"를 이용하여 간단하게 tableView에 따라 출력 결과를 조절할 수 있습니다."}]},{"type":"codeListing","syntax":"swift","code":["override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {","        return tableView == resultVC.tableView ? fileteredData.count : dataArray.count","        ","    }","    ","    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {","        let cell = UITableViewCell()","        cell.textLabel?.text = (tableView == resultVC.tableView ? fileteredData[indexPath.row].main : dataArray[indexPath.row].main)","        return cell","    }"]},{"anchor":"추가","level":2,"type":"heading","text":"추가"},{"type":"paragraph","inlineContent":[{"type":"text","text":"지금까지 기본적인 Search Bar의 구현해 보았습니다. 지금부터는 Search Bar를 커스터마이즈 하는 것 중 많이 사용되는 범위 설정(Scope)을 구현해 보겠습니다. 앞서 잠시 언급하였지만, UISearchBarDelegate를 이용하면 Scope의 범위가 바뀔 때 결과 값을 업데이트할 수 있습니다."}]},{"anchor":"Scope-표시","level":4,"type":"heading","text":"[Scope 표시]"},{"type":"paragraph","inlineContent":[{"type":"text","text":"func searchBar(_ searchBar: UISearchBar, selectedScopeButtonIndexDidChange selectedScope: Int) 는 scope의 선택이 바뀌었을 때 알려주는 함수입니다."}]},{"type":"codeListing","syntax":"swift","code":["func updateSearchResults(for searchController: UISearchController) {","        fileteredData = scopedData.filter({ (scopedData:Data) -> Bool in","            let scope = searchController.searchBar.scopeButtonTitles![searchController.searchBar.selectedScopeButtonIndex]","            return scopedData.main.lowercased().contains(searchController.searchBar.text!.lowercased()) && (scope == scopedData.detail.rawValue || scope == \"All\")","        })","        resultVC.tableView.reloadData()","    }","    ","    func searchBar(_ searchBar: UISearchBar, selectedScopeButtonIndexDidChange selectedScope: Int) {","        fileteredData = scopedData.filter({ (scopedData:Data) -> Bool in","            let scope = searchBar.scopeButtonTitles![searchBar.selectedScopeButtonIndex]","            return scopedData.main.lowercased().contains(searchController.searchBar.text!.lowercased()) && (scope == scopedData.detail.rawValue || scope == \"All\")","        })","        resultVC.tableView.reloadData()","","    }"]},{"anchor":"테이블-업데이트","level":4,"type":"heading","text":"[테이블 업데이트]"},{"type":"paragraph","inlineContent":[{"type":"text","text":"각 데이터의 scope에 해당하는 정보를 cell에 추가로 나타나게 하기 위해 cell style을 subtitle으로 변경해 주고, detailTextLabel에 값을 나타내도록 수정해 줍니다."}]},{"type":"codeListing","syntax":"swift","code":["override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {","        let cell = UITableViewCell(style: UITableViewCell.CellStyle.subtitle, reuseIdentifier: \"cell\")","        cell.textLabel?.text = (tableView == resultVC.tableView ? fileteredData[indexPath.row].main : scopedData[indexPath.row].main)","        cell.detailTextLabel?.text = (tableView == resultVC.tableView ? fileteredData[indexPath.row].detail : scopedData[indexPath.row].detail).rawValue","        return cell","    }"]},{"anchor":"마치며","level":2,"type":"heading","text":"마치며"},{"type":"paragraph","inlineContent":[{"type":"text","text":"지금까지 UISearchController을 이용하여 Search Bar를 개발하는 방법에 대해서 살펴보았습니다. 위 방법을 이용하면 기본적인 검색 기능을 갖춘 어플리케이션을 개발할 수 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"프로젝트 전체 코드는 "},{"overridingTitleInlineContent":[{"type":"text","text":"Github repository"}],"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/quino0627\/searchbar-2","overridingTitle":"Github repository"},{"type":"text","text":"에서 확인하실 수 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"본 포스트에 대한 제안 사항이나 궁금하신 점이 있다면 언제든지 연락 주세요."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/codershighdocument\/article_uisearchcontroller"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_UISearchController","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Posted: 2019.01.14 | By: Quino0627 (dongwook627@gmail.com)"}],"kind":"article","metadata":{"roleHeading":"Article","title":"UISearchController로 검색 개발하기","role":"article","modules":[{"name":"CodersHighDocument"}]},"hierarchy":{"paths":[["doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument"]]},"seeAlsoSections":[{"title":"Tech Blog","identifiers":["doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Tag_Cloud","doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Naver_API","doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Create_PlaygroundBook","doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Firebase_Timeline","doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Firebase_Chat","doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Calendar_Vot","doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_ReplayKit"],"generated":true}],"references":{"uisearchcontroller9.png":{"alt":"Image","type":"image","identifier":"uisearchcontroller9.png","variants":[{"url":"\/images\/uisearchcontroller9.png","traits":["1x","light"]}]},"doc://CodersHighDocument/documentation/CodersHighDocument/Article_Create_PlaygroundBook":{"role":"article","title":"플레이그라운드 북 만들기","abstract":[{"type":"text","text":"Posted: 2018.03.18 | By: 윤성관"}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Create_PlaygroundBook","kind":"article","type":"topic","url":"\/documentation\/codershighdocument\/article_create_playgroundbook"},"https://developer.apple.com/documentation/swift/array/2994718-filter":{"title":"Apple Developer","titleInlineContent":[{"type":"text","text":"Apple Developer"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swift\/array\/2994718-filter","url":"https:\/\/developer.apple.com\/documentation\/swift\/array\/2994718-filter"},"doc://CodersHighDocument/documentation/CodersHighDocument/Article_Tag_Cloud":{"role":"article","title":"3d 스크롤이 가능한 태그 클라우드 만들기","abstract":[{"type":"text","text":"Posted: 2018.09.05 | By: 김소연 (github.com\/aa9390)"}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Tag_Cloud","kind":"article","type":"topic","url":"\/documentation\/codershighdocument\/article_tag_cloud"},"uisearchcontroller8.png":{"alt":"Image","type":"image","identifier":"uisearchcontroller8.png","variants":[{"url":"\/images\/uisearchcontroller8.png","traits":["1x","light"]}]},"doc://CodersHighDocument/documentation/CodersHighDocument/Article_Naver_API":{"role":"article","title":"네이버 오픈 API를 이용한 영화 검색 애플리케이션 만들기","abstract":[{"type":"text","text":"Posted: 2018.08.20 | By: Sujin Kim (gfsusan@naver.com)"}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Naver_API","kind":"article","type":"topic","url":"\/documentation\/codershighdocument\/article_naver_api"},"doc://CodersHighDocument/documentation/CodersHighDocument/Article_Firebase_Chat":{"role":"article","title":"Firebase를 이용하여 채팅창 만들기","abstract":[{"type":"text","text":"Posted: 2017.06.17 | By: Hyunsoo Park"}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Firebase_Chat","kind":"article","type":"topic","url":"\/documentation\/codershighdocument\/article_firebase_chat"},"uisearchcontroller6.svg":{"alt":"Image","type":"image","identifier":"uisearchcontroller6.svg","variants":[{"url":"\/images\/uisearchcontroller6.svg","traits":["1x","light"]}]},"https://developer.apple.com/documentation/uikit/uisearchcontainerviewcontroller":{"title":"UISearchContainerViewController","titleInlineContent":[{"type":"text","text":"UISearchContainerViewController"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uisearchcontainerviewcontroller","url":"https:\/\/developer.apple.com\/documentation\/uikit\/uisearchcontainerviewcontroller"},"doc://CodersHighDocument/documentation/CodersHighDocument/Article_ReplayKit":{"role":"article","title":"ReplayKit을 이용해 여행 떠나기","abstract":[{"type":"text","text":"Posted: 2017.03.15 | By: Junyeong Yoo"}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_ReplayKit","kind":"article","type":"topic","url":"\/documentation\/codershighdocument\/article_replaykit"},"https://developer.apple.com/videos/play/wwdc2014/228/":{"title":"관련 정보 – A Look Inside Presentation Controllers","titleInlineContent":[{"type":"text","text":"관련 정보 – A Look Inside Presentation Controllers"}],"type":"link","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2014\/228\/","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2014\/228\/"},"doc://CodersHighDocument/documentation/CodersHighDocument/Article_Calendar_Vot":{"role":"article","title":"메시지 익스텐션을 이용한 Calendar-Vot 제작기","abstract":[{"type":"text","text":"Posted: 2017.03.17 | By: 염혜리(yhr7518@gmail.com)"}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Calendar_Vot","kind":"article","type":"topic","url":"\/documentation\/codershighdocument\/article_calendar_vot"},"uisearchcontroller3.svg":{"alt":"Image","type":"image","identifier":"uisearchcontroller3.svg","variants":[{"url":"\/images\/uisearchcontroller3.svg","traits":["1x","light"]}]},"doc://CodersHighDocument/documentation/CodersHighDocument/Article_Firebase_Timeline":{"role":"article","title":"Firebase를 이용하여 Timeline만들기","abstract":[{"type":"text","text":"Posted: 2018.01.13 | By: Byoungwook Park"}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Firebase_Timeline","kind":"article","type":"topic","url":"\/documentation\/codershighdocument\/article_firebase_timeline"},"uisearchcontroller4.png":{"alt":"Image","type":"image","identifier":"uisearchcontroller4.png","variants":[{"url":"\/images\/uisearchcontroller4.png","traits":["1x","light"]}]},"https://developer.apple.com/design/human-interface-guidelines/ios/bars/search-bars/":{"title":"Search Bars – Human Interface Guidelines","titleInlineContent":[{"type":"text","text":"Search Bars – Human Interface Guidelines"}],"type":"link","identifier":"https:\/\/developer.apple.com\/design\/human-interface-guidelines\/ios\/bars\/search-bars\/","url":"https:\/\/developer.apple.com\/design\/human-interface-guidelines\/ios\/bars\/search-bars\/"},"doc://CodersHighDocument/documentation/CodersHighDocument":{"role":"collection","title":"CodersHighDocument","abstract":[{"type":"text","text":"CodersHigh Document에 오신 것을 환영합니다!"},{"type":"text","text":" "},{"type":"text","text":"이곳에서는 CodersHigh에서 제작한 다양한 Article과 Tutorial을 확인할 수 있습니다."}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument","kind":"symbol","type":"topic","url":"\/documentation\/codershighdocument"},"uisearchcontroller1.png":{"alt":"Image","type":"image","identifier":"uisearchcontroller1.png","variants":[{"url":"\/images\/uisearchcontroller1.png","traits":["1x","light"]}]},"uisearchcontroller2.svg":{"alt":"Image","type":"image","identifier":"uisearchcontroller2.svg","variants":[{"url":"\/images\/uisearchcontroller2.svg","traits":["1x","light"]}]},"uisearchcontroller5.png":{"alt":"Image","type":"image","identifier":"uisearchcontroller5.png","variants":[{"url":"\/images\/uisearchcontroller5.png","traits":["1x","light"]}]},"https://github.com/quino0627/searchbar-2":{"title":"Basic Search Repository","titleInlineContent":[{"type":"text","text":"Basic Search Repository"}],"type":"link","identifier":"https:\/\/github.com\/quino0627\/searchbar-2","url":"https:\/\/github.com\/quino0627\/searchbar-2"},"https://github.com/quino0627/searchbar-2/tree/scope":{"title":"Search with scope Branch","titleInlineContent":[{"type":"text","text":"Search with scope Branch"}],"type":"link","identifier":"https:\/\/github.com\/quino0627\/searchbar-2\/tree\/scope","url":"https:\/\/github.com\/quino0627\/searchbar-2\/tree\/scope"},"uisearchcontroller7.png":{"alt":"Image","type":"image","identifier":"uisearchcontroller7.png","variants":[{"url":"\/images\/uisearchcontroller7.png","traits":["1x","light"]}]},"uisearchcontroller10.png":{"alt":"Image","type":"image","identifier":"uisearchcontroller10.png","variants":[{"url":"\/images\/uisearchcontroller10.png","traits":["1x","light"]}]}}}