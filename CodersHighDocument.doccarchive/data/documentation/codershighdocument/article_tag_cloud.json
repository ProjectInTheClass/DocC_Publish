{"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"이 글은 2018년 "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/ProjectInTheClass\/moongaemoongae"},{"type":"text","text":"을 정리한 글 입니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"이 글에서는 "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apparition47\/DBSphereTagCloudSwift"},{"type":"text","text":" 의 외부 라이브러리를 사용했습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"이번 포스트에서는 위\/아래\/좌\/우로 "},{"type":"strong","inlineContent":[{"type":"text","text":"3d 스크롤"}]},{"type":"text","text":"이 가능한 "},{"type":"strong","inlineContent":[{"type":"text","text":"태그 클라우드"}]},{"type":"text","text":"를 구현해 보겠습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"제가 수업에서 했던 프로젝트는 ‘졸뽀’라는 이름으로, 졸업생들의 작품을 태그로 분류하여 정보를 얻을 수 있게 하는 졸업 프로젝트 서포팅 애플리케이션입니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"초기에 조원들이 떠올렸던 아이디어는"}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“‘태그’를 구름으로 분류하고, 그 태그를 누르면 관련 프로젝트로 이동했으면 좋겠다”"}]}],"type":"aside","name":"Note"},{"type":"paragraph","inlineContent":[{"type":"text","text":"였으며 원래 구현하려고 했던 모습은 3d 스크롤이 아닌 평면 상에서 움직이는 구름의 모습이었습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"그러나 분류는 어찌어찌 한다고 해도, 태그를 어떻게 시각화하느냐가 제일 큰 문제였죠. 좀 더 입체감을 부여해 사용을 했을 때 재밌게 다가왔으면 했습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"tag, cloud, node…. 등으로 검색을 했고, 그 중 괜찮은 오픈소스를 커스텀하여 프로젝트에 적용했습니다. 구현 과정이 어렵지 않고, 결과물도 예쁘게 나오기 때문에 비슷한 효과를 원하시는 분들께 추천해 드리는 오픈소스입니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"여기서는 ‘태그’에 초점을 맞췄지만 실제로 구현하실 때는 태그뿐 아닌 이용자 사진을 넣은 주소록 같은 서비스에도 적용할 수 있으실 것 같습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"왼쪽 예시는 제가 수업에서 구현했던 화면이며, 오른쪽은 이번 포스트에서 만들어 볼 프로젝트입니다."}]},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/aa9390\/cloudtag-For-Website"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"tagcloud1_2.gif"}]},{"anchor":"시작하기","level":2,"type":"heading","text":"시작하기"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"tagcloud3.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"우리가 만들 프로젝트의 기본적인 동작 방식은 다음과 같습니다."}]},{"style":"note","content":[{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"태그 구름 클릭 시 해당 태그와 관련된 상세 구름이 등장한다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"상세 구름 클릭 시 상세 구름의 정보가 담긴 새로운 뷰로 이동한다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"배경을 클릭하면 등장했던 상세 구름이 사라진다."}]}]}]}],"type":"aside","name":"Note"},{"type":"paragraph","inlineContent":[{"type":"text","text":"우선 single view app으로 새로운 Xcode 프로젝트를 생성합니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"이 프로젝트에서는 Main.storyboard 안에 총 2개의 View Controller들을 생성할 것이며, 각각의 View Controller들은 다음과 같은 기능을 가지고 있습니다."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"태그 클라우드를 실제로 구현하는 뷰입니다."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"tagView : 태그 구름이 보여질 뷰입니다. 뷰에 직접 추가하지 않고, 코드 내에서 동적으로 생성합니다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"detailView : 상세 구름이 보여질 뷰입니다. 마찬가지로 코드 내에서 동적으로 생성합니다."}]}]}]}],"type":"aside","name":"[MainViewController] "},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"상세 구름 버튼 클릭 시 이동하는 뷰입니다."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"detailLabel : 상세 구름을 클릭했을 시, 구름의 타이틀이 출력됩니다."}]}]}]}],"type":"aside","name":"[DetailViewController] "},{"anchor":"cocoaPods-추가하기","level":2,"type":"heading","text":"cocoaPods 추가하기"},{"type":"paragraph","inlineContent":[{"type":"text","text":"태그 클라우드를 구현하기 위해서는 cocoaPods(이하 코코아팟)을 추가해야 합니다. 코코아팟 사이트의 설명에 따르면,"}]},{"style":"note","content":[{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"cocoaPods는 Swift 및 Objective-C 코코아 프로젝트의 종속성 관리자입니다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"28,000 개가 넘는 라이브러리를 가지고 있으며 170 만 개가 넘는 응용 프로그램(앱)에서 사용되고 있습니다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"cocoaPods는 프로젝트를 우아하게 확장 할 수 있도록 도와줍니다."}]}]}]}],"type":"aside","name":"Note"},{"type":"paragraph","inlineContent":[{"type":"text","text":"라고 되어있습니다. 한마디로, "},{"type":"strong","inlineContent":[{"type":"text","text":"외부 라이브러리를 연동할 수 있는 툴"}]},{"type":"text","text":"입니다. 안드로이드 개발을 해보신 분들은 gradle과 같은 역할을 한다고 생각하시면 될 것 같습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"코코아팟 설치를 위해서 터미널을 열고 다음 명령어를 입력합니다."}]},{"type":"codeListing","syntax":null,"code":["$ sudo gem install cocoapods"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"설치가 끝나셨다면, 본론으로 들어가 보겠습니다."}]},{"anchor":"메인-화면-구현하기","level":2,"type":"heading","text":"메인 화면 구현하기"},{"anchor":"1-DBsphereTagCloudSwift라이브러리를-Podfile에-추가합니다","level":4,"type":"heading","text":"1. DBsphereTagCloudSwift라이브러리를 Podfile에 추가합니다."},{"type":"paragraph","inlineContent":[{"type":"text","text":"터미널에서 "},{"type":"codeVoice","code":"vi Podfile"},{"type":"text","text":" 을 입력 후,"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"tagcloud4.png"}]},{"type":"codeListing","syntax":null,"code":["pod ‘DBSphereTagCloudSwift’, :git => “https:\/\/github.com\/apparition47\/DBSphereTagCloudSwift.git”, :submodules => true` "]},{"type":"paragraph","inlineContent":[{"type":"text","text":"을 입력합니다."}]},{"anchor":"2-터미널에서-pod-install을-입력하여-추가한-라이브러리를-프로젝트에-설치합니다","level":4,"type":"heading","text":"2. 터미널에서 pod install을 입력하여 추가한 라이브러리를 프로젝트에 설치합니다."},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"tagcloud5.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"모두 설치하셨으면 다음과 같이 라이브러리가 추가된 것을 확인하실 수 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"tagcloud6.png"}]},{"anchor":"3-workspace파일을-열고-viewControllerswift에-라이브러리를-import-합니다","level":4,"type":"heading","text":"3. workspace파일을 열고 viewController.swift에 라이브러리를 import 합니다."},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"tagcloud7.png"}]},{"anchor":"4-DBSphereView-타입의-tagView-detailView를-각각-선언합니다","level":4,"type":"heading","text":"4. DBSphereView 타입의 tagView, detailView를 각각 선언합니다."},{"type":"codeListing","syntax":"swift","code":["var tagView: DBSphereView!","var detailView: DBSphereView!"]},{"anchor":"5-골격이-되는-코드를-작성합니다","level":4,"type":"heading","text":"5. 골격이 되는 코드를 작성합니다."},{"type":"paragraph","inlineContent":[{"type":"text","text":"화면을 켰을 때부터 태그 클라우드가 보이게 하도록 viewDidLoad() 안에 입력합니다."}]},{"type":"codeListing","syntax":"swift","code":["import UIKit","import DBSphereTagCloudSwift","","class MainViewController: UIViewController {","    var tagView: DBSphereView!","    var detailView: DBSphereView!","  ","    override func viewDidLoad() {","        super.viewDidLoad()","        ","        tagView = DBSphereView(frame: CGRect(x: -200, y: -200, width: 1000, height: 1000))","        var array:Array<UIView> = []","      ","      \/\/ 버튼을 생성할 곳 ","        tagView.setCloudTags(array)","        self.view.addSubview(tagView)","    }","}"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"11 ~12 : tagView의 크기를 지정합니다."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"작업 중인 디바이스의 크기에 맞춰도 되지만, 편의를 위해 디바이스를 꽉 채우고도 남을 사이즈로 작업했습니다."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"위치와 크기를 가진 사각형 모양의 구조체로서 x, y는 기준점이 되는 좌푯값, width와 height는 너비, 높이 값입니다. "},{"type":"reference","isActive":true,"identifier":"https:\/\/stackoverflow.com\/questions\/30658045\/difference-between-cgsize-and-cgrect"}]}],"type":"aside","name":"[CGRect란?]"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"tagcloud8.png"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"13 : UIView의 배열을 array라는 변수로 선언하고, 초기화합니다. 이 배열은 15번째 줄의 setCloudTags()의 매개변수가 됩니다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"16 : tagView에 보일 클라우드 태그들을 설정하는 작업입니다."},{"type":"text","text":" "},{"type":"text","text":"setCloudTags()는 UIView의 배열을 인자로 받기 때문에 array에 들어갈 타입은 버튼 뿐 아니라 label, image 모두 가능합니다. 우리는 구름을 클릭할 수 있도록 할것이기 때문에 버튼을 추가하도록 하겠습니다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"17 : view에 tagView를 하위 뷰로 추가하여 우리가 만든 tagView가 보이도록 하는 작업입니다."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"기본 준비는 다 되었습니다. 이제 array에 들어갈 버튼만 만들면 되겠죠?"}]},{"anchor":"6-버튼에-들어갈-이미지-불러오기","level":4,"type":"heading","text":"6. 버튼에 들어갈 이미지 불러오기"},{"type":"paragraph","inlineContent":[{"type":"text","text":"적절한 이미지를 불러와 Assets폴더에 넣습니다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"tagcloud9.png"},{"type":"text","text":" "},{"type":"image","identifier":"tagcloud10.png"}]},{"anchor":"7-태그-클라우드에-들어갈-배열-설정-후-배열의-크기만큼-tagView에-설정하기","level":4,"type":"heading","text":"7. 태그 클라우드에 들어갈 배열 설정 후 배열의 크기만큼 tagView에 설정하기"},{"type":"codeListing","syntax":"swift","code":["class MainViewController: UIViewController {","    var tagView: DBSphereView!","    var detailView: DBSphereView!","    var tagAndDetailDic:[String:[String]]","        = [\"과일\":[\"사과\", \"배\", \"복숭아\", \"딸기\"], \"동물\":[\"코끼리\", \"강아지\"], \"감정\":[\"기쁨\", \"슬픔\", \"분노\"], \"교통수단\":[\"자동차\", \"자전거\", \"비행기\"], \"계절\":[\"봄\", \"여름\", \"가을\" ,\"겨울\"]]","    ","    override func viewDidLoad() {","        super.viewDidLoad()","        ","        tagView = DBSphereView(frame: CGRect(x: -200, y: -200, width: 1000, height: 1000))","        var array:Array<UIView> = []","        ","        for (key, value) in tagAndDetailDic {","          let btn: UIButton = UIButton(type: .custom)","          ","          \/\/ 버튼의 속성을 지정할 곳 ","          ","          array.append(btn)","          tagView.addSubview(btn)","        }","","        tagView.setCloudTags(array)","        self.view.addSubview(tagView)","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"태그와 상세 내용이 담긴 배열 두 개를 각각 만들어도 되나, 빠르게 설명해 드리기 위해 tagAndDetailDic 와 같이 태그를 key로 한 Dictionary를 선언했습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"key를 태그 구름으로, value를 상세 구름으로 쓸 것이기 때문에 value는 문자열이 담긴 배열의 형태로 선언했습니다."}]},{"anchor":"8-버튼의-속성-변경하기","level":4,"type":"heading","text":"8. 버튼의 속성 변경하기"},{"type":"codeListing","syntax":"swift","code":["for (key, value) in tagAndDetailDic {","            let btn: UIButton = UIButton(type: .custom)","            btn.setTitle(key, for: UIControlState())","            btn.setTitleColor(UIColor.black, for: .normal);","            btn.titleLabel?.font = UIFont.systemFont(ofSize: 18)","            btn.titleEdgeInsets = UIEdgeInsets(top: 0, left: 0 , bottom: 0, right: 0)","            btn.setBackgroundImage(UIImage(named:\"img_cloud_1\"), for: UIControlState())","            btn.frame = CGRect(x: 0, y: 0, width: 250, height: 150)","            btn.layer.masksToBounds = true","            btn.contentMode = UIViewContentMode.scaleAspectFit","            btn.addTarget(self, action: #selector(MainViewController.tagPressed(_:)), for: UIControlEvents.touchUpInside)","            array.add(btn)","            tagView.addSubview(btn)","        }"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"시각적으로 재미있는 효과를 주기 위해서는 이미지와 컬러가 다채로운 게 좋습니다. 우선 2번째 줄에서 UIButton의 타입을 custom으로 설정합니다."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"3~5 : 버튼의 타이틀, 색상, 폰트를 설정하는 작업입니다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"8~9 : 버튼의 배경 이미지를 설정하는 작업입니다. 앞에서 추가했던 구름 이미지의 이름을 named의 값으로 넣어주면 되겠습니다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"10 : width, height의 값을 조절하여 버튼의 크기를 설정합니다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"13 : 태그 구름을 클릭했을 때(touchUpInside) 상세 구름이 보이게 하도록 addTarget메소드를 추가합니다. selector인 tagPressed()는 아래서 구현하겠습니다."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"실행시켜보시면 다음과 같이 tagView가 추가된 것을 보실 수 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"tagcloud11.png"}]},{"anchor":"버튼-클릭-시-상세-구름-등장-애니메이션-구현하기","level":2,"type":"heading","text":"버튼 클릭 시 상세 구름 등장 애니메이션 구현하기"},{"anchor":"1-상세-구름에-대한-배열-받아오기","level":4,"type":"heading","text":"1. 상세 구름에 대한 배열 받아오기"},{"type":"codeListing","syntax":"swift","code":["@objc func tagPressed(_ btn: UIButton) {","        let detailArray = tagAndDetailtDic[(btn.titleLabel?.text)!]!","    }"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"태그에 대한 구름을 tagAndDetailDic의 key 값으로 받아왔으니, 이제는 해당 key에 담긴 value 값을 상세 구름의 타이틀로 지정할 차례입니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"btn은 우리가 클릭한 태그 구름입니다. 이 태그 구름의 타이틀을 tagAndDetailDic 에서 검색한 후 결괏값을 detailArray로 받아줍니다."}]},{"anchor":"2-상세-구름의-애니메이션-구현하기","level":4,"type":"heading","text":"2. 상세 구름의 애니메이션 구현하기"},{"type":"codeListing","syntax":"swift","code":["@objc func tagPressed(_ btn: UIButton) {","        let detailArray = tagAndDetailDic[(btn.titleLabel?.text)!]!","        tagView.timerStop()","        ","        UIView.animate(withDuration: 0.5, animations: {() -> Void in","            btn.transform = CGAffineTransform(scaleX: 3, y: 3)","            ","            \/\/ 클릭한 버튼을 중심으로 view가 새로 생성됨","            self.detailView = DBSphereView(frame: CGRect(x: (btn.frame.origin.x+100), y: (btn.frame.origin.y), width: 100, height: 100))","","            var array:Array<UIView> = []","            ","            for i in 0 ..< detailArray.count {","                let btn: UIButton = UIButton(type: UIButtonType.system)","                btn.setTitle(detailArray[i], for: UIControlState())","                btn.titleLabel?.font = UIFont.systemFont(ofSize: 13)","                btn.titleLabel?.sizeToFit()","                btn.titleEdgeInsets = UIEdgeInsets(top: 0, left: 0 , bottom: -10, right: 0)","                btn.layer.masksToBounds = true","                btn.setBackgroundImage(UIImage(named: \"img_cloud_2\"), for: UIControlState())","                btn.contentMode = UIViewContentMode.scaleAspectFit","                btn.frame = CGRect(x: 0, y: 0, width: 120, height: 70)","                btn.layer.cornerRadius = 0","                btn.addTarget(self, action: #selector(MainViewController.detailPressed(_:)), for: UIControlEvents.touchUpInside)","                array.append(btn)","                self.detailView.addSubview(btn)","            }","            self.detailView.setCloudTags(array)","            self.view.addSubview(self.detailView)","            self.view.bringSubview(toFront: self.detailView)","            \/\/ 배경 클릭 시 상세 구름이 사라지도록 구현할 곳 ","        }) {","            (finished) -> Void in UIView.animate(withDuration: 0.3, animations: {() -> Void in","                btn.transform = CGAffineTransform(scaleX: 1, y: 1)","            }, completion: { (finished) -> Void in","                self.detailView.timerStart()","            })","        }","    }"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"3 : 클릭한 태그 구름의 애니메이션을 잠시 멈춥니다."},{"type":"text","text":" "},{"type":"text","text":"애니메이션을 멈추고 움직이게 하는 메소드인 timerStop(), timerStart()를 사용하기 위해 DBSphereView.swift에서 해당 메소드의 접근 지정자를 internel이 아닌 public으로 선언합니다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"5 : 구름을 클릭할 때마다 그림이 커지고 작아지는 등의 애니메이션이 적용됨을 보실 수 있습니다. 이는 animate라는 메소드 때문인데, 원형은 다음과 같습니다. "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uiview\/1622515-animate"}]}]}]},{"type":"codeListing","syntax":"swift","code":["class func animate(withDuration duration: TimeInterval, ","        animations: @escaping () -> Void, ","        completion: ((Bool) -> Void)? = nil"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"간단하게 duration은 지연 시간, animations는 우리가 구현할 애니메이션의 내용이라고 보시면 좋을 것 같습니다."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"6~43 : 애니메이션의 내용입니다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"7 : CGAffineTransform 은 이미지의 크기를 변경해주는 메소드입니다. 양수일 경우 x, y에 설정한 값만큼 확대되며, 반대일 경우 축소됩니다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"9 : 상세 구름의 위치를 지정합니다."},{"type":"text","text":" "},{"type":"text","text":"태그 구름의 위치에서는 frame: CGRect(x: -200, y: -200, width: 1000, height: 1000) 와 같이 x, y 값을 직접 지정해 줬었죠? 이와 달리 상세 구름은 태그 구름 ‘주변에’ 등장하도록 할 것이기 때문에 클릭 된 태그 구름(btn)의 x, y 값이 기준이 되어야 합니다. btn.frame.origin.x, btn.frame.origin.y로 x, y 좌표 값을 구한 후 적절한 값을 지정해 줍니다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"38~42 : 상세 구름이 등장을 마쳤을 때 보일 애니메이션입니다. 이미지의 크기를 원래대로 되돌리고 ((scaleX: 1, y: 1)), timerStart()로 구름이 다시 움직이게 함을 보실 수 있습니다."}]}]}]},{"anchor":"3-배경-클릭-시-상세-구름이-사라지도록-구현하기","level":4,"type":"heading","text":"3. 배경 클릭 시 상세 구름이 사라지도록 구현하기"},{"type":"paragraph","inlineContent":[{"type":"text","text":"터치 이벤트를 받을 때는 주로 UIButton을 사용합니다. 그 외 확대 혹은 축소하거나, 길게 눌렀을 때의 이벤트는 어떻게 받을까요?"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"UIGestureRecognizer를 상속받아 사용하면 다양한 사용자의 제스처를 인식할 수 있습니다. "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uigesturerecognizer"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"tagcloud12.png"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Tap gesture recognizer : 화면을 두드리는(tap) 동작입니다. tap의 개수를 조절할 수 있습니다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swipe gesture recognizer : 상하좌우로 미는 동작입니다. 하나의 UISwipeGestureRecognizer로 모든 방향을 인식할 수 없고, 각 방향마다(up, down, left, right)의 UISwipeGestureRecognizer를 만들어야 합니다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Pan gesture recognizer : panning은 ‘카메라를 삼각대 위에 고정시켜 놓은 상태에서 움직이는 피사체를 따라 카메라를 수평으로 회전시키는 일’을 의미하며, 쉽게 말해 드래그(drag) 동작입니다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Pinch gesture recognizer : 두 손가락을 이용하여 확대 또는 축소하는 동작입니다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Rotation gesture recognizer : 두 손가락을 이용하여 회전하는 동작입니다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Screen gesture recognizer : 화면의 가장자리에서 panning하는 동작입니다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"LongPress gesture recognizer : 길게 누르는 동작입니다."}]}]}]},{"style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To make that association you must call the UIView method addGestureRecognizer(_:)."}]}],"type":"aside","name":"Tip"},{"type":"paragraph","inlineContent":[{"type":"text","text":"설명에 따르면, GestureRecognizer는 UIView에만 연결할 수 있고, addGestureRecognizer 메서드를 호출하여 사용한다고 되어 있습니다. 또한, 하나의 UIView에 두 개 이상의 GestureRecognizer를 연결할 수 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"여기서는 코드 내에서 GestureRecognizer를 구현하도록 하겠습니다."}]},{"type":"codeListing","syntax":"swift","code":["let gesture = UITapGestureRecognizer(target: self, action: #selector(ViewController.backgroundPressed(_:)))","self.tagView.addGestureRecognizer(gesture)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"UITapGestureRecognizer 는 말 그대로 tap 했을 때의 액션을 지정할 수 있는 메소드입니다. gesture라는 변수를 지정하고 tap을 감지했을 때 backgroundPressed라는 메소드를 타겟으로 지정합니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"detailView 입장에서 배경이 되는 tagView에 gesture를 add 합니다."}]},{"type":"codeListing","syntax":"swift","code":["@objc func backgroundPressed(_ sender:UITapGestureRecognizer){","            self.detailView.isHidden = true","        ","    }"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"backgroundPressed 메소드를 구현합니다. isHidden값을 true로 설정하여 detailView가 보이지 않도록 하면 되겠죠? self.detailView.removeFromSuperview() 메소드를 이용하면 뷰를 아예 사라지도록 할 수도 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"실행 결과는 다음과 같습니다. DBSphereView 타입의 tagView를 클릭하면, DBSphereView타입의 detailView가 추가됩니다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"tagcloud13.png"}]},{"anchor":"메인-화면과-상세-정보-화면간-이동-구현하기","level":2,"type":"heading","text":"메인 화면과 상세 정보 화면간 이동 구현하기"},{"anchor":"1-레이아웃-구성하기","level":4,"type":"heading","text":"1. 레이아웃 구성하기"},{"type":"paragraph","inlineContent":[{"type":"text","text":"올바른 값이 넘어왔는지 확인하기 위해서 상세 정보 뷰를 만들어 메인 뷰의 값을 넘겨주도록 하겠습니다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"tagcloud14.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"DetailViewController의 Storyboard ID를 “Detail”이라고 설정하고, 레이블을 넣어줍니다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"tagcloud15.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"레이블의 ID를 detailLabel로 설정하고, MainViewController의 상세 구름의 타이틀을 넘겨받을 변수를 labelText로 선언합니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"c2. 상세 구름 클릭 시 화면 전환 구현하기"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"위에서 tagPressed()안에 상세 뷰로 전환하는"}]},{"type":"codeListing","syntax":"swift","code":["btn.addTarget(self, action: #selector(ViewController.detailPressed(_:)), for: UIControlEvents.touchUpInside)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"를 썼던 것 기억하시나요? 이제 detailPressed를 정의해 보도록 하겠습니다."}]},{"type":"codeListing","syntax":"swift","code":["@objc func detailPressed(_ btn: UIButton) {","        let storyboard: UIStoryboard = UIStoryboard(name: \"Main\", bundle: nil)","        let nextView = storyboard.instantiateViewController(withIdentifier: \"Detail\") as! DetailViewController","        nextView.labelText = btn.titleLabel?.text","        nextView.title = \"Detail\"","        self.navigationController?.pushViewController(nextView, animated: true)","    }"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"2 : 우리가 이동할 DetailViewController 는 Main.storyboard 안에 있습니다. Main.storyboard의 값을 알기 위해서 UIStoryboard 타입의 변수를 선언한 후 name의 값을 “Main”으로 지정해 줍니다."},{"type":"text","text":" "},{"type":"text","text":"만약에 DetailViewController가 Detail.storyboard 안에 있다면 name의 값은 “Detail”이 되겠죠?"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"3 : 어느 스토리보드에 있는지 알았으니, 이제 뷰를 찾기만 하면 되겠습니다. 앞에서 선언한 storyboard의 ID를 instantiateViewController메소드의 인자로 넣어주고, 이를 nextView라는 변수로 선언합니다. nextView는 이제 DetailViewController 와 같다고 생각해 주시면 되겠습니다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"5 : 상세 뷰에 있는 레이블의 값을 선택한 상세 구름의 타이틀로 넣어주는 작업입니다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"7 : 마지막으로 뷰를 전환하는 작업입니다. ViewController는 현재 내비게이션 뷰 컨트롤러에 종속되어 있기 때문에 nextView를 push해 줍니다."}]}]}]},{"anchor":"3-넘겨받은-값을-화면에-뿌려주기","level":4,"type":"heading","text":"3. 넘겨받은 값을 화면에 뿌려주기"},{"type":"codeListing","syntax":"swift","code":["class DetailViewController: UIViewController {","","    @IBOutlet weak var detailLabel: UILabel!","    var labelText:String?","    ","    override func viewDidLoad() {","        super.viewDidLoad()","        ","        detailLabel.text = labelText","    }","","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"위에서 상세 구름의 타이틀을 labelText값으로 받았으니, detailLabel의 text 값을 labelText으로 대입해 줍니다."}]},{"anchor":"마치며","level":2,"type":"heading","text":"마치며"},{"type":"paragraph","inlineContent":[{"type":"text","text":"지금까지 태그 클라우드 구현 과정을 살펴보았습니다. 앞서 말씀드린 것처럼 커스텀의 방향에 따라 다양한 효과를 낼 수 있을 것으로 생각합니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"본 포스트에 대한 질문 혹은 제안 사항이 있으실 경우, 연락 주시기 바랍니다."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/codershighdocument\/article_tag_cloud"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Tag_Cloud","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Posted: 2018.09.05 | By: 김소연 (github.com\/aa9390)"}],"kind":"article","metadata":{"roleHeading":"Article","title":"3d 스크롤이 가능한 태그 클라우드 만들기","role":"article","modules":[{"name":"CodersHighDocument"}]},"hierarchy":{"paths":[["doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument"]]},"seeAlsoSections":[{"title":"Tech Blog","identifiers":["doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_UISearchController","doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Naver_API","doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Create_PlaygroundBook","doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Firebase_Timeline","doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Firebase_Chat","doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Calendar_Vot","doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_ReplayKit"],"generated":true}],"references":{"tagcloud8.png":{"alt":"Image","type":"image","identifier":"tagcloud8.png","variants":[{"url":"\/images\/tagcloud8.png","traits":["1x","light"]}]},"https://developer.apple.com/documentation/uikit/uigesturerecognizer":{"title":"참고 링크","titleInlineContent":[{"type":"text","text":"참고 링크"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uigesturerecognizer","url":"https:\/\/developer.apple.com\/documentation\/uikit\/uigesturerecognizer"},"tagcloud9.png":{"alt":"Image","type":"image","identifier":"tagcloud9.png","variants":[{"url":"\/images\/tagcloud9.png","traits":["1x","light"]}]},"doc://CodersHighDocument/documentation/CodersHighDocument/Article_Naver_API":{"role":"article","title":"네이버 오픈 API를 이용한 영화 검색 애플리케이션 만들기","abstract":[{"type":"text","text":"Posted: 2018.08.20 | By: Sujin Kim (gfsusan@naver.com)"}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Naver_API","kind":"article","type":"topic","url":"\/documentation\/codershighdocument\/article_naver_api"},"tagcloud1_2.gif":{"alt":"Image","type":"image","identifier":"tagcloud1_2.gif","variants":[{"url":"\/images\/tagcloud1_2.gif","traits":["1x","light"]}]},"doc://CodersHighDocument/documentation/CodersHighDocument/Article_Create_PlaygroundBook":{"role":"article","title":"플레이그라운드 북 만들기","abstract":[{"type":"text","text":"Posted: 2018.03.18 | By: 윤성관"}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Create_PlaygroundBook","kind":"article","type":"topic","url":"\/documentation\/codershighdocument\/article_create_playgroundbook"},"https://github.com/apparition47/DBSphereTagCloudSwift":{"title":"DBSphereTagCloudSwift","titleInlineContent":[{"type":"text","text":"DBSphereTagCloudSwift"}],"type":"link","identifier":"https:\/\/github.com\/apparition47\/DBSphereTagCloudSwift","url":"https:\/\/github.com\/apparition47\/DBSphereTagCloudSwift"},"https://github.com/aa9390/cloudtag-For-Website":{"title":"(샘플 코드 바로가기)","titleInlineContent":[{"type":"text","text":"(샘플 코드 바로가기)"}],"type":"link","identifier":"https:\/\/github.com\/aa9390\/cloudtag-For-Website","url":"https:\/\/github.com\/aa9390\/cloudtag-For-Website"},"https://stackoverflow.com/questions/30658045/difference-between-cgsize-and-cgrect":{"title":"출처:stackoverflow","titleInlineContent":[{"type":"text","text":"출처:stackoverflow"}],"type":"link","identifier":"https:\/\/stackoverflow.com\/questions\/30658045\/difference-between-cgsize-and-cgrect","url":"https:\/\/stackoverflow.com\/questions\/30658045\/difference-between-cgsize-and-cgrect"},"doc://CodersHighDocument/documentation/CodersHighDocument/Article_Calendar_Vot":{"role":"article","title":"메시지 익스텐션을 이용한 Calendar-Vot 제작기","abstract":[{"type":"text","text":"Posted: 2017.03.17 | By: 염혜리(yhr7518@gmail.com)"}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Calendar_Vot","kind":"article","type":"topic","url":"\/documentation\/codershighdocument\/article_calendar_vot"},"https://github.com/ProjectInTheClass/moongaemoongae":{"title":"서울여자대학교 GURU2 수업 결과물","titleInlineContent":[{"type":"text","text":"서울여자대학교 GURU2 수업 결과물"}],"type":"link","identifier":"https:\/\/github.com\/ProjectInTheClass\/moongaemoongae","url":"https:\/\/github.com\/ProjectInTheClass\/moongaemoongae"},"tagcloud5.png":{"alt":"Image","type":"image","identifier":"tagcloud5.png","variants":[{"url":"\/images\/tagcloud5.png","traits":["1x","light"]}]},"tagcloud14.png":{"alt":"Image","type":"image","identifier":"tagcloud14.png","variants":[{"url":"\/images\/tagcloud14.png","traits":["1x","light"]}]},"tagcloud4.png":{"alt":"Image","type":"image","identifier":"tagcloud4.png","variants":[{"url":"\/images\/tagcloud4.png","traits":["1x","light"]}]},"doc://CodersHighDocument/documentation/CodersHighDocument/Article_UISearchController":{"role":"article","title":"UISearchController로 검색 개발하기","abstract":[{"type":"text","text":"Posted: 2019.01.14 | By: Quino0627 (dongwook627@gmail.com)"}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_UISearchController","kind":"article","type":"topic","url":"\/documentation\/codershighdocument\/article_uisearchcontroller"},"doc://CodersHighDocument/documentation/CodersHighDocument/Article_Firebase_Timeline":{"role":"article","title":"Firebase를 이용하여 Timeline만들기","abstract":[{"type":"text","text":"Posted: 2018.01.13 | By: Byoungwook Park"}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Firebase_Timeline","kind":"article","type":"topic","url":"\/documentation\/codershighdocument\/article_firebase_timeline"},"tagcloud11.png":{"alt":"Image","type":"image","identifier":"tagcloud11.png","variants":[{"url":"\/images\/tagcloud11.png","traits":["1x","light"]}]},"tagcloud12.png":{"alt":"Image","type":"image","identifier":"tagcloud12.png","variants":[{"url":"\/images\/tagcloud12.png","traits":["1x","light"]}]},"doc://CodersHighDocument/documentation/CodersHighDocument":{"role":"collection","title":"CodersHighDocument","abstract":[{"type":"text","text":"CodersHigh Document에 오신 것을 환영합니다!"},{"type":"text","text":" "},{"type":"text","text":"이곳에서는 CodersHigh에서 제작한 다양한 Article과 Tutorial을 확인할 수 있습니다."}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument","kind":"symbol","type":"topic","url":"\/documentation\/codershighdocument"},"tagcloud15.png":{"alt":"Image","type":"image","identifier":"tagcloud15.png","variants":[{"url":"\/images\/tagcloud15.png","traits":["1x","light"]}]},"tagcloud13.png":{"alt":"Image","type":"image","identifier":"tagcloud13.png","variants":[{"url":"\/images\/tagcloud13.png","traits":["1x","light"]}]},"doc://CodersHighDocument/documentation/CodersHighDocument/Article_Firebase_Chat":{"role":"article","title":"Firebase를 이용하여 채팅창 만들기","abstract":[{"type":"text","text":"Posted: 2017.06.17 | By: Hyunsoo Park"}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Firebase_Chat","kind":"article","type":"topic","url":"\/documentation\/codershighdocument\/article_firebase_chat"},"tagcloud6.png":{"alt":"Image","type":"image","identifier":"tagcloud6.png","variants":[{"url":"\/images\/tagcloud6.png","traits":["1x","light"]}]},"tagcloud3.png":{"alt":"Image","type":"image","identifier":"tagcloud3.png","variants":[{"url":"\/images\/tagcloud3.png","traits":["1x","light"]}]},"https://developer.apple.com/documentation/uikit/uiview/1622515-animate":{"title":"참고 링크","titleInlineContent":[{"type":"text","text":"참고 링크"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uiview\/1622515-animate","url":"https:\/\/developer.apple.com\/documentation\/uikit\/uiview\/1622515-animate"},"tagcloud10.png":{"alt":"Image","type":"image","identifier":"tagcloud10.png","variants":[{"url":"\/images\/tagcloud10.png","traits":["1x","light"]}]},"doc://CodersHighDocument/documentation/CodersHighDocument/Article_ReplayKit":{"role":"article","title":"ReplayKit을 이용해 여행 떠나기","abstract":[{"type":"text","text":"Posted: 2017.03.15 | By: Junyeong Yoo"}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_ReplayKit","kind":"article","type":"topic","url":"\/documentation\/codershighdocument\/article_replaykit"},"tagcloud7.png":{"alt":"Image","type":"image","identifier":"tagcloud7.png","variants":[{"url":"\/images\/tagcloud7.png","traits":["1x","light"]}]}}}