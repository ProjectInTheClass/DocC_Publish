{"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"이번 포스트에서는 ReplayKit이라는 Framework를 이용해 스크린을 녹화하고 녹화한 영상을 공유하는 방법에 대해서 알려드리고자 합니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"ReplayKit은 WWDC 2015 Keynote에서 처음 발표가 된 Framework입니다. WWDC Keynote를 보면 ReplayKit Framework는 본래 사용자가 자신의 게임 플레이를 녹화하거나 방송을 할 수 있도록 지원하기 위해 만들어졌습니다. 그러나 꼭 게임 플레이만 녹화하라는 법이 있나요? 그래서 이번 포스트에서는 ReplayKit에서 제공하는 녹화와 방송 기능 중에서 녹화기능에 대해서 알아보고, 이를 이용해 움직이는 지도를 녹화하는 간단한 예제를 작성해보고자 합니다."}]},{"anchor":"시작하기에-앞서","level":2,"type":"heading","text":"시작하기에 앞서"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"움직이는 지도를 녹화하는 예제"}]},{"type":"text","text":"라고 하면 잘 와닿지 않으실 것 같아서 예시를 하나 보여드리고자 합니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"아래의 예시는 제가 최근에 만든 Memoravel이라는 애플리케이션에서 사용자의 여행 경로와 선택한 사진을 이용해 만들어진 동영상입니다. 물론 위 동영상은 ReplayKit으로 만들었으며, 지금부터 우리가 함께 공부할 코드를 기반으로 구현되었습니다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"replaykit1.gif"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"흥미가 있으신가요? 여러분들은 저보다 ReplayKit을 사용해서 훨씬 멋진 결과물을 만드실 수 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"그럼 이제 본론으로 돌아가서 여러분이 ReplayKit의 사용법을 익히실 수 있도록 초기 예제 프로젝트와 완성된 프로젝트를 "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/chizcake\/ReplayKitExample"},{"type":"text","text":"에 올려두었습니다. 초기 예제 프로젝트(ReplayKitExampleStarter)를 열어 포스트에 올려놓은 방법을 따라하며 프로젝트를 완성하셔도 좋고, 완성된 프로젝트(ReplayKitExampleComplete)를 참고해서 ReplayKit의 녹화 기능이 어떻게 동작하는지 한 눈에 보셔도 좋을 것 같습니다."}]},{"anchor":"예제-프로젝트에-대한-설명","level":2,"type":"heading","text":"예제 프로젝트에 대한 설명"},{"type":"paragraph","inlineContent":[{"type":"text","text":"예제 프로젝트는 다음과 같은 프로세스를 가집니다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"replaykit2.jpg"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"replaykit3.jpg"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"초기 예제 프로젝트(ReplayKitExampleStarter) 에서는 사용자가 지도 위에 표시할 "},{"type":"strong","inlineContent":[{"type":"text","text":"지역을 검색할 수 있는 view"}]},{"type":"text","text":"와 "},{"type":"strong","inlineContent":[{"type":"text","text":"입력한 지역을 확인할 수 있는 view"}]},{"type":"text","text":"가 구현되어 있습니다. 그리고 Record 버튼을 눌렀을 때 입력한 지역들이 지도 위에 pin으로 나타날 수 있도록 구현되어 있습니다. 이번 포스트의 취지는 ReplayKit의 사용법이므로, ReplayKit 기능 이외의 다른 기능의 설명은 생략하도록 하겠습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"(ReplayKit 이외에 이 프로젝트에 대해서 궁금한 사항이 있으시다면 언제든 연락주세요 :] )"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"참고로 본 예제는 MapKit을 이용해 지역을 검색하는 기능이 포함되어 있습니다. 따라서 "},{"type":"strong","inlineContent":[{"type":"text","text":"인터넷 접속이 가능한 환경에서 예제를 실행"}]},{"type":"text","text":"해야 제대로 된 결과를 확인하실 수 있습니다. 또한 Simulator가 아닌 실제 iPhone, iPad 기기를 통해 테스트 하는 것을 권장합니다. ReplayKit이 Simulator에서 올바르게 동작하지 않을 수 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"(혹시 Simulator에서도 ReplayKit이 올바르게 동작하는 방법이 있다면 알려주시면 감사하겠습니다. :])"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"아래의 모든 단계를 따라오신다면 다음과 같이 자동으로 움직이는 지도를 녹화한 동영상을 생성하실 수 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"replaykit4.gif"}]},{"anchor":"Step-1-녹화-시작-버튼-만들기","level":2,"type":"heading","text":"Step 1 – 녹화 시작 버튼 만들기"},{"type":"paragraph","inlineContent":[{"type":"text","text":"그럼 지금부터 함께 프로젝트를 진행해 보겠습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"우선, RecordViewController 화면 우측 상단에 버튼을 하나 만들겠습니다. 사용자가 버튼을 누르면 "},{"type":"strong","inlineContent":[{"type":"text","text":"화면 녹화가 시작되면서 동시에 지도가 자동으로 움직일 수 있게"}]},{"type":"text","text":" 만들고자 합니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"버튼을 만들고 RecordViewController에 "},{"type":"strong","inlineContent":[{"type":"text","text":"@IBAction"}]},{"type":"text","text":"과 "},{"type":"strong","inlineContent":[{"type":"text","text":"@IBOutlet"}]},{"type":"text","text":"으로 연결해줍니다. 지금 만든 버튼은 toggle 버튼처럼 사용하려고 합니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"사용자가 Start Recording 버튼을 누르면 녹화가 시작되고, 버튼을 한번 더 누르면 녹화가 중지될 수 있도록 만들겠습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"우선 다음과 같이 target method를 작성해 보겠습니다."}]},{"type":"codeListing","syntax":"swift","code":["@IBOutlet weak var barButton: UIBarButtonItem!","","@IBAction func barButtonAction(_ sender: UIBarButtonItem) {","  if sender.title == \"Start Recording\" {","    Log.info?.message(\"Start Recording!\")","    sender.title = \"Stop Recording\"","  } else if sender.title == \"Stop Recording\" {","    Log.info?.message(\"Stop Recording!\")","    sender.title = \"Start Recording\"","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"위에서 사용한 Log 클래스는 "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/emaloney\/CleanroomLogger"},{"type":"text","text":"에 정의되어 있습니다. 예시 프로젝트에는 이미 Carthage로 라이브러리를 추가한 상태이므로 그대로 사용하셔도 무방하지만, CleanroomLogger가 설치되지 않은 환경에서는 NSLog 혹은 본인이 원하는 방식으로 버튼이 잘 동작하는지 확인하시면 됩니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"위의 코드와 같이 작업을 진행하신 후에 코드를 실행 해보세요. 그럼 아래의 사진처럼 Bar button이 제대로 동작하는 것을 확인하실 수 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"replaykit5.jpg"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"그럼 이제 버튼이 "},{"type":"strong","inlineContent":[{"type":"text","text":"Start Recording"}]},{"type":"text","text":" 일 때 버튼을 누르면 녹화가 시작되고, "},{"type":"strong","inlineContent":[{"type":"text","text":"Stop Recording"}]},{"type":"text","text":" 일 때 버튼을 누르면 녹화가 중지될 수 있도록 메소드를 입력해 줍니다."}]},{"type":"codeListing","syntax":"swift","code":["@IBAction func barButtonAction(_ sender: UIBarButtonItem) {","  if sender.title == \"Start Recording\" {","    ...","    startRecording()","  } else if sender.title == \"Stop Recording\" {","    ...","    stopRecording()","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"startRecording() 메소드는 녹화를 시작하기 위해 필요한 절차가 담겨있고,"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"stopRecording() 메소드는 녹화를 종료하기 위해 필요한 절차가 담겨있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"두 메소드 아직 구현이 되어있지 않습니다. 지금부터 각각의 메소드를 함께 정의해 보겠습니다."}]},{"anchor":"Step-2-녹화-시작하기","level":2,"type":"heading","text":"Step 2 – 녹화 시작하기"},{"type":"paragraph","inlineContent":[{"type":"text","text":"지금부터는 ReplayKit을 사용하므로 "},{"type":"codeVoice","code":"import ReplayKit"},{"type":"text","text":" 을 통해 ReplayKit을 가져옵니다. 이제 "},{"type":"codeVoice","code":"startRecording() "},{"type":"text","text":"메소드를 구현해 보겠습니다."}]},{"type":"codeListing","syntax":"swift","code":["import ReplayKit","","class RecordViewController: UIViewController {","  \/\/ MARK: - Properties","  ...","  ","  \/\/ 0. 현재 녹화 여부를 확인합니다.","  var isRecording: Bool = false","  ...","  ","  func startRecording() {","    \/\/ 1. RPScreenRecorder 공유 객체를 호출합니다.","    let recorder = RPScreenRecorder.shared()","    ","    recorder.startRecording { (recordingError) in","      \/\/ 1-1. 녹화 중 에러가 발생하면 에러 메시지를 확인하고 메서드를 종료합니다.","      if let error = recordingError {","        Log.error?.message(error.localizedDescription)","        self.barButton.title = \"Start Recording\"","      } else {","        \/\/ 2. 녹화가 정상적으로 시작되면 지도를 자동으로 움직이게 합니다.","        self.isRecording = true","        self.startAnimatingMap()","      }","    }","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"위 코드에서 사용된 "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/reference\/replaykit\/rpscreenrecorder"},{"type":"text","text":"는 "},{"type":"strong","inlineContent":[{"type":"text","text":"현재 화면에 대해서 녹화를 시작하거나 종료하기 위해서 사용"}]},{"type":"text","text":"합니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"RPScreenRecorder는 공유객체를 사용하며, 객체가 가지고 있는 "},{"type":"strong","inlineContent":[{"type":"text","text":"startRecording 메소드를 호출함으로써 녹화를 시작"}]},{"type":"text","text":"하게 됩니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"녹화가 시작된 이후에 처리해야 할 일은 startRecording 메소드의 클로저 매개변수에 포함시키면 됩니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"위 코드에서는 녹화가 정상적으로 실행되었을 때 "},{"type":"codeVoice","code":"startAnimatingMap()"},{"type":"text","text":" 메소드를 호출함으로써, 녹화가 시작되면 자동으로 지도가 움직일 수 있도록 하였습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"그럼 이번에는 "},{"type":"codeVoice","code":"startAnimatingMap()"},{"type":"text","text":" 메소드와 "},{"type":"codeVoice","code":"stopAnimatingMap()"},{"type":"text","text":" 메소드를 구현해 보겠습니다."}]},{"type":"codeListing","syntax":"swift","code":["class RecordViewController: UIViewController {","  \/\/ MARK: - Properties","  var timer = Timer?","  var currentLocation: Int = 0","  ...","  ","  func startAnimatingMap() {","    if currentLocation == 0 {","      showLocationOnMap(index: currentLocation)","      currentLocation += 1","    }","    ","    \/\/ 3. 3초에 한 번씩 지도가 움직일 수 있도록 타이머를 설정해줍니다.","    timer = Timer.scheduleTimer(","      timeInterval: 3.0,","      target: self,","      selector: #selector(animatesMap),","      userInfo: nil,","      repeats: true","    )","  }","  ","  func animatesMap() {","    if currentLocation < placemarks.count {","      \/\/ 4. timer에 맞춰 지도가 움직이게 합니다.","      showLocationOnMap(index: currentLocation)","      currentLocation += 1","    } else {","      \/\/ 4-1. 지도가 모두 움직이면 timer를 종료하고 녹화를 종료합니다.","      stopAnimatingMap()","      currentLocation = 0","    }","  }","  ","  func stopAnimatingMap() {","    guard let timer = self.timer else { return }","    ","    \/\/ 5. 타이머를 종료합니다.","    timer.invalidate()","    self.timer = nil","    self.isRecording = false","    ","    \/\/ 6. 녹화를 종료합니다.","    stopRecording()","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"startAnimatingMap() 메소드에 대해서 좀 더 자세히 알아보겠습니다."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"currentLocation"}]},{"type":"text","text":"변수는 현재 지도 위에 표시되고 있는 지역의 인덱스를 나타냅니다. 초기값은 0으로 설정되어 있습니다. 또한 "},{"type":"strong","inlineContent":[{"type":"text","text":"placemarks"}]},{"type":"text","text":"배열은 사용자가 앞서 입력한 지역 데이터를 포함하고 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"showLocationOnMap(index:)"}]},{"type":"text","text":" 메소드는 매개변수로 받은 인덱스의 위치로 지도를 움직입니다. 만약 showLocationOnMap(index: 0) 이라면 placemarks 배열의 0번째 인덱스에 저장된 지역을 지도 위에 보여주게 됩니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Timer는 3초마다 한 번씩 "},{"type":"codeVoice","code":"animatesMap()"},{"type":"text","text":" 메소드를 호출하도록 설정되어 있습니다. animatesMap() 메소드는 사용자가 입력한 지역을 지도 위에 보여주는 역할을 합니다. 따라서 3초마다 지도는 사용자가 입력한 다음 지역으로 자동으로 움직이게 됩니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"만약 사용자가 입력한 모든 지역을 지도 위에 모두 보여주었다면, stopAnimatingMap() 메소드를 호출해서 Timer를 종료시키고 녹화를 중지하는 "},{"type":"codeVoice","code":"stopRecording()"},{"type":"text","text":" 메소드를 호출하게 됩니다."}]},{"anchor":"Step-3-녹화-종료하기","level":2,"type":"heading","text":"Step 3 – 녹화 종료하기"},{"type":"paragraph","inlineContent":[{"type":"text","text":"다음은 "},{"type":"codeVoice","code":"stopRecording()"},{"type":"text","text":" 메소드를 구현해서 녹화를 끝내는 방법에 대해서 알아보겠습니다. "},{"type":"codeVoice","code":"stopRecording()"},{"type":"text","text":" 메소드가 호출되는 경우는 크게 두 가지가 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"첫번째는 사용자가 녹화 중간에 종료 버튼을 눌렀을 경우입니다. 두번째는 지도 위의 애니메이션이 모두 종료된 후 자동으로 녹화가 종료되는 경우입니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"이 두가지 경우를 모두 생각하여 메소드를 구현해 보겠습니다."}]},{"type":"codeListing","syntax":"swift","code":["func stopRecording() {","  let recorder = RPScreenRecorder.shared()","  ","  if isRecording {","    \/\/ 7-1. 사용자가 녹화 중간에 녹음을 종료하는 경우","    Log.warning?.message(\"Stop recording unexpectedly\")","    recorder.stopRecording(handler: { (previewController, recordingError) in","      if let error = recordingError {","        Log.error?.message(error.localizedDescription)","      } else {","        \/\/ 현재 녹화되고 있던 내용을 모두 버립니다.","        recorder.discardRecording {","          self.timer?.invalidate()","          self.timer = nil","          self.currentLocation = 0","        }","      }","    })","  } else {","    \/\/ 7-2. 지도가 모두 움직인 후, 정상적으로 녹화 종료","    Log.info?.message(\"Stop recording normally\")","    recorder.stopRecording(handler: { (previewController, recordingError) in","      if let error = recordingError {","        Log.error?.message(error.localizedDescription) ","      } else {","        \/\/ 7-3. 녹화 결과를 보여주는 PreviewViewController 호출 ","        if let controller = previewController {","          controller.previewControllerDelegate = self","          self.present(controller, animated: true, completion: nil)","        } else {","          Log.warning?.message(\"There's no PreviewController\") ","        }","      }","    })","  }","  ","  \/\/ 7-4. 녹화가 종료되면 화면을 초기 상태로 돌려줍니다. ","  barButton.title = \"Start Recording\"","  showLocationOnMap(index: 0)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"앞서 startRecording() 메소드를 구현할 때와 마찬가지로 "},{"type":"strong","inlineContent":[{"type":"text","text":"RPScreenRecorder의 공유객체를 사용"}]},{"type":"text","text":"합니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"만약 녹화가 진행되고 있는 상태(isRecording)에서 stopRecording() 메소드가 호출되었다면, 사용자가 녹화를 중지한 것이라고 판단할 수 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"반면 녹화가 진행되고 있지 않은 상태라면 지도 애니메이션이 끝까지 진행되어 정상적으로 녹화를 중지해야 할 때라고 판단할 수 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"replaykit6.jpg"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"위 다이어그램은 RPScreenRecorder의 stopRecording() 메소드가 취할 수 있는 2가지 행동을 보여줍니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"우선 사용자가 "},{"type":"strong","inlineContent":[{"type":"text","text":"녹화를 중단한 상태"}]},{"type":"text","text":"라면, stopRecording() 의 클로저 안에서 discardRecording() 함수를 실행시킬 수 있습니다. discardRecording() 은 현재 녹화하고 있던 내용을 지울 때 사용합니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"주의하실 점은 "},{"type":"strong","inlineContent":[{"type":"text","text":"discardRecording() 메소드는 stopRecording() 클래스의 클로저 안에서만 동작할 수 있다"}]},{"type":"text","text":"는 점입니다. 여기서는 discardRecording() 메소드를 통해 Timer를 해지시켰습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"이번에는 지도 애니메이션이 종료되어 정상적으로 녹화를 종료하는 부분에 대해서 살펴보겠습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"stopRecording() 메소드가 가지고 있는 클로저에는 매개변수로 RPPreviewViewController를 가지고 있습니다. RPPReviewViewController는 녹화된 동영상을 저장, 공유할 수 있고 원하는 부분만 잘라내어 저장할 수 있는 다양한 기능을 포함하고 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"여기서는 녹화가 정상적으로 종료되었을 때 RPPreviewViewController를 modal로 띄워서 보여주도록 구현하였습니다."}]},{"anchor":"Step-4-PreviewViewController로-녹화-영상-확인하기","level":2,"type":"heading","text":"Step 4 – PreviewViewController로 녹화 영상 확인하기"},{"type":"paragraph","inlineContent":[{"type":"text","text":"이번에는 RPPreviewViewControllerDelegate를 사용해서 PreviewViewController에서 화면을 처리하는 방법을 구현해 보겠습니다."}]},{"type":"codeListing","syntax":"swift","code":["extension RecordViewController: RPPreviewViewControllerDelegate {","  func previewControllerDidFinish(_ previewController: RPPreviewViewController) {","    \/\/ 8. PreviewViewController에서 작업이 끝나면 화면을 MasterViewController로 이동합니다.","    previewController.dismiss(animated: true) {","      let _ = self.navigationController?.popViewController(animated: true) ","    }","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"위의 코드에서는 RPPreviewViewControllerDelegate 중 previewControllerDidFinish(:) 메소드를 사용해서 RPPreviewViewController에서 작업이 끝나면 MasterViewController로 돌아가도록 설정하였습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"previewControllerDidFinish(:) 메소드는 사용자가 RPPreviewViewController에서 Cancel 혹은 Save 버튼을 눌렀을 때 호출이 됩니다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"replaykit7.jpg"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"여기까지 잘 따라오셨나요? 그럼 코드를 한번 실행시켜 보세요. 원하는 지역을 입력한 후에 녹화를 시작하면 자동으로 지도가 움직이고 애니메이션이 종료되었을 때 자동으로 RPPreviewViewController가 modal형태로 올라오는 것을 확인하실 수 있을겁니다. RPPreviewViewController는 위의 사진과 같이 생겼답니다 :]"}]},{"anchor":"Step-5-녹화-화면-다듬기","level":2,"type":"heading","text":"Step 5 – 녹화 화면 다듬기"},{"type":"paragraph","inlineContent":[{"type":"text","text":"이제 모든 작업이 다 끝났습니다. 여러분은 본인이 입력한 지역에 따라 자동으로 움직이는 지도를 녹화하는 애플리케이션을 만들었습니다. 그런데 한가지 아쉬운 점이 있네요."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"여러분이 녹화한 화면을 유심히 보셨다면, 화면 위의 Navigation Bar가 그대로 노출이 되어있는 것을 볼 수 있을겁니다. "},{"type":"strong","inlineContent":[{"type":"text","text":"ReplayKit은 현재 스크린을 통째로 녹화"}]},{"type":"text","text":"하기 때문에 원하지 않는 부분은 녹화가 시작되기 전에 숨겨야 합니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"그럼 지금부터 녹화가 시작될 때 Navigation Bar를 숨기는 부분을 구현해 보겠습니다."}]},{"type":"codeListing","syntax":"swift","code":["class RecordViewController: UIViewController {","  \/\/ MARK: - Properties","  ...","  ","  \/\/ 9. 녹화가 시작되면 status bar를 감춥니다.","  override var prefersStatusBarHidden: Bool {","    return (self.navigationController?.isNavigationBarHidden)!","  }","  ","  ...","  func startRecording() {","    ...","    \/\/ 10. 녹화가 시작되면 navigation bar를 숨겨줍니다.","    self.navigationController?.isNavigationBarHidden = true","    ...","  }","  ","  func stopRecording() {","    ...","    \/\/ 11. 녹화가 종료되면 navigation bar를 복구합니다.","    self.navigationController?.isNavigationBarHidden = false","  }","  ","  override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {","    if isRecording {","      \/\/ 녹화중에 화면을 터치하면 숨겨진 navigation bar를 다시 보여줍니다. -> 사용자가 녹화를 중간에 중지할 수 있도록!","      if (navigationController?.isNavigationBarHidden)! {","        navigationController?.isNavigationBarHidden = false","      } else {","        navigationController?.isNavigationBarHidden = true","      }","    }","  }","}","view raw"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"위의 방법대로 코드를 구현하신 다음 다시 실행해보세요. 이제 지도만 녹화가 된 것을 확인하실 수 있습니다!"}]},{"anchor":"마치며","level":2,"type":"heading","text":"마치며"},{"type":"paragraph","inlineContent":[{"type":"text","text":"지금까지 ReplayKit의 녹화 기능에 대해서 간단하게 살펴 보았습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"RPScreenRecorder를 사용하면 간단하게 현재 스크린을 녹화할 수 있으며, 녹화한 결과는 RPPreviewViewController를 이용해 다양하게 사용할 수 있다는 것을 확인해 보았습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"프로젝트의 좀 더 자세한 구현 내용은 앞서 올려드린 "},{"overridingTitleInlineContent":[{"type":"text","text":"Github"}],"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/chizcake\/ReplayKitExample","overridingTitle":"Github"},{"type":"text","text":"의 ReplayKitExampleComplete를 통해 확인해 볼 수 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"본 포스트에 대한 제안 사항이나 궁금하신 점이 있다면 언제든 연락 주시면 감사하겠습니다."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/codershighdocument\/article_replaykit"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_ReplayKit","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Posted: 2017.03.15 | By: Junyeong Yoo"}],"kind":"article","metadata":{"roleHeading":"Article","title":"ReplayKit을 이용해 여행 떠나기","role":"article","modules":[{"name":"CodersHighDocument"}]},"hierarchy":{"paths":[["doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument"]]},"seeAlsoSections":[{"title":"Tech Blog","identifiers":["doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_UISearchController","doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Tag_Cloud","doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Naver_API","doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Create_PlaygroundBook","doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Firebase_Timeline","doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Firebase_Chat","doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Calendar_Vot"],"generated":true}],"references":{"doc://CodersHighDocument/documentation/CodersHighDocument/Article_UISearchController":{"role":"article","title":"UISearchController로 검색 개발하기","abstract":[{"type":"text","text":"Posted: 2019.01.14 | By: Quino0627 (dongwook627@gmail.com)"}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_UISearchController","kind":"article","type":"topic","url":"\/documentation\/codershighdocument\/article_uisearchcontroller"},"doc://CodersHighDocument/documentation/CodersHighDocument":{"role":"collection","title":"CodersHighDocument","abstract":[{"type":"text","text":"CodersHigh Document에 오신 것을 환영합니다!"},{"type":"text","text":" "},{"type":"text","text":"이곳에서는 CodersHigh에서 제작한 다양한 Article과 Tutorial을 확인할 수 있습니다."}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument","kind":"symbol","type":"topic","url":"\/documentation\/codershighdocument"},"doc://CodersHighDocument/documentation/CodersHighDocument/Article_Naver_API":{"role":"article","title":"네이버 오픈 API를 이용한 영화 검색 애플리케이션 만들기","abstract":[{"type":"text","text":"Posted: 2018.08.20 | By: Sujin Kim (gfsusan@naver.com)"}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Naver_API","kind":"article","type":"topic","url":"\/documentation\/codershighdocument\/article_naver_api"},"doc://CodersHighDocument/documentation/CodersHighDocument/Article_Calendar_Vot":{"role":"article","title":"메시지 익스텐션을 이용한 Calendar-Vot 제작기","abstract":[{"type":"text","text":"Posted: 2017.03.17 | By: 염혜리(yhr7518@gmail.com)"}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Calendar_Vot","kind":"article","type":"topic","url":"\/documentation\/codershighdocument\/article_calendar_vot"},"doc://CodersHighDocument/documentation/CodersHighDocument/Article_Firebase_Timeline":{"role":"article","title":"Firebase를 이용하여 Timeline만들기","abstract":[{"type":"text","text":"Posted: 2018.01.13 | By: Byoungwook Park"}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Firebase_Timeline","kind":"article","type":"topic","url":"\/documentation\/codershighdocument\/article_firebase_timeline"},"replaykit6.jpg":{"alt":"Image","type":"image","identifier":"replaykit6.jpg","variants":[{"url":"\/images\/replaykit6.jpg","traits":["1x","light"]}]},"doc://CodersHighDocument/documentation/CodersHighDocument/Article_Tag_Cloud":{"role":"article","title":"3d 스크롤이 가능한 태그 클라우드 만들기","abstract":[{"type":"text","text":"Posted: 2018.09.05 | By: 김소연 (github.com\/aa9390)"}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Tag_Cloud","kind":"article","type":"topic","url":"\/documentation\/codershighdocument\/article_tag_cloud"},"https://github.com/chizcake/ReplayKitExample":{"title":"Github","titleInlineContent":[{"type":"text","text":"Github"}],"type":"link","identifier":"https:\/\/github.com\/chizcake\/ReplayKitExample","url":"https:\/\/github.com\/chizcake\/ReplayKitExample"},"doc://CodersHighDocument/documentation/CodersHighDocument/Article_Create_PlaygroundBook":{"role":"article","title":"플레이그라운드 북 만들기","abstract":[{"type":"text","text":"Posted: 2018.03.18 | By: 윤성관"}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Create_PlaygroundBook","kind":"article","type":"topic","url":"\/documentation\/codershighdocument\/article_create_playgroundbook"},"replaykit1.gif":{"alt":"Image","type":"image","identifier":"replaykit1.gif","variants":[{"url":"\/images\/replaykit1.gif","traits":["1x","light"]}]},"https://github.com/emaloney/CleanroomLogger":{"title":"CleanroomLogger","titleInlineContent":[{"type":"text","text":"CleanroomLogger"}],"type":"link","identifier":"https:\/\/github.com\/emaloney\/CleanroomLogger","url":"https:\/\/github.com\/emaloney\/CleanroomLogger"},"replaykit5.jpg":{"alt":"Image","type":"image","identifier":"replaykit5.jpg","variants":[{"url":"\/images\/replaykit5.jpg","traits":["1x","light"]}]},"replaykit2.jpg":{"alt":"Image","type":"image","identifier":"replaykit2.jpg","variants":[{"url":"\/images\/replaykit2.jpg","traits":["1x","light"]}]},"replaykit4.gif":{"alt":"Image","type":"image","identifier":"replaykit4.gif","variants":[{"url":"\/images\/replaykit4.gif","traits":["1x","light"]}]},"replaykit7.jpg":{"alt":"Image","type":"image","identifier":"replaykit7.jpg","variants":[{"url":"\/images\/replaykit7.jpg","traits":["1x","light"]}]},"replaykit3.jpg":{"alt":"Image","type":"image","identifier":"replaykit3.jpg","variants":[{"url":"\/images\/replaykit3.jpg","traits":["1x","light"]}]},"doc://CodersHighDocument/documentation/CodersHighDocument/Article_Firebase_Chat":{"role":"article","title":"Firebase를 이용하여 채팅창 만들기","abstract":[{"type":"text","text":"Posted: 2017.06.17 | By: Hyunsoo Park"}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Firebase_Chat","kind":"article","type":"topic","url":"\/documentation\/codershighdocument\/article_firebase_chat"},"https://developer.apple.com/reference/replaykit/rpscreenrecorder":{"title":"RPScreenRecorder","titleInlineContent":[{"type":"text","text":"RPScreenRecorder"}],"type":"link","identifier":"https:\/\/developer.apple.com\/reference\/replaykit\/rpscreenrecorder","url":"https:\/\/developer.apple.com\/reference\/replaykit\/rpscreenrecorder"}}}