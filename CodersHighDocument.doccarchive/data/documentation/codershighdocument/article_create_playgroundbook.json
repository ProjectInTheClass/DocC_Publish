{"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"코더스하이에서 플레이그라운드 북을 만든 경험을 토대로 간단한 튜토리얼을 제공합니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"많은 학생들이 WWDC Scholarship을 얻는 데 도움이 되길 바랍니다."}]},{"anchor":"1-시작하기","level":2,"type":"heading","text":"1. 시작하기"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"플레이그라운드 북"}]},{"type":"text","text":"은 iPad의 Swift Playground 앱 내에서 사용하는 책 콘텐츠이다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"애플은 지난 2016년, 코딩 교육에 Swift 언어를 활용할 수 있도록 Swift Playground 앱을 만들고 대표 콘텐츠로 LearnToCode 1, 2, 3권을 배포했다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"article_create_playgroundbook_1.png"}]},{"anchor":"a-준비물","level":4,"type":"heading","text":"a. 준비물"},{"type":"paragraph","inlineContent":[{"type":"text","text":"현재로서는 Mac의 Xcode에서만 플레이그라운드 북을 저술할 수 있으며, 결과물을 확인하기 위해서는 iPad 디바이스에 있는 스위프트 플레이그라운드에 넣어줘야 한다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"iPhone에는 Swift Playground 앱이 없기 때문에 콘텐츠를 확인할 방법이 없으며, 시뮬레이터에서 제공하는 iPad 역시 Swift Playground 앱이 없기 때문에 결과를 확인하는 데 사용할 수 없다. 즉,"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Xcode 9 이상이 설치되어 있는 맥"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"결과물을 보기 위한 iPad"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"가 필요하며, 자동으로 결과물을 연동할 수 있도록 iCloud 계정을 준비하는 게 편리하다."}]},{"anchor":"b-마음의-준비","level":4,"type":"heading","text":"b. 마음의 준비"},{"type":"paragraph","inlineContent":[{"type":"text","text":"앞서 말한 것처럼 플레이그라운드 북 만들기는 어렵다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift 언어를 충분히 이해하고 있어야 하며, 앱을 완성해 본 수준으로 Xcode를 다룰 수 있어야 한다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"앱 개발 시에는 구글에 키워드만 잘 치면 당장 붙여 넣을 수 있는 코드를 몇 페이지 검색할 수 있는 반면, 플레이그라운드 북은 레퍼런스 문서 하나와 비디오 몇 편에 있는 정보를 제외하고는 가이드 문서나 튜토리얼이 없다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"구글 검색을 해도 거의 나오지 않는다. (이것이 내가 이 글을 쓰게 된 이유이기도 하다)"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"다행히, 애플이 지난 2년간 만들어 둔 다양한 콘텐츠들이 있으므로 이 콘텐츠들을 해킹하듯 분석해 보면 내가 표현하고자 하는 플레이그라운드 북을 만들 수 있을 것이다."}]},{"anchor":"c-참고자료","level":4,"type":"heading","text":"c. 참고자료"},{"type":"paragraph","inlineContent":[{"type":"text","text":"애플이 제공하는 공식적인 자료는 아래와 같다."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"문서"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/library\/content\/documentation\/Xcode\/Conceptual\/swift_playgrounds_doc_format\/index.html"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"비디오"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2016\/408\/"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2017\/408\/"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2017\/410\/"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2017\/605\/"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2017\/416\/"}]}]}]}]}]},{"anchor":"d-공식-스타터-킷","level":4,"type":"heading","text":"d. 공식 스타터 킷"},{"type":"paragraph","inlineContent":[{"type":"text","text":"애플이 제공하는 "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/sample-code\/swift\/downloads\/Playgrounds-Starter-Book.zip"},{"type":"text","text":" 받을 수 있다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Starter.playgroundbook 파일의 컨텍스추얼 메뉴(오른쪽 클릭) 에서 Show Package Contents 버튼을 누르면 번들 내부를 확인 할 수 있다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"article_create_playgroundbook_2.jpg"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"article_create_playgroundbook_3.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"스타터 킷의 번들 내부를 보면, Chapter 폴더 안에 하나의 .playgroundchapter 폴더가 있고, 그 안에 있는 Pages 폴더를 보면 2개의 .playgroundpage 폴더가 나온다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"하나의 챕터에 2개의 페이지가 있는 구조이다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Page1.playgroundpage 파일의 Content.swift 파일을 더블클릭하면 Xcode의 에디터가 열려서 내용을 수정할 수 있다."}]},{"anchor":"폴더구성","level":4,"type":"heading","text":"폴더구성"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":".playgroundbook : 최상위 폴더. 책 번들"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":".playgroundchapter : 챕터 폴더"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":".playgroundpage : 개별 페이지 폴더"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":".cutscenepage : 컷 씬 (챕터 시작 애니메이션) 페이지 폴더"}]}]}]},{"anchor":"Manifest-파일","level":4,"type":"heading","text":"Manifest 파일"},{"type":"paragraph","inlineContent":[{"type":"text","text":"각 단계마다 콘텐츠의 속성을 정의하는 plist(링크) 포맷의 manifest 파일이 있다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"패이지나 챕터를 추가하는 등 내용을 수정할 때마다 해당 manifest 파일을 수정해야 한다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"page의 manifest에는 hint 항목이 있어서 사용자에게 힌트를 제공하기도 한다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"우리가 만드는 플레이그라운드 북은 하나의 챕터와 하나의 페이지를 가지는 앱이다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":".playgroundbook의 manifest 에는 하나의 챕터 이름이 정확히 들어가 있어야 하며, .playgroundchapter에 있는 manifest 에는 하나의 페이지 이름이 정확히 들어가 있어야 한다."}]},{"anchor":"e-화면-구성","level":4,"type":"heading","text":"e. 화면 구성"},{"type":"paragraph","inlineContent":[{"type":"text","text":"플레이그라운드 북은 아래와 같이 3영역으로 나뉘어져 있다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"article_create_playgroundbook_4.jpg"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"LiveView"}]},{"type":"text","text":" : 코드 실행의 결과를 볼 수 있는 곳이다. LiveView.swift 파일의 내용이 나타난다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"article_create_playgroundbook_5.jpg"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Prose"}]},{"type":"text","text":" : 페이지에 대한 설명 콘텐츠가 들어가는 곳이다. Content.swift 파일의 내용이 나타난다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"article_create_playgroundbook_6.jpg"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Code"}]},{"type":"text","text":" : 독자가 코드를 작성할 수 있는 곳이다. Content.swift 파일의 내용이 나타난다."}]},{"anchor":"2-Sample--CodingRabbitPirate-플레이그라운드-북-만들기","level":2,"type":"heading","text":"2. Sample : CodingRabbitPirate 플레이그라운드 북 만들기"},{"type":"paragraph","inlineContent":[{"type":"text","text":"우리는 간단한 플레이그라운드 북 콘텐츠를 하나 만들어 볼 예정이다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"애플의 공식 스타터 킷을 이용해도 되지만 리소스등을 확보하기 어려우므로 "},{"type":"reference","isActive":true,"identifier":"https:\/\/codershigh.dscloud.biz\/techblogs\/tb_005_playgroundbook\/tb005_media\/Example_Start.zip"},{"type":"text","text":"을 다운로드 받아서 수정하자."}]},{"anchor":"a-개발-환경-만들기","level":4,"type":"heading","text":"a. 개발 환경 만들기"},{"type":"paragraph","inlineContent":[{"type":"text","text":"이제 본격적으로 플레이그라운드 북 콘텐츠를 제작하기 전에 작업 환경을 만들어 보자."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"작성한 코드를 실행해 보기 위해서는 플레이그라운드 북 파일을 iPad의 Swift Playground앱 안으로 넣어야 한다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Mac에서 iPad로 파일을 복사하는 방법은 아래 두가지가 있다."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"iPad의 설정에서 SwiftPlayground 를 iCloud 공유하도록 설정한 뒤 Mac 의 iCloud 에서 해당 폴더의 파일들을 수정한 뒤 동기화 시킨다."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Mac에서 플레이그라운드 파일을 선택한 뒤, AirDrop으로 iPad에 복사하면 SwiftPlayground 앱에서 열 수 있다."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"플레이그라운드 북에서 사용하는 Swift 파일들은 UIKit을 import하지만 메소드의 자동 완성 제안이 제대로 동작하지 않기 때문에, 복잡한 콘텐츠를 만들 때는 iOS 앱을 만들어 코드를 충분히 테스트 한 뒤 플레이그라운드 북으로 변환하는 게 좋다."}]},{"anchor":"b-페이지-목표","level":4,"type":"heading","text":"b. 페이지 목표"},{"type":"paragraph","inlineContent":[{"type":"text","text":"첫 페이지에서 우리는 기본적인 Prose 를 만드는 방법을 알아보고, 코드 영역의 일부를 숨기고 일부를 노출시켜 볼 것이다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"라이브 뷰는 최대한 간단하게 하기 위해 코드로만 작성한다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"페이지의 시각적 구성에 대한 설명과 이미지가 추가되어야 함"}]},{"anchor":"c-Prose-만들기","level":4,"type":"heading","text":"c. Prose 만들기"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Prose는 페이지에서 제시하는 문제에 대한 설명을 하는 곳이다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"마크업 형태의 구문으로 형태를 갖춘 텍스트를 플레이그라운드 북 안에 넣을 수 있다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"앞 서 소개한 Playground Book Format Reference 문서 내의 "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/library\/content\/documentation\/Xcode\/Conceptual\/swift_playgrounds_doc_format\/PageAnnotationOverview.html"},{"type":"text","text":" 문서와 "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/library\/content\/documentation\/Xcode\/Reference\/xcode_markup_formatting_ref\/index.html"},{"type":"text","text":" 에서 자세히 설명하고 있다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"여기에서는 최소한의 Prose 작성법을 알아보자."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"\/* : 부터 시작해서 *\/ 까지가 플레이그라운드 마크업의 영역이다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"’#’을 하나 쓰면 Heading 1 , ‘##’ 은 Heading 2 이다. #의 갯수가 많아질 수록 점점 더 작은 제목이 된다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"한 줄을 띄어쓰기 한 뒤, 4칸 이상 들여쓰면 코드로 인식한다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"지금은 다루지 않았지만 , 숫자를 앞에 넣으면 numbered list 가, * 문자를 앞에 넣으면 bullet list 가 만들어진다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"article_create_playgroundbook_7.jpg"}]},{"type":"codeListing","syntax":"swift","code":["\/*:"," # Welcome to CodersHigh Cruse"," "," It's captain coding rabbit"," "," This is the very first stage of your aboard",""," Follow the instruction"," "," Hope you have a good chance to improve your coding skill here"," "," "," "," ## Instruction"," Type your name using setName() function"," "," ","     setName(\"CodingRabbit\")"," *\/"]},{"anchor":"d-라이브-뷰-연결하기","level":4,"type":"heading","text":"d. 라이브 뷰 연결하기"},{"anchor":"파일-추가하기","level":4,"type":"heading","text":"파일 추가하기"},{"type":"paragraph","inlineContent":[{"type":"text","text":"live view 를 만들기 위해서는 일반적으로 2개의 swift 파일을 만들어야 한다. 하나는 LiveView.swift 라는 지정된 이름의 파일이며, 다른 하나는 실제 그 라이브뷰에서의 동작을 관리할 뷰 컨트롤러이다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"이 보다 간단한 파일 구성을 위해 코드들을 구겨넣을 수도 있지만, 우리는 실제로 쓸만한 페이지를 만드는 데 필요한 전형적인 파일 구조를 배우는 게 보다 바람직하다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Xcode의 File > New > File… 메뉴를 이용해 LiveView.swift 와 HelloViewController.swift 를 만든다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"LiveView.swift 파일은 Name.playgroundpage 폴더 안에 넣는다. 이 폴더안의 파일들은 앞으로 페이지를 추가할 때마다 동일한 구성으로 추가될 것이다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"HelloViewController.swift 파일은 공동영역인 Sources 폴더안에 넣는다. 이 폴더 안에 있는 파일들은 어느 페이지에서든지 접근 가능하다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"article_create_playgroundbook_8.jpg"}]},{"type":"codeListing","syntax":"swift","code":["import PlaygroundSupport","import UIKit","","let page = PlaygroundPage.current","let helloViewController: HelloViewController = HelloViewController()","page.liveView = helloViewController"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"왼쪽 코드는 Live.swift의 내용이다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"HelloViewController 오브젝트를 하나 생성한 뒤, page 의 liveview 로 설정하는 코드이다."}]},{"type":"codeListing","syntax":"swift","code":["import UIKit","import PlaygroundSupport"," ","public class HelloViewController: UIViewController, PlaygroundLiveViewSafeAreaContainer {"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"HelloViewController.swift에는 아직 코드가 들어있지 않다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"iCloud 동기화등의 방법을 이용해 iPad 의 Swift Playground 앱에 지금까지 작성한 플레이그라운드 북을 설치해 보자."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"article_create_playgroundbook_9.jpg"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"여기까지의 파일 : "},{"type":"reference","isActive":true,"identifier":"https:\/\/codershigh.dscloud.biz\/techblogs\/tb_005_playgroundbook\/tb005_media\/Example_Step1.zip"}]},{"anchor":"e-숨은-코드-작성하기","level":4,"type":"heading","text":"e. 숨은 코드 작성하기"},{"type":"paragraph","inlineContent":[{"type":"text","text":"플레이그라운드 북은 Swift 언어 학습을 위한 콘텐츠이므로 이 콘텐츠의 소비자는 아직 Swift 언어에 익숙하지 않은 사람일 것이다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"그러므로, 모든 코드를 보여주기보다 학습자가 집중할 부분만 보여주고 나머지는 가려야 할 필요가 있다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"\/\/#-hidden-code 마크업과 \/\/#-end-hidden-code 마크업 사이의 모든 코드들은 플레이그라운드의 Prose 나 Code 영역에 보이지 않는다."}]},{"type":"codeListing","syntax":"swift","code":["\/\/#-hidden-code","\/\/  Contents.swift","\/\/","\/\/  Copyright (c) 2017 CodersHigh. All Rights Reserved.","\/\/","","import PlaygroundSupport","import Foundation","import UIKit","","","let page = PlaygroundPage.current","let proxy = page.liveView as? PlaygroundRemoteLiveViewProxy","","func setName(_ name:String) {","    PassPort.shared.name = name","}","","\/\/#-end-hidden-code"]},{"anchor":"PlaygroundPage-클래스","level":4,"type":"heading","text":"PlaygroundPage 클래스"},{"type":"paragraph","inlineContent":[{"type":"text","text":"플레이그라운드의 개별 페이지를 나타내는 클래스이며, 기본적인 구동을 관리한다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"PlaygroundPage.current 처럼 싱글턴 형식으로 현재 페이지에 접근이 가능하다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"예를 들어, 현재 페이지의 코드 영역에 사용자가 특정 문자열을 입력했는지를 검사하고 싶다면 PlaygroundPage.current.text 가 특정 문자열을 가지고 있는지 검사한다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"PlaygroundPage.current.liveview 로 라이브뷰의 proxy 에 접근이 가능하다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"이 부분이 조금 어려운 부분인데, live view에 직접 엑세스 하는 것이 아니라 proxy 를 통한 접근이므로 liveview 의 메소드를 직접 호출할 수는 없다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"PlaygroundRemoteLiveViewProxy 오브젝트를 중간에 거쳐야만 메세지를 주고 받을 수 있다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"자세한 내용은 바로 아래에 설명한다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"그러므로 위 코드는 page 라는 상수에 현재의 플레이그라운드 페이지를 할당하고, proxy 라는 상수에 live view 의 proxy 를 할당하는 코드이다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"이 후 사용자 입력에 따른 플레이그라운드의 진행, 즉 입력 값을 확인하고 다음 페이지로 넘길 것인지 틀린 입력값에 대해 힌트를 제공할 것인지를 판단할 때 page 상수를 이용할 것이며, 사용자 입력값에 따른 live view 업데이트는 proxy 를 통해 전달할 것이다."}]},{"anchor":"PlaygroundRemoteLiveViewProxy-클래스","level":4,"type":"heading","text":"PlaygroundRemoteLiveViewProxy 클래스"},{"type":"paragraph","inlineContent":[{"type":"text","text":"live view 와 플레이그라운드 페이지간의 메세지 전송을 가능하게 하는 오브젝트."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"플레이그라운드 페이지에서 현재 활성 중인 라이브 뷰 오브젝트를 PlaygroundRemoteLiveViewProxy로 다운캐스트 해야 메시지 교환이 가능하다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"즉, 지금 만드는 페이지의 경우 Content.swift내에서 HelloViewController 를 liveview 로 직접 캐스팅해서 메소드 호출을 할 수 없으며,"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"PlaygroundRemoteLiveViewProxy로 다운캐스트해서 접근 후,"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"임의의 오브젝트를 PlaygroundRemoteLiveViewProxyDelegate로 지정하고 remoteLiveViewProxy(_:, received:) 함수를 통해 라이브 뷰로부터 메시지를 수신하고,"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"PlaygroundLiveViewMessageHandler 프로토콜을 준수하는 오브젝트에서 receive("},{"type":"emphasis","inlineContent":[{"type":"text","text":":) 함수와 send("}]},{"type":"text","text":":) 함수를 이용해 페이지로 메시지를 전송한다."}]},{"type":"codeListing","syntax":"swift","code":["import Foundation","","public class PassPort {","    ","    public static let shared = PassPort()","    public var name:String?","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"setName(:_) 함수에서는 PassPort.shared.name 에 사용자가 입력한 이름을 넘겨준다."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"PassPort 클래스"}]},{"type":"text","text":"는 전형적인 싱글턴 접근이 가능한 오브젝트를 만든다. 탑승에 필요한 여권은 모든 페이지에서 동일한 하나의 오브젝트로 접근 가능해야 하기 때문이다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"이번 페이지에서는 사용자가 setName(_:) 함수로 전달해 준 이름을 이용해 여권에 이름을 입력해 둘 것이다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"여러 페이지에 걸쳐서 사용하는 데이터는 이와 같이 만들 수 있다."}]},{"anchor":"f-사용자-입력-영역-만들기","level":4,"type":"heading","text":"f. 사용자 입력 영역 만들기"},{"type":"paragraph","inlineContent":[{"type":"text","text":"사용자는 플레이그라운드 북 콘텐츠의 Content.swift 에 저작자가 마련한 코딩영역에 각 페이지의 문제를 풀어낼 코드를 작성해야 한다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"저작자는 사용자에게 숨긴 코드 외에 노출한 코드 중 일부를 채우도록 하는 방식으로 풀이의 난이도를 조정할 수 있다."}]},{"type":"codeListing","syntax":"swift","code":["\/\/#-code-completion(everything, hide)","\/\/#-code-completion(identifier, show, setName(_:))","","\/\/Set Your Name","\/\/#-editable-code","","\/\/#-end-editable-code"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"\/\/#-editable-code 마크업과 \/\/#-end-editable-code 마크업 사이에 사용자가 코드를 입력할 수 있는 공간이 만들어진다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"\/\/#-code-completion 마크업을 통해 코드 완성을 위한 제안을 줄 수 있다. iPad는 키보드 입력이 불편하므로 학습자의 능률을 위해 미리 입력가능한 몇 가지 코드를 제공할 수 있다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"이 페이지에서는 \/\/#-code-completion(everything, hide) 마크업을 통해 기본적인 모든 코드 제안을 숨긴 뒤,"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"\/\/#-code-completion(identifier, show, setName(_:)) 마크업을 통해 setName 함수를 사용자에게 제공한다."}]},{"anchor":"g-라이브-뷰-구성하기","level":4,"type":"heading","text":"g. 라이브 뷰 구성하기"},{"type":"paragraph","inlineContent":[{"type":"text","text":"앞 서 지금 작업하는 PlaygroundPage.current의 라이브 뷰에 HelloViewController 를 연결했었다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"그러므로 라이브 뷰에 표시할 내용은 HelloViewController 에서 iOS 앱의 UI 를 구성하는 것과 동일한 방법으로 화면을 구성하면 된다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"iOS 앱의 UI를 만드는 방식과 약간은 다르지만 앱을 만들어 본 경험이 있다면 어렵지 않게 뷰를 구성할 수 있을 것이다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"UIVIew의 오브젝트로 mainView 를 만들고, 화면을 구성할 Label 과 ImageView 도 만든다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Label의 글자 크가와 폰트, 색상, 텍스트등을 모두 설정한 뒤, mainView의 서브뷰로 넣고 오토레이악웃을 적용하면 화면에 Label을 표시할 수 있다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"ImageView 의 경우도 마찬가지인데, 이미지 뷰에 뿌릴 이미지는 .playgroundpage 폴더의 Resources 폴더를 만들어 넣어도 되고, .playgroundbook 폴더의 전체 Resources 폴더에 넣어도 된다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"article_create_playgroundbook_10.jpg"}]},{"type":"codeListing","syntax":"swift","code":["import UIKit","import PlaygroundSupport"," ","public class HelloViewController: UIViewController, PlaygroundLiveViewSafeAreaContainer {","","    var nameLabel = UILabel()","    var cruseImageView = UIImageView(frame:CGRect(x: 60, y: 140 , width: 400, height: 400))","    var mainView = UIView()","    ","    public override func viewDidLoad() {","        super.viewDidLoad()","        self.view = mainView","        ","        nameLabel.textColor = UIColor.black","        nameLabel.font = UIFont.systemFont(ofSize: 19.0, weight: UIFontWeightHeavy)","        nameLabel.translatesAutoresizingMaskIntoConstraints = false","        nameLabel.text = \"CodersHigh Cruse\"","        self.view.addSubview(nameLabel)","        ","        self.view.addConstraints([NSLayoutConstraint","                                     (item: nameLabel,","                                      attribute: .centerX,","                                      relatedBy: .equal,","                                      toItem: self.view,","                                      attribute: .centerX,","                                      multiplier: 1,","                                      constant: 0),","                                  NSLayoutConstraint","                                      (item: nameLabel,","                                       attribute: .top,","                                       relatedBy: .equal,","                                       toItem: self.view,","                                       attribute: .top,","                                       multiplier: 1,","                                       constant: 30)])","        ","        ","        ","        cruseImageView.image = UIImage(named: \"Cruse.png\")","        view.addSubview(cruseImageView)","        ","        view.addConstraints([NSLayoutConstraint(item: cruseImageView,","                                                attribute: .leading,","                                                relatedBy: .equal,","                                                toItem: view,","                                                attribute: .leading,","                                                multiplier: 1,","                                                constant: 0),","                             NSLayoutConstraint(item: cruseImageView,","                                                attribute: .trailing,","                                                relatedBy: .equal,","                                                toItem: view,","                                                attribute: .trailing,","                                                multiplier: 1,","                                                constant: 0),","                             NSLayoutConstraint(item: cruseImageView,","                                                attribute: .top,","                                                relatedBy: .equal,","                                                toItem: nameLabel,","                                                attribute: .bottom,","                                                multiplier: 1,","                                                constant: 20),","                             NSLayoutConstraint(item:cruseImageView,","                                                attribute: .bottom,","                                                relatedBy: .equal,","                                                toItem: view,","                                                attribute: .bottom,","                                                multiplier: 1,","                                                constant: -60","            )])","    }"," }"]},{"anchor":"h-사용자-입력-값-확인하기","level":4,"type":"heading","text":"h. 사용자 입력 값 확인하기"},{"type":"paragraph","inlineContent":[{"type":"text","text":"플레이그라운드 페이지는 사용자의 입력값에 따라 LiveView에 변화를 주거나 다음 페이지로 진행하도록 할 수 있다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"물론, 잘 못된 입력을 했을 때는 사용자에게 적절한 힌트를 줘서 바른 답을 유도할 수도 있다."}]},{"type":"codeListing","syntax":"swift","code":["\/\/#-hidden-code","if page.text.contains(\"setName\"){","    if let passportName = PassPort.shared.name {","    let successString = \"Good \" + passportName + \". You're ready to onboard. Go [Orientation](@next)\"","    page.assessmentStatus = .pass(message:successString)","    }","}","\/\/#-end-hidden-code"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"플레이그라운드 페이지는 AssessmentStatus 라는 enum 프라퍼티를 이용해 페이지의 과제 성공 텍스트를 표시하거나 추가적인 힌트를 제공한다."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"AssessmentStatus"}]},{"type":"text","text":" 는"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"case fail(hints: [String], solution: String?)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"case pass(message: String?)"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"로 구성되어 있으며, .pass 시의 메시지는 코드 실행 후 다이얼로그에 표시된다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"여기에서 우리는 플레이그라운드 페이지의 text를 분석해서 setName 이라는 함수명이 사용되었는지를 확인 한 후"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"성공을 축하하는 메세지 안에서 [Orientation](@next) 마크업을 이용해 다음 페이지로 넘어가도록 했다."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"article_create_playgroundbook_11.jpg"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"여기까지의 파일 : "},{"type":"reference","isActive":true,"identifier":"https:\/\/codershigh.dscloud.biz\/techblogs\/tb_005_playgroundbook\/tb005_media\/Example_Step2.zip"}]},{"anchor":"3-마무리와-다음-페이지","level":2,"type":"heading","text":"3. 마무리와 다음 페이지"},{"type":"paragraph","inlineContent":[{"type":"text","text":"지금까지 플레이그라운드 북을 만들고 하나의 챕터와 하나의 페이지를 구성하는 것을 알아봤다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"원래 두 개의 페이지를 가진 플레이그라운드 북을 만들어서 아래에 열거한 모든 기능을 다루고 싶었으나, 글이 너무 길어져서 다음 글에서 이어나가야 할 것 같다."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"storyboard 파일을 이용해 UI 구성하기"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Assessment 파일을 만들어서 사용자 코드 확인하고 힌트 제공하기"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"cut scene page 를 이용해 안내 애니메이션 추가하기"}]}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/codershighdocument\/article_create_playgroundbook"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Create_PlaygroundBook","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Posted: 2018.03.18 | By: 윤성관"}],"kind":"article","metadata":{"roleHeading":"Article","title":"플레이그라운드 북 만들기","role":"article","modules":[{"name":"CodersHighDocument"}]},"hierarchy":{"paths":[["doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument"]]},"seeAlsoSections":[{"title":"Tech Blog","identifiers":["doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_UISearchController","doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Tag_Cloud","doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Naver_API","doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Firebase_Timeline","doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Firebase_Chat","doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Calendar_Vot","doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_ReplayKit"],"generated":true}],"references":{"https://codershigh.dscloud.biz/techblogs/tb_005_playgroundbook/tb005_media/Example_Start.zip":{"title":"CodingRabbitPirate 시작 파일","titleInlineContent":[{"type":"text","text":"CodingRabbitPirate 시작 파일"}],"type":"link","identifier":"https:\/\/codershigh.dscloud.biz\/techblogs\/tb_005_playgroundbook\/tb005_media\/Example_Start.zip","url":"https:\/\/codershigh.dscloud.biz\/techblogs\/tb_005_playgroundbook\/tb005_media\/Example_Start.zip"},"article_create_playgroundbook_8.jpg":{"alt":"Image","type":"image","identifier":"article_create_playgroundbook_8.jpg","variants":[{"url":"\/images\/article_create_playgroundbook_8.jpg","traits":["1x","light"]}]},"doc://CodersHighDocument/documentation/CodersHighDocument/Article_Tag_Cloud":{"role":"article","title":"3d 스크롤이 가능한 태그 클라우드 만들기","abstract":[{"type":"text","text":"Posted: 2018.09.05 | By: 김소연 (github.com\/aa9390)"}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Tag_Cloud","kind":"article","type":"topic","url":"\/documentation\/codershighdocument\/article_tag_cloud"},"article_create_playgroundbook_7.jpg":{"alt":"Image","type":"image","identifier":"article_create_playgroundbook_7.jpg","variants":[{"url":"\/images\/article_create_playgroundbook_7.jpg","traits":["1x","light"]}]},"https://developer.apple.com/sample-code/swift/downloads/Playgrounds-Starter-Book.zip":{"title":"플레이그라운드 북 스타터 킷을 다운로드","titleInlineContent":[{"type":"text","text":"플레이그라운드 북 스타터 킷을 다운로드"}],"type":"link","identifier":"https:\/\/developer.apple.com\/sample-code\/swift\/downloads\/Playgrounds-Starter-Book.zip","url":"https:\/\/developer.apple.com\/sample-code\/swift\/downloads\/Playgrounds-Starter-Book.zip"},"article_create_playgroundbook_3.png":{"alt":"Image","type":"image","identifier":"article_create_playgroundbook_3.png","variants":[{"url":"\/images\/article_create_playgroundbook_3.png","traits":["1x","light"]}]},"https://developer.apple.com/library/content/documentation/Xcode/Conceptual/swift_playgrounds_doc_format/index.html":{"title":"Playground Book Format Reference","titleInlineContent":[{"type":"text","text":"Playground Book Format Reference"}],"type":"link","identifier":"https:\/\/developer.apple.com\/library\/content\/documentation\/Xcode\/Conceptual\/swift_playgrounds_doc_format\/index.html","url":"https:\/\/developer.apple.com\/library\/content\/documentation\/Xcode\/Conceptual\/swift_playgrounds_doc_format\/index.html"},"doc://CodersHighDocument/documentation/CodersHighDocument/Article_Firebase_Timeline":{"role":"article","title":"Firebase를 이용하여 Timeline만들기","abstract":[{"type":"text","text":"Posted: 2018.01.13 | By: Byoungwook Park"}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Firebase_Timeline","kind":"article","type":"topic","url":"\/documentation\/codershighdocument\/article_firebase_timeline"},"doc://CodersHighDocument/documentation/CodersHighDocument/Article_Firebase_Chat":{"role":"article","title":"Firebase를 이용하여 채팅창 만들기","abstract":[{"type":"text","text":"Posted: 2017.06.17 | By: Hyunsoo Park"}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Firebase_Chat","kind":"article","type":"topic","url":"\/documentation\/codershighdocument\/article_firebase_chat"},"article_create_playgroundbook_1.png":{"alt":"Image","type":"image","identifier":"article_create_playgroundbook_1.png","variants":[{"url":"\/images\/article_create_playgroundbook_1.png","traits":["1x","light"]}]},"doc://CodersHighDocument/documentation/CodersHighDocument/Article_ReplayKit":{"role":"article","title":"ReplayKit을 이용해 여행 떠나기","abstract":[{"type":"text","text":"Posted: 2017.03.15 | By: Junyeong Yoo"}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_ReplayKit","kind":"article","type":"topic","url":"\/documentation\/codershighdocument\/article_replaykit"},"doc://CodersHighDocument/documentation/CodersHighDocument":{"role":"collection","title":"CodersHighDocument","abstract":[{"type":"text","text":"CodersHigh Document에 오신 것을 환영합니다!"},{"type":"text","text":" "},{"type":"text","text":"이곳에서는 CodersHigh에서 제작한 다양한 Article과 Tutorial을 확인할 수 있습니다."}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument","kind":"symbol","type":"topic","url":"\/documentation\/codershighdocument"},"https://developer.apple.com/videos/play/wwdc2017/408/":{"title":"WWDC17 : What’s New in Swift Playgrounds","titleInlineContent":[{"type":"text","text":"WWDC17 : What’s New in Swift Playgrounds"}],"type":"link","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2017\/408\/","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2017\/408\/"},"https://developer.apple.com/library/content/documentation/Xcode/Reference/xcode_markup_formatting_ref/index.html":{"title":"Markup Formatting Reference","titleInlineContent":[{"type":"text","text":"Markup Formatting Reference"}],"type":"link","identifier":"https:\/\/developer.apple.com\/library\/content\/documentation\/Xcode\/Reference\/xcode_markup_formatting_ref\/index.html","url":"https:\/\/developer.apple.com\/library\/content\/documentation\/Xcode\/Reference\/xcode_markup_formatting_ref\/index.html"},"https://codershigh.dscloud.biz/techblogs/tb_005_playgroundbook/tb005_media/Example_Step2.zip":{"title":"Example_Step2 다운로드","titleInlineContent":[{"type":"text","text":"Example_Step2 다운로드"}],"type":"link","identifier":"https:\/\/codershigh.dscloud.biz\/techblogs\/tb_005_playgroundbook\/tb005_media\/Example_Step2.zip","url":"https:\/\/codershigh.dscloud.biz\/techblogs\/tb_005_playgroundbook\/tb005_media\/Example_Step2.zip"},"doc://CodersHighDocument/documentation/CodersHighDocument/Article_Naver_API":{"role":"article","title":"네이버 오픈 API를 이용한 영화 검색 애플리케이션 만들기","abstract":[{"type":"text","text":"Posted: 2018.08.20 | By: Sujin Kim (gfsusan@naver.com)"}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Naver_API","kind":"article","type":"topic","url":"\/documentation\/codershighdocument\/article_naver_api"},"article_create_playgroundbook_6.jpg":{"alt":"Image","type":"image","identifier":"article_create_playgroundbook_6.jpg","variants":[{"url":"\/images\/article_create_playgroundbook_6.jpg","traits":["1x","light"]}]},"https://developer.apple.com/videos/play/wwdc2017/410/":{"title":"WWDC17 : Localizing Content for Swift Playgrounds","titleInlineContent":[{"type":"text","text":"WWDC17 : Localizing Content for Swift Playgrounds"}],"type":"link","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2017\/410\/","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2017\/410\/"},"article_create_playgroundbook_9.jpg":{"alt":"Image","type":"image","identifier":"article_create_playgroundbook_9.jpg","variants":[{"url":"\/images\/article_create_playgroundbook_9.jpg","traits":["1x","light"]}]},"https://developer.apple.com/videos/play/wwdc2017/605/":{"title":"WWDC17 : SceneKit in Swift Playgrounds","titleInlineContent":[{"type":"text","text":"WWDC17 : SceneKit in Swift Playgrounds"}],"type":"link","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2017\/605\/","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2017\/605\/"},"https://codershigh.dscloud.biz/techblogs/tb_005_playgroundbook/tb005_media/Example_Step1.zip":{"title":"Example_Step1 다운로드","titleInlineContent":[{"type":"text","text":"Example_Step1 다운로드"}],"type":"link","identifier":"https:\/\/codershigh.dscloud.biz\/techblogs\/tb_005_playgroundbook\/tb005_media\/Example_Step1.zip","url":"https:\/\/codershigh.dscloud.biz\/techblogs\/tb_005_playgroundbook\/tb005_media\/Example_Step1.zip"},"article_create_playgroundbook_5.jpg":{"alt":"Image","type":"image","identifier":"article_create_playgroundbook_5.jpg","variants":[{"url":"\/images\/article_create_playgroundbook_5.jpg","traits":["1x","light"]}]},"article_create_playgroundbook_10.jpg":{"alt":"Image","type":"image","identifier":"article_create_playgroundbook_10.jpg","variants":[{"url":"\/images\/article_create_playgroundbook_10.jpg","traits":["1x","light"]}]},"doc://CodersHighDocument/documentation/CodersHighDocument/Article_Calendar_Vot":{"role":"article","title":"메시지 익스텐션을 이용한 Calendar-Vot 제작기","abstract":[{"type":"text","text":"Posted: 2017.03.17 | By: 염혜리(yhr7518@gmail.com)"}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_Calendar_Vot","kind":"article","type":"topic","url":"\/documentation\/codershighdocument\/article_calendar_vot"},"article_create_playgroundbook_4.jpg":{"alt":"Image","type":"image","identifier":"article_create_playgroundbook_4.jpg","variants":[{"url":"\/images\/article_create_playgroundbook_4.jpg","traits":["1x","light"]}]},"https://developer.apple.com/videos/play/wwdc2016/408/":{"title":"WWDC16 : Introducing Swift Playgrounds","titleInlineContent":[{"type":"text","text":"WWDC16 : Introducing Swift Playgrounds"}],"type":"link","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2016\/408\/","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2016\/408\/"},"https://developer.apple.com/library/content/documentation/Xcode/Conceptual/swift_playgrounds_doc_format/PageAnnotationOverview.html":{"title":"Page Annotation Overview","titleInlineContent":[{"type":"text","text":"Page Annotation Overview"}],"type":"link","identifier":"https:\/\/developer.apple.com\/library\/content\/documentation\/Xcode\/Conceptual\/swift_playgrounds_doc_format\/PageAnnotationOverview.html","url":"https:\/\/developer.apple.com\/library\/content\/documentation\/Xcode\/Conceptual\/swift_playgrounds_doc_format\/PageAnnotationOverview.html"},"article_create_playgroundbook_11.jpg":{"alt":"Image","type":"image","identifier":"article_create_playgroundbook_11.jpg","variants":[{"url":"\/images\/article_create_playgroundbook_11.jpg","traits":["1x","light"]}]},"article_create_playgroundbook_2.jpg":{"alt":"Image","type":"image","identifier":"article_create_playgroundbook_2.jpg","variants":[{"url":"\/images\/article_create_playgroundbook_2.jpg","traits":["1x","light"]}]},"doc://CodersHighDocument/documentation/CodersHighDocument/Article_UISearchController":{"role":"article","title":"UISearchController로 검색 개발하기","abstract":[{"type":"text","text":"Posted: 2019.01.14 | By: Quino0627 (dongwook627@gmail.com)"}],"identifier":"doc:\/\/CodersHighDocument\/documentation\/CodersHighDocument\/Article_UISearchController","kind":"article","type":"topic","url":"\/documentation\/codershighdocument\/article_uisearchcontroller"},"https://developer.apple.com/videos/play/wwdc2017/416/":{"title":"WWDC17 : Teaching with Swift Playgrounds","titleInlineContent":[{"type":"text","text":"WWDC17 : Teaching with Swift Playgrounds"}],"type":"link","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2017\/416\/","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2017\/416\/"}}}