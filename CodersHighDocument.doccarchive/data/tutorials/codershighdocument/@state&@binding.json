{"metadata":{"title":"@State & @Binding","categoryPathComponent":"SwiftUI","role":"project","category":"SwiftUI"},"hierarchy":{"modules":[{"reference":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/SwiftUI-Basic","projects":[{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Text","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Text#Text"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Text#ViewModifier"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Image","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Image#Image-file-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Image#Image"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Stack","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Stack#VStack"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Stack#HStack"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Stack#ZStack"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Button","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Button#Button%EC%9D%98-%EA%B5%AC%EC%A1%B0"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Button#Button-UI-%EB%B3%80%EA%B2%BD"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Button#%EC%9E%AC%EC%82%AC%EC%9A%A9-%EA%B0%80%EB%8A%A5%ED%95%9C-Button-Style"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/TextField","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/TextField#TextField"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/@State&@Binding","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/@State&@Binding#@State"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/@State&@Binding#@Binding"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Toggle&Picker","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Toggle&Picker#Toggle"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Toggle&Picker#Picker"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Toggle&Picker#Picker-custom"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Spacer&Divider","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Spacer&Divider#Spacer"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Spacer&Divider#Divider"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Chapter1_Project","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Chapter1_Project#Chapter1-Project"}]}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/SwiftUI-Views","projects":[{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/ForEach","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/ForEach#ForEach"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/List","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/List#StaticList"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/List#DynamicList"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/ScrollView","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/ScrollView#ScrollView"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/NavigationView","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/NavigationView#NavigationView-%EA%B8%B0%EC%B4%88"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/NavigationView#Animals-%EC%95%B1-%EB%A7%8C%EB%93%A4%EA%B8%B0"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/TabView","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/TabView#TabView"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Chapter2_Project","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Chapter2_Project#Chapter2-Project"}]}]}],"reference":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI","paths":[["doc:\/\/CodersHighDocument\/tutorials\/SwiftUI","doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/$volume","doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/SwiftUI-Basic"]]},"schemaVersion":{"major":0,"minor":2,"patch":0},"kind":"project","identifier":{"url":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/@State&@Binding","interfaceLanguage":"swift"},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUI에서 @State와 @Binding은 가장 필수적으로 사용되는 Property Wrapper 중 한 종류입니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"데이터에 변화가 일어나면 View를 최신으로 업데이트 해줘야 하는데,"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"이를 쉽게 할 수 있도록 SwiftUI에서는 기본적으로 @State와 @Binding을 제공하고 있습니다."}]}],"estimatedTimeInMinutes":20,"title":"@State & @Binding","image":"StateBinding.png","chapter":"SwiftUI Basic","kind":"hero","backgroundImage":"StateBinding.png"},{"kind":"tasks","tasks":[{"anchor":"@State","title":"@State","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"‘@State’는 SwiftUI에 의해 관리되는 값을 읽고 쓸 수 있는 property wrapper 유형입니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"‘@State’를 변수 앞에 추가하면 SwiftUI가 자동으로 변경사항을 체크하고 해당 변수를 사용하는 view 부분을 업데이트 해줍니다."}]}],"mediaPosition":"trailing","media":""}],"stepsSection":[{"code":"StateBindingCode1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"음악 플레이어 예시 코드를 통해 @State와 @Binding을 배워봅시다."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"StateBindingCode2.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"먼저 음악이 실행되고 있는지 여부를 체크하는 isPlaying이라는 이름의 Boolean 변수를 선언합니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"이 변수는 재생 버튼을 클릭할 때마다 값이 toggle 되고, 바뀐 값이 View들에 반영이 되어야 합니다."},{"type":"text","text":" "},{"type":"text","text":"그래서 변수의 앞에 @State를 붙여줍니다."}]}],"type":"step","runtimePreview":"StateBinding2.png","media":null},{"code":"StateBindingCode3.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"재생 버튼을 추가합니다. Button의 보여지는 부분에 Image를 넣습니다."},{"type":"text","text":" "},{"type":"text","text":"Button에 대한 자세한 설명은 이후 Button Chapter에서 다루어집니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Image의 내부를 보면 isPlaying ? “Pause.fill” : “play.fill”이라고 되어있습니다."},{"type":"text","text":" "},{"type":"text","text":"이는 isPlaying이 true이면 “Pause.fill”이라는 sfsymbol 이미지를 보여주고,"},{"type":"text","text":" "},{"type":"text","text":"false이면 “plat.fill”이라는 sfsymbol 이미지를 보여주라는 것입니다."}]}],"type":"step","runtimePreview":"StateBinding3.png","media":null},{"code":"StateBindingCode4.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"버튼을 클릭했을 경우 발생하는 event를 추가합니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"클릭할 때 isPlaying이 true면 false로, false면 true로 바꿔줘야 하므로"},{"type":"text","text":" "},{"type":"text","text":"isPlaying.toggle()을 합니다."}]}],"type":"step","runtimePreview":"StateBinding4.png","media":null}]},{"anchor":"@Binding","title":"@Binding","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"앞의 예시 코드와 같이 @State는 하나의 View struct 내부에서 하나의 변수가 여러 View에서 공유되고,"},{"type":"text","text":" "},{"type":"text","text":"값의 변화에 영향을 받는 경우 사용됩니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"그렇다면 두개의 View struct에서 하나의 변수 값을 공유할 필요가 있는 경우에는 어떻게 해야할 지 알아봅시다."}]}],"mediaPosition":"trailing","media":""}],"stepsSection":[{"code":"StateBindingCode5.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"오른쪽의 코드는 @State Section에서 다루었던 코드입니다."},{"type":"text","text":" "},{"type":"text","text":"이 코드에서는 Button을 StateBindingView 내부에 선언했습니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"하지만 코드가 복잡해지거나, 하나의 코드를 여러 곳에서 사용하는 경우 해당 View를 따로 분리하여 사용하기도 합니다."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"StateBindingCode6.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"PlayButton이라는 이름의 View struct를 만들어봅시다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"PlayButton 안에 StateBindingView에 있던 Button 코드를 넣습니다."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"StateBindingCode7.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"StateBindingView에 있던 Button 코드 위치에 PlayButton()을 선언합니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"이렇게 하면 실제 화면에서는 PlayButton의 View가 해당 위치에 보여지게 됩니다."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"StateBindingCode8.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"PlayButton의 Button에서도 기존과 동일하게 isPlaying.toggle()이라는 이벤트가 발생합니다."},{"type":"text","text":" "},{"type":"text","text":"그러나 지금은 isPlaying이라는 변수가 StateBindingView에서만 선언되어있으므로 PlayButton에서는 해당 변수를 사용할 수 없습니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"이를 해결하기 위해서는 PlayButton에서 isPlaying이라는 변수를 사용할 수 있도록 StateBindingView의 isPlaying 변수를 연결해주어야 합니다. PlayButton에 @Binding var isPlaying: Bool이라고 선언해줍니다."}]},{"type":"aside","style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"@Binding을 통해 View 사이의 양방향 연결이 가능해집니다."}]}]}],"type":"step","runtimePreview":null,"media":null},{"code":"StateBindingCode9.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"그 다음 PlayButton()의 안에 isPlaying: $isPlaying을 넣어줍니다."},{"type":"text","text":" "},{"type":"text","text":"이는 PlayButton의 isPlaying으로 StateBindingView의 isPlaying을 넣어주는 것입니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"그리고 PlayButton에서 toggle된 isPlaying 값이 StateBindingView으로도 반영이 되어야 하므로 isPlaying의 앞에 $를 붙여줍니다."}]}],"type":"step","runtimePreview":"StateBinding4.png","media":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"예제 코드를 실행해보세요. 재생 버튼을 클릭하면 화면이 어떻게 변하는 지 확인해보세요."}]}]}]},{"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Toggle&Picker","overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Toggle & Picker","abstract":[{"type":"text","text":"SwiftUI의 Value Selector는 여러가지 값들 중 하나를 선택할 수 있는 control View입니다."}]}],"references":{"doc://CodersHighDocument/tutorials/CodersHighDocument/Stack#HStack":{"role":"pseudoSymbol","title":"HStack","abstract":[{"type":"text","text":"SwiftUI에서는 두개 이상의 View를 나열하기 위해서는 Stack을 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Stack#HStack","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/stack#HStack"},"doc://CodersHighDocument/tutorials/CodersHighDocument/TabView":{"role":"project","title":"TabView","estimatedTime":"10min","abstract":[{"type":"text","text":"TabView는 화면의 하단에 생성되는 Bar를 통해 여러가지 View로의 전환이 가능하도록 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/TabView","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/tabview"},"doc://CodersHighDocument/tutorials/CodersHighDocument/@State&@Binding#@Binding":{"role":"pseudoSymbol","title":"@Binding","abstract":[{"type":"text","text":"SwiftUI에서 @State와 @Binding은 가장 필수적으로 사용되는 Property Wrapper 중 한 종류입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/@State&@Binding#@Binding","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/@state&@binding#@Binding"},"doc://CodersHighDocument/tutorials/CodersHighDocument/Button#Button%EC%9D%98-%EA%B5%AC%EC%A1%B0":{"role":"pseudoSymbol","title":"Button의 구조","abstract":[{"type":"text","text":"Button은 클릭되었을 때 action 작업을 수행하는 control입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Button#Button%EC%9D%98-%EA%B5%AC%EC%A1%B0","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/button#Button%25EC%259D%2598-%25EA%25B5%25AC%25EC%25A1%25B0"},"doc://CodersHighDocument/tutorials/SwiftUI/SwiftUI-Basic":{"role":"article","title":"SwiftUI Basic","abstract":[],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/SwiftUI-Basic","kind":"article","type":"topic","url":"\/tutorials\/swiftui\/swiftui-basic"},"StateBinding.png":{"alt":"preview","type":"image","identifier":"StateBinding.png","variants":[{"url":"\/images\/StateBinding.png","traits":["1x","light"]}]},"StateBindingCode2.swift":{"syntax":"swift","content":["import SwiftUI","","struct StateBindingView: View{","    ","    @State private var isPlaying = false","    ","    @Environment(\\.colorScheme) var colorScheme","    @State private var progress: Double = 65.0","    @State private var time: Int = 188","    @State var timer = Timer.publish (every: 1, on: .current, in: .common).autoconnect()","    ","    var body: some View{","        VStack {","            HStack{","                Image(uiImage: (UIImage(named: \"music.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 100, height: 100)","                ","                Image(uiImage: (UIImage(named: colorScheme == .dark ? \"music_text.png\" : \"music_text_light.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 250, height: 100)","            }","            VStack{","                ProgressView(\"\", value: progress, total: 188)","                    .progressViewStyle(LinearProgressViewStyle(tint: Color.pink))","                ","                HStack{","                    Text(\"\\(Int(progress)\/60):\\(String(format: \"%02d\", Int(progress)%60))\")","                        .fontWeight(.bold)","                    ","                    Spacer()","                    ","                    Text(\"\\(time\/60):\\(String(format: \"%02d\", time%60))\")","                        .fontWeight(.bold)","                }","            }","            .frame(width: 350)","            .padding()","            ","            HStack(spacing: 50){","                Image(systemName: \"backward.fill\")","                ","                Image(systemName: \"forward.fill\")","            }","            .font(.system(size: 40))","        }","        .onReceive(timer) { _ in","            if isPlaying && self.progress < 188 {","                self.progress += 1","            }","        }","    }","}","","struct StateBindingView_Previews: PreviewProvider {","    static var previews: some View {","        StateBindingView()","    }","}"],"fileName":"StateBindingView.swift","identifier":"StateBindingCode2.swift","type":"file","fileType":"swift","highlights":[{"line":5},{"line":6}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/ForEach#ForEach":{"role":"pseudoSymbol","title":"ForEach","abstract":[{"type":"text","text":"View를 반복하여 나열하는 경우에 ForEach를 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/ForEach#ForEach","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/foreach#ForEach"},"StateBindingCode4.swift":{"syntax":"swift","content":["import SwiftUI","","struct StateBindingView: View{","    ","    @State private var isPlaying = false","    ","    @Environment(\\.colorScheme) var colorScheme","    @State private var progress: Double = 65.0","    @State private var time: Int = 188","    @State var timer = Timer.publish (every: 1, on: .current, in: .common).autoconnect()","    ","    var body: some View{","        VStack {","            HStack{","                Image(uiImage: (UIImage(named: \"music.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 100, height: 100)","                ","                Image(uiImage: (UIImage(named: colorScheme == .dark ? \"music_text.png\" : \"music_text_light.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 250, height: 100)","            }","            VStack{","                ProgressView(\"\", value: progress, total: 188)","                    .progressViewStyle(LinearProgressViewStyle(tint: Color.pink))","                ","                HStack{","                    Text(\"\\(Int(progress)\/60):\\(String(format: \"%02d\", Int(progress)%60))\")","                        .fontWeight(.bold)","                    ","                    Spacer()","                    ","                    Text(\"\\(time\/60):\\(String(format: \"%02d\", time%60))\")","                        .fontWeight(.bold)","                }","            }","            .frame(width: 350)","            .padding()","            ","            HStack(spacing: 50){","                Image(systemName: \"backward.fill\")","                ","                Button(action: {","                    self.isPlaying.toggle()","                }) {","                    Image(systemName: isPlaying ? \"pause.fill\" : \"play.fill\")","                        .foregroundColor(.pink)","                        .frame(width: 50, height: 50)","                }","                ","                Image(systemName: \"forward.fill\")","            }","            .font(.system(size: 40))","        }","        .onReceive(timer) { _ in","            if isPlaying && self.progress < 188 {","                self.progress += 1","            }","        }","    }","}","","struct StateBindingView_Previews: PreviewProvider {","    static var previews: some View {","        StateBindingView()","    }","}"],"fileName":"StateBindingView.swift","identifier":"StateBindingCode4.swift","type":"file","fileType":"swift","highlights":[{"line":46}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/Text#ViewModifier":{"role":"pseudoSymbol","title":"ViewModifier","abstract":[{"type":"text","text":"Text View는 앱의 UI에 문자열을 그립니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Text#ViewModifier","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/text#ViewModifier"},"doc://CodersHighDocument/tutorials/CodersHighDocument/Image":{"role":"project","title":"Image","estimatedTime":"10min","abstract":[{"type":"text","text":"Image는 이미지를 보여주는 view입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Image","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/image"},"doc://CodersHighDocument/tutorials/CodersHighDocument/List":{"role":"project","title":"List","estimatedTime":"15min","abstract":[{"type":"text","text":"List는 목록 형태의 View를 구현하기 위해 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/List","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/list"},"doc://CodersHighDocument/tutorials/CodersHighDocument/Button#Button-UI-%EB%B3%80%EA%B2%BD":{"role":"pseudoSymbol","title":"Button UI 변경","abstract":[{"type":"text","text":"Button은 클릭되었을 때 action 작업을 수행하는 control입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Button#Button-UI-%EB%B3%80%EA%B2%BD","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/button#Button-UI-%25EB%25B3%2580%25EA%25B2%25BD"},"doc://CodersHighDocument/tutorials/SwiftUI":{"role":"overview","title":"SwiftUI 튜토리얼","abstract":[{"type":"text","text":"SwiftUI의 View에 대해 학습해보고 직접 UI화면을 구현해봅시다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI","kind":"overview","type":"topic","url":"\/tutorials\/swiftui"},"doc://CodersHighDocument/tutorials/CodersHighDocument/NavigationView#Animals-%EC%95%B1-%EB%A7%8C%EB%93%A4%EA%B8%B0":{"role":"pseudoSymbol","title":"Animals 앱 만들기","abstract":[{"type":"text","text":"NavigationView는 SwiftUI의 가장 중요한 구성 요소 중 하나로, 계층적인 방식으로 메인 화면에서 서브 화면으로 쉽게 전환할 수 있도록 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/NavigationView#Animals-%EC%95%B1-%EB%A7%8C%EB%93%A4%EA%B8%B0","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/navigationview#Animals-%25EC%2595%25B1-%25EB%25A7%258C%25EB%2593%25A4%25EA%25B8%25B0"},"doc://CodersHighDocument/tutorials/CodersHighDocument/Stack":{"role":"project","title":"Stack","estimatedTime":"10min","abstract":[{"type":"text","text":"SwiftUI에서는 두개 이상의 View를 나열하기 위해서는 Stack을 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Stack","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/stack"},"StateBinding4.png":{"alt":"preview","type":"image","identifier":"StateBinding4.png","variants":[{"url":"\/images\/StateBinding4.png","traits":["1x","light"]}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/Button#%EC%9E%AC%EC%82%AC%EC%9A%A9-%EA%B0%80%EB%8A%A5%ED%95%9C-Button-Style":{"role":"pseudoSymbol","title":"재사용 가능한 Button Style","abstract":[{"type":"text","text":"Button은 클릭되었을 때 action 작업을 수행하는 control입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Button#%EC%9E%AC%EC%82%AC%EC%9A%A9-%EA%B0%80%EB%8A%A5%ED%95%9C-Button-Style","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/button#%25EC%259E%25AC%25EC%2582%25AC%25EC%259A%25A9-%25EA%25B0%2580%25EB%258A%25A5%25ED%2595%259C-Button-Style"},"doc://CodersHighDocument/tutorials/CodersHighDocument/Chapter1_Project":{"role":"project","title":"Chapter1 Project","estimatedTime":"30min","abstract":[{"type":"text","text":"Chapter1에서 학습한 내용을 바탕으로 프로필 화면을 만들어보세요."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Chapter1_Project","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/chapter1_project"},"StateBindingCode3.swift":{"syntax":"swift","content":["import SwiftUI","","struct StateBindingView: View{","    ","    @State private var isPlaying = false","    ","    @Environment(\\.colorScheme) var colorScheme","    @State private var progress: Double = 65.0","    @State private var time: Int = 188","    @State var timer = Timer.publish (every: 1, on: .current, in: .common).autoconnect()","    ","    var body: some View{","        VStack {","            HStack{","                Image(uiImage: (UIImage(named: \"music.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 100, height: 100)","                ","                Image(uiImage: (UIImage(named: colorScheme == .dark ? \"music_text.png\" : \"music_text_light.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 250, height: 100)","            }","            VStack{","                ProgressView(\"\", value: progress, total: 188)","                    .progressViewStyle(LinearProgressViewStyle(tint: Color.pink))","                ","                HStack{","                    Text(\"\\(Int(progress)\/60):\\(String(format: \"%02d\", Int(progress)%60))\")","                        .fontWeight(.bold)","                    ","                    Spacer()","                    ","                    Text(\"\\(time\/60):\\(String(format: \"%02d\", time%60))\")","                        .fontWeight(.bold)","                }","            }","            .frame(width: 350)","            .padding()","            ","            HStack(spacing: 50){","                Image(systemName: \"backward.fill\")","                ","                Button(action: {","                    ","                }) {","                    Image(systemName: isPlaying ? \"pause.fill\" : \"play.fill\")","                        .foregroundColor(.pink)","                        .frame(width: 50, height: 50)","                }","                ","                Image(systemName: \"forward.fill\")","            }","            .font(.system(size: 40))","        }","        .onReceive(timer) { _ in","            if isPlaying && self.progress < 188 {","                self.progress += 1","            }","        }","    }","}","","struct StateBindingView_Previews: PreviewProvider {","    static var previews: some View {","        StateBindingView()","    }","}"],"fileName":"StateBindingView.swift","identifier":"StateBindingCode3.swift","type":"file","fileType":"swift","highlights":[{"line":45},{"line":46},{"line":47},{"line":48},{"line":49},{"line":50},{"line":51},{"line":52}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/TextField":{"role":"project","title":"TextField","estimatedTime":"15min","abstract":[{"type":"text","text":"TextField는 사용자가 텍스트를 직접 입력할 수 있는 공간을 제공합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/TextField","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/textfield"},"doc://CodersHighDocument/tutorials/CodersHighDocument/Spacer&Divider#Spacer":{"role":"pseudoSymbol","title":"Spacer","abstract":[{"type":"text","text":"Spacer와 Divider는 View 사이의 구분을 위해 사용됩니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Spacer&Divider#Spacer","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/spacer&divider#Spacer"},"doc://CodersHighDocument/tutorials/CodersHighDocument/Text":{"role":"project","title":"Text","estimatedTime":"10min","abstract":[{"type":"text","text":"Text View는 앱의 UI에 문자열을 그립니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Text","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/text"},"doc://CodersHighDocument/tutorials/CodersHighDocument/TabView#TabView":{"role":"pseudoSymbol","title":"TabView","abstract":[{"type":"text","text":"TabView는 화면의 하단에 생성되는 Bar를 통해 여러가지 View로의 전환이 가능하도록 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/TabView#TabView","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/tabview#TabView"},"doc://CodersHighDocument/tutorials/CodersHighDocument/Text#Text":{"role":"pseudoSymbol","title":"Text","abstract":[{"type":"text","text":"Text View는 앱의 UI에 문자열을 그립니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Text#Text","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/text#Text"},"doc://CodersHighDocument/tutorials/CodersHighDocument/Toggle&Picker#Picker-custom":{"role":"pseudoSymbol","title":"Picker custom","abstract":[{"type":"text","text":"SwiftUI의 Value Selector는 여러가지 값들 중 하나를 선택할 수 있는 control View입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Toggle&Picker#Picker-custom","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/toggle&picker#Picker-custom"},"doc://CodersHighDocument/tutorials/CodersHighDocument/Image#Image":{"role":"pseudoSymbol","title":"Image","abstract":[{"type":"text","text":"Image는 이미지를 보여주는 view입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Image#Image","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/image#Image"},"doc://CodersHighDocument/tutorials/CodersHighDocument/Chapter2_Project#Chapter2-Project":{"role":"pseudoSymbol","title":"Chapter2 Project","abstract":[{"type":"text","text":"Chapter2에서 학습한 내용을 바탕으로 쇼핑몰 화면을 만들어세요."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Chapter2_Project#Chapter2-Project","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/chapter2_project#Chapter2-Project"},"doc://CodersHighDocument/tutorials/CodersHighDocument/NavigationView#NavigationView-%EA%B8%B0%EC%B4%88":{"role":"pseudoSymbol","title":"NavigationView 기초","abstract":[{"type":"text","text":"NavigationView는 SwiftUI의 가장 중요한 구성 요소 중 하나로, 계층적인 방식으로 메인 화면에서 서브 화면으로 쉽게 전환할 수 있도록 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/NavigationView#NavigationView-%EA%B8%B0%EC%B4%88","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/navigationview#NavigationView-%25EA%25B8%25B0%25EC%25B4%2588"},"doc://CodersHighDocument/tutorials/CodersHighDocument/@State&@Binding":{"role":"project","title":"@State & @Binding","estimatedTime":"20min","abstract":[{"type":"text","text":"SwiftUI에서 @State와 @Binding은 가장 필수적으로 사용되는 Property Wrapper 중 한 종류입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/@State&@Binding","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/@state&@binding"},"doc://CodersHighDocument/tutorials/CodersHighDocument/Image#Image-file-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0":{"role":"pseudoSymbol","title":"Image file 추가하기","abstract":[{"type":"text","text":"Image는 이미지를 보여주는 view입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Image#Image-file-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/image#Image-file-%25EC%25B6%2594%25EA%25B0%2580%25ED%2595%2598%25EA%25B8%25B0"},"StateBindingCode1.swift":{"syntax":"swift","content":["import SwiftUI","","struct StateBindingView: View{","    ","    @Environment(\\.colorScheme) var colorScheme","    @State private var progress: Double = 65.0","    @State private var time: Int = 188","    @State var timer = Timer.publish (every: 1, on: .current, in: .common).autoconnect()","    ","    var body: some View{","        VStack {","            HStack{","                Image(uiImage: (UIImage(named: \"music.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 100, height: 100)","                ","                Image(uiImage: (UIImage(named: colorScheme == .dark ? \"music_text.png\" : \"music_text_light.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 250, height: 100)","            }","            VStack{","                ProgressView(\"\", value: progress, total: 188)","                    .progressViewStyle(LinearProgressViewStyle(tint: Color.pink))","                ","                HStack{","                    Text(\"\\(Int(progress)\/60):\\(String(format: \"%02d\", Int(progress)%60))\")","                        .fontWeight(.bold)","                    ","                    Spacer()","                    ","                    Text(\"\\(time\/60):\\(String(format: \"%02d\", time%60))\")","                        .fontWeight(.bold)","                }","            }","            .frame(width: 350)","            .padding()","            ","            HStack(spacing: 50){","                Image(systemName: \"backward.fill\")","                ","                Image(systemName: \"forward.fill\")","            }","            .font(.system(size: 40))","        }","        .onReceive(timer) { _ in","            if isPlaying && self.progress < 188 {","                self.progress += 1","            }","        }","    }","}","","struct StateBindingView_Previews: PreviewProvider {","    static var previews: some View {","        StateBindingView()","    }","}"],"fileName":"StateBindingView.swift","identifier":"StateBindingCode1.swift","type":"file","fileType":"swift","highlights":[]},"doc://CodersHighDocument/tutorials/CodersHighDocument/Spacer&Divider#Divider":{"role":"pseudoSymbol","title":"Divider","abstract":[{"type":"text","text":"Spacer와 Divider는 View 사이의 구분을 위해 사용됩니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Spacer&Divider#Divider","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/spacer&divider#Divider"},"doc://CodersHighDocument/tutorials/CodersHighDocument/List#DynamicList":{"role":"pseudoSymbol","title":"DynamicList","abstract":[{"type":"text","text":"List는 목록 형태의 View를 구현하기 위해 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/List#DynamicList","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/list#DynamicList"},"doc://CodersHighDocument/tutorials/CodersHighDocument/ScrollView":{"role":"project","title":"ScrollView","estimatedTime":"10min","abstract":[{"type":"text","text":"ScrollView는 한 화면에 모든 내용을 보여주지 못하는 경우 화면을 스크롤하여 화면에서 벗어난 부분의 내용을 볼 수 있도록 만들어줍니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/ScrollView","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/scrollview"},"doc://CodersHighDocument/tutorials/CodersHighDocument/ScrollView#ScrollView":{"role":"pseudoSymbol","title":"ScrollView","abstract":[{"type":"text","text":"ScrollView는 한 화면에 모든 내용을 보여주지 못하는 경우 화면을 스크롤하여 화면에서 벗어난 부분의 내용을 볼 수 있도록 만들어줍니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/ScrollView#ScrollView","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/scrollview#ScrollView"},"doc://CodersHighDocument/tutorials/CodersHighDocument/TextField#TextField":{"role":"pseudoSymbol","title":"TextField","abstract":[{"type":"text","text":"TextField는 사용자가 텍스트를 직접 입력할 수 있는 공간을 제공합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/TextField#TextField","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/textfield#TextField"},"StateBinding3.png":{"alt":"preview","type":"image","identifier":"StateBinding3.png","variants":[{"url":"\/images\/StateBinding3.png","traits":["1x","light"]}]},"StateBindingCode8.swift":{"syntax":"swift","content":["import SwiftUI","","struct StateBindingView: View{","    ","    @State private var isPlaying = false","    ","    @Environment(\\.colorScheme) var colorScheme","    @State private var progress: Double = 65.0","    @State private var time: Int = 188","    @State var timer = Timer.publish (every: 1, on: .current, in: .common).autoconnect()","    ","    var body: some View{","        VStack {","            HStack{","                Image(uiImage: (UIImage(named: \"music.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 100, height: 100)","                ","                Image(uiImage: (UIImage(named: colorScheme == .dark ? \"music_text.png\" : \"music_text_light.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 250, height: 100)","            }","            VStack{","                ProgressView(\"\", value: progress, total: 188)","                    .progressViewStyle(LinearProgressViewStyle(tint: Color.pink))","                ","                HStack{","                    Text(\"\\(Int(progress)\/60):\\(String(format: \"%02d\", Int(progress)%60))\")","                        .fontWeight(.bold)","                    ","                    Spacer()","                    ","                    Text(\"\\(time\/60):\\(String(format: \"%02d\", time%60))\")","                        .fontWeight(.bold)","                }","            }","            .frame(width: 350)","            .padding()","            ","            HStack(spacing: 50){","                Image(systemName: \"backward.fill\")","                ","                PlayButton()","                ","                Image(systemName: \"forward.fill\")","            }","            .font(.system(size: 40))","        }","        .onReceive(timer) { _ in","            if isPlaying && self.progress < 188 {","                self.progress += 1","            }","        }","    }","}","","struct PlayButton: View {","    @Binding var isPlaying: Bool","    ","    var body: some View {","        Button(action: {","            self.isPlaying.toggle()","        }) {","            Image(systemName: isPlaying ? \"pause.fill\" : \"play.fill\")","                .foregroundColor(.pink)","                .frame(width: 50, height: 50)","        }","    }","}","","","","struct StateBindingView_Previews: PreviewProvider {","    static var previews: some View {","        StateBindingView()","    }","}"],"fileName":"StateBindingView.swift","identifier":"StateBindingCode8.swift","type":"file","fileType":"swift","highlights":[{"line":60}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/@State&@Binding#@State":{"role":"pseudoSymbol","title":"@State","abstract":[{"type":"text","text":"SwiftUI에서 @State와 @Binding은 가장 필수적으로 사용되는 Property Wrapper 중 한 종류입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/@State&@Binding#@State","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/@state&@binding#@State"},"doc://CodersHighDocument/tutorials/CodersHighDocument/Spacer&Divider":{"role":"project","title":"Spacer & Divider","estimatedTime":"10min","abstract":[{"type":"text","text":"Spacer와 Divider는 View 사이의 구분을 위해 사용됩니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Spacer&Divider","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/spacer&divider"},"StateBindingCode5.swift":{"syntax":"swift","content":["import SwiftUI","","struct StateBindingView: View{","    ","    @State private var isPlaying = false","    ","    @Environment(\\.colorScheme) var colorScheme","    @State private var progress: Double = 65.0","    @State private var time: Int = 188","    @State var timer = Timer.publish (every: 1, on: .current, in: .common).autoconnect()","    ","    var body: some View{","        VStack {","            HStack{","                Image(uiImage: (UIImage(named: \"music.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 100, height: 100)","                ","                Image(uiImage: (UIImage(named: colorScheme == .dark ? \"music_text.png\" : \"music_text_light.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 250, height: 100)","            }","            VStack{","                ProgressView(\"\", value: progress, total: 188)","                    .progressViewStyle(LinearProgressViewStyle(tint: Color.pink))","                ","                HStack{","                    Text(\"\\(Int(progress)\/60):\\(String(format: \"%02d\", Int(progress)%60))\")","                        .fontWeight(.bold)","                    ","                    Spacer()","                    ","                    Text(\"\\(time\/60):\\(String(format: \"%02d\", time%60))\")","                        .fontWeight(.bold)","                }","            }","            .frame(width: 350)","            .padding()","            ","            HStack(spacing: 50){","                Image(systemName: \"backward.fill\")","                ","                Button(action: {","                    self.isPlaying.toggle()","                }) {","                    Image(systemName: isPlaying ? \"pause.fill\" : \"play.fill\")","                        .foregroundColor(.pink)","                        .frame(width: 50, height: 50)","                }","                ","                Image(systemName: \"forward.fill\")","            }","            .font(.system(size: 40))","        }","        .onReceive(timer) { _ in","            if isPlaying && self.progress < 188 {","                self.progress += 1","            }","        }","    }","}","","struct StateBindingView_Previews: PreviewProvider {","    static var previews: some View {","        StateBindingView()","    }","}"],"fileName":"StateBindingView.swift","identifier":"StateBindingCode5.swift","type":"file","fileType":"swift","highlights":[]},"doc://CodersHighDocument/tutorials/CodersHighDocument/Chapter2_Project":{"role":"project","title":"Chapter2 Project","estimatedTime":"1hr 0min","abstract":[{"type":"text","text":"Chapter2에서 학습한 내용을 바탕으로 쇼핑몰 화면을 만들어세요."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Chapter2_Project","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/chapter2_project"},"doc://CodersHighDocument/tutorials/CodersHighDocument/NavigationView":{"role":"project","title":"NavigationView","estimatedTime":"30min","abstract":[{"type":"text","text":"NavigationView는 SwiftUI의 가장 중요한 구성 요소 중 하나로, 계층적인 방식으로 메인 화면에서 서브 화면으로 쉽게 전환할 수 있도록 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/NavigationView","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/navigationview"},"doc://CodersHighDocument/tutorials/CodersHighDocument/Toggle&Picker":{"role":"project","title":"Toggle & Picker","estimatedTime":"10min","abstract":[{"type":"text","text":"SwiftUI의 Value Selector는 여러가지 값들 중 하나를 선택할 수 있는 control View입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Toggle&Picker","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/toggle&picker"},"doc://CodersHighDocument/tutorials/CodersHighDocument/Stack#ZStack":{"role":"pseudoSymbol","title":"ZStack","abstract":[{"type":"text","text":"SwiftUI에서는 두개 이상의 View를 나열하기 위해서는 Stack을 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Stack#ZStack","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/stack#ZStack"},"doc://CodersHighDocument/tutorials/CodersHighDocument/ForEach":{"role":"project","title":"ForEach","estimatedTime":"15min","abstract":[{"type":"text","text":"View를 반복하여 나열하는 경우에 ForEach를 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/ForEach","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/foreach"},"StateBindingCode6.swift":{"syntax":"swift","content":["import SwiftUI","","struct StateBindingView: View{","    ","    @State private var isPlaying = false","    ","    @Environment(\\.colorScheme) var colorScheme","    @State private var progress: Double = 65.0","    @State private var time: Int = 188","    @State var timer = Timer.publish (every: 1, on: .current, in: .common).autoconnect()","    ","    var body: some View{","        VStack {","            HStack{","                Image(uiImage: (UIImage(named: \"music.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 100, height: 100)","                ","                Image(uiImage: (UIImage(named: colorScheme == .dark ? \"music_text.png\" : \"music_text_light.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 250, height: 100)","            }","            VStack{","                ProgressView(\"\", value: progress, total: 188)","                    .progressViewStyle(LinearProgressViewStyle(tint: Color.pink))","                ","                HStack{","                    Text(\"\\(Int(progress)\/60):\\(String(format: \"%02d\", Int(progress)%60))\")","                        .fontWeight(.bold)","                    ","                    Spacer()","                    ","                    Text(\"\\(time\/60):\\(String(format: \"%02d\", time%60))\")","                        .fontWeight(.bold)","                }","            }","            .frame(width: 350)","            .padding()","            ","            HStack(spacing: 50){","                Image(systemName: \"backward.fill\")","                ","                Image(systemName: \"forward.fill\")","            }","            .font(.system(size: 40))","        }","        .onReceive(timer) { _ in","            if isPlaying && self.progress < 188 {","                self.progress += 1","            }","        }","    }","}","","struct PlayButton: View {","    ","    var body: some View {","        Button(action: {","            self.isPlaying.toggle()","        }) {","            Image(systemName: isPlaying ? \"pause.fill\" : \"play.fill\")","                .foregroundColor(.pink)","                .frame(width: 50, height: 50)","        }","    }","}","","","","struct StateBindingView_Previews: PreviewProvider {","    static var previews: some View {","        StateBindingView()","    }","}"],"fileName":"StateBindingView.swift","identifier":"StateBindingCode6.swift","type":"file","fileType":"swift","highlights":[{"line":57},{"line":58},{"line":59},{"line":60},{"line":61},{"line":62},{"line":63},{"line":64},{"line":65},{"line":66},{"line":67},{"line":68},{"line":69},{"line":70},{"line":71}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/Button":{"role":"project","title":"Button","estimatedTime":"15min","abstract":[{"type":"text","text":"Button은 클릭되었을 때 action 작업을 수행하는 control입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Button","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/button"},"doc://CodersHighDocument/tutorials/CodersHighDocument/Chapter1_Project#Chapter1-Project":{"role":"pseudoSymbol","title":"Chapter1 Project","abstract":[{"type":"text","text":"Chapter1에서 학습한 내용을 바탕으로 프로필 화면을 만들어보세요."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Chapter1_Project#Chapter1-Project","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/chapter1_project#Chapter1-Project"},"StateBindingCode7.swift":{"syntax":"swift","content":["import SwiftUI","","struct StateBindingView: View{","    ","    @State private var isPlaying = false","    ","    @Environment(\\.colorScheme) var colorScheme","    @State private var progress: Double = 65.0","    @State private var time: Int = 188","    @State var timer = Timer.publish (every: 1, on: .current, in: .common).autoconnect()","    ","    var body: some View{","        VStack {","            HStack{","                Image(uiImage: (UIImage(named: \"music.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 100, height: 100)","                ","                Image(uiImage: (UIImage(named: colorScheme == .dark ? \"music_text.png\" : \"music_text_light.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 250, height: 100)","            }","            VStack{","                ProgressView(\"\", value: progress, total: 188)","                    .progressViewStyle(LinearProgressViewStyle(tint: Color.pink))","                ","                HStack{","                    Text(\"\\(Int(progress)\/60):\\(String(format: \"%02d\", Int(progress)%60))\")","                        .fontWeight(.bold)","                    ","                    Spacer()","                    ","                    Text(\"\\(time\/60):\\(String(format: \"%02d\", time%60))\")","                        .fontWeight(.bold)","                }","            }","            .frame(width: 350)","            .padding()","            ","            HStack(spacing: 50){","                Image(systemName: \"backward.fill\")","                ","                PlayButton()","                ","                Image(systemName: \"forward.fill\")","            }","            .font(.system(size: 40))","        }","        .onReceive(timer) { _ in","            if isPlaying && self.progress < 188 {","                self.progress += 1","            }","        }","    }","}","","struct PlayButton: View {","    ","    var body: some View {","        Button(action: {","            self.isPlaying.toggle()","        }) {","            Image(systemName: isPlaying ? \"pause.fill\" : \"play.fill\")","                .foregroundColor(.pink)","                .frame(width: 50, height: 50)","        }","    }","}","","","","struct StateBindingView_Previews: PreviewProvider {","    static var previews: some View {","        StateBindingView()","    }","}"],"fileName":"StateBindingView.swift","identifier":"StateBindingCode7.swift","type":"file","fileType":"swift","highlights":[{"line":45},{"line":46}]},"StateBindingCode9.swift":{"syntax":"swift","content":["import SwiftUI","","struct StateBindingView: View{","    ","    @State private var isPlaying = false","    ","    @Environment(\\.colorScheme) var colorScheme","    @State private var progress: Double = 65.0","    @State private var time: Int = 188","    @State var timer = Timer.publish (every: 1, on: .current, in: .common).autoconnect()","    ","    var body: some View{","        VStack {","            HStack{","                Image(uiImage: (UIImage(named: \"music.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 100, height: 100)","                ","                Image(uiImage: (UIImage(named: colorScheme == .dark ? \"music_text.png\" : \"music_text_light.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 250, height: 100)","            }","            VStack{","                ProgressView(\"\", value: progress, total: 188)","                    .progressViewStyle(LinearProgressViewStyle(tint: Color.pink))","                ","                HStack{","                    Text(\"\\(Int(progress)\/60):\\(String(format: \"%02d\", Int(progress)%60))\")","                        .fontWeight(.bold)","                    ","                    Spacer()","                    ","                    Text(\"\\(time\/60):\\(String(format: \"%02d\", time%60))\")","                        .fontWeight(.bold)","                }","            }","            .frame(width: 350)","            .padding()","            ","            HStack(spacing: 50){","                Image(systemName: \"backward.fill\")","                ","                PlayButton(isPlaying: $isPlaying)","                ","                Image(systemName: \"forward.fill\")","            }","            .font(.system(size: 40))","        }","        .onReceive(timer) { _ in","            if isPlaying && self.progress < 188 {","                self.progress += 1","            }","        }","    }","}","","struct PlayButton: View {","    @Binding var isPlaying: Bool","    ","    var body: some View {","        Button(action: {","            self.isPlaying.toggle()","        }) {","            Image(systemName: isPlaying ? \"pause.fill\" : \"play.fill\")","                .foregroundColor(.pink)","                .frame(width: 50, height: 50)","        }","    }","}","","","","struct StateBindingView_Previews: PreviewProvider {","    static var previews: some View {","        StateBindingView()","    }","}"],"fileName":"StateBindingView.swift","identifier":"StateBindingCode9.swift","type":"file","fileType":"swift","highlights":[{"line":45}]},"doc://CodersHighDocument/tutorials/SwiftUI/SwiftUI-Views":{"role":"article","title":"SwiftUI Views","abstract":[],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/SwiftUI-Views","kind":"article","type":"topic","url":"\/tutorials\/swiftui\/swiftui-views"},"StateBinding2.png":{"alt":"preview","type":"image","identifier":"StateBinding2.png","variants":[{"url":"\/images\/StateBinding2.png","traits":["1x","light"]}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/List#StaticList":{"role":"pseudoSymbol","title":"StaticList","abstract":[{"type":"text","text":"List는 목록 형태의 View를 구현하기 위해 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/List#StaticList","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/list#StaticList"},"doc://CodersHighDocument/tutorials/CodersHighDocument/Toggle&Picker#Picker":{"role":"pseudoSymbol","title":"Picker","abstract":[{"type":"text","text":"SwiftUI의 Value Selector는 여러가지 값들 중 하나를 선택할 수 있는 control View입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Toggle&Picker#Picker","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/toggle&picker#Picker"},"doc://CodersHighDocument/tutorials/CodersHighDocument/Stack#VStack":{"role":"pseudoSymbol","title":"VStack","abstract":[{"type":"text","text":"SwiftUI에서는 두개 이상의 View를 나열하기 위해서는 Stack을 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Stack#VStack","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/stack#VStack"},"doc://CodersHighDocument/tutorials/CodersHighDocument/Toggle&Picker#Toggle":{"role":"pseudoSymbol","title":"Toggle","abstract":[{"type":"text","text":"SwiftUI의 Value Selector는 여러가지 값들 중 하나를 선택할 수 있는 control View입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/Toggle&Picker#Toggle","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/toggle&picker#Toggle"}}}