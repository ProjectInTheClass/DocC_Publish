{"metadata":{"title":"@State & @Binding","categoryPathComponent":"SwiftUI","role":"project","category":"SwiftUI"},"hierarchy":{"modules":[{"reference":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/SwiftUI-Basic","projects":[{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.1)Text","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.1)Text#Text"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.1)Text#ViewModifier"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.2)Image","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.2)Image#Image-file"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.2)Image#Image"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.3)Stack","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.3)Stack#VStack"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.3)Stack#HStack"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.3)Stack#ZStack"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.4)Button","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.4)Button#Button"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.4)Button#Button-UI"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.4)Button#Button-Style"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.5)TextField","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.5)TextField#TextField"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.6)@State&@Binding","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.6)@State&@Binding#@State"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.6)@State&@Binding#@Binding"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.7)Toggle&Picker","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.7)Toggle&Picker#Toggle"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.7)Toggle&Picker#Picker"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.7)Toggle&Picker#Picker-custom"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.8)Spacer&Divider","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.8)Spacer&Divider#Spacer"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.8)Spacer&Divider#Divider"}]}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/SwiftUI-Views","projects":[{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.1)ForEach","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.1)ForEach#ForEach"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.2)List","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.2)List#StaticList"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.2)List#DynamicList"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.3)ScrollView","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.3)ScrollView#ScrollView"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.4)NavigationView","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.4)NavigationView#NavigationView"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.4)NavigationView#Animals"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.5)TabView","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.5)TabView#TabView"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.6)Alert&ActionSheet","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.6)Alert&ActionSheet#Alert"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.6)Alert&ActionSheet#ActionSheet"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.7)Sheet","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.7)Sheet#Sheet"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.8)LazyGrid","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.8)LazyGrid#LazyHGrid"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.8)LazyGrid#LazyVGrid"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.9)ProgressView","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.9)ProgressView#ProgressView"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.9)ProgressView#Custom-ProgressView"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.10)Form&GroupBox","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.10)Form&GroupBox#Form"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.10)Form&GroupBox#Form-&-Section"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.10)Form&GroupBox#GroupBox"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.11)OutlineGroup&DisclosureGroup","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.11)OutlineGroup&DisclosureGroup#OutlineGroup"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.11)OutlineGroup&DisclosureGroup#DisclosureGroup"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.12)GeometryReader","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.12)GeometryReader#GeometryReader"}]}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/SwiftUI-Drawing-and-Animation","projects":[{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.1)Shapes","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.1)Shapes#Shapes"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.1)Shapes#Other-Shapes"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.2)Paints","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.2)Paints#Paints"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.3)Animation","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.3)Animation#Animation"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.4)Gesture","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.4)Gesture#Gesture"}]}]}],"reference":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI","paths":[["doc:\/\/CodersHighDocument\/tutorials\/SwiftUI","doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/$volume","doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/SwiftUI-Basic"]]},"schemaVersion":{"major":0,"minor":1,"patch":0},"kind":"project","identifier":{"url":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.6)@State&@Binding","interfaceLanguage":"swift"},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUI에서 @State와 @Binding은 가장 필수적으로 사용되는 Property Wrapper 중 한 종류입니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"데이터에 변화가 일어나면 View를 최신으로 업데이트 해줘야 하는데,"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"이를 쉽게 할 수 있도록 SwiftUI에서는 기본적으로 @State와 @Binding을 제공하고 있습니다."}]}],"estimatedTimeInMinutes":10,"title":"@State & @Binding","image":"StateBinding.png","chapter":"SwiftUI Basic","kind":"hero","backgroundImage":"StateBinding.png"},{"kind":"tasks","tasks":[{"anchor":"@State","title":"@State","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"‘@State’는 SwiftUI에 의해 관리되는 값을 읽고 쓸 수 있는 property wrapper 유형입니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"‘@State’를 변수 앞에 추가하면 SwiftUI가 자동으로 변경사항을 체크하고 해당 변수를 사용하는 view 부분을 업데이트 해줍니다."}]}],"mediaPosition":"trailing","media":""}],"stepsSection":[{"code":"StateBindingCode1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"음악 플레이어 예시 코드를 통해 @State와 @Binding을 배워봅시다."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"StateBindingCode2.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"먼저 음악이 실행되고 있는지 여부를 체크하는 isPlaying이라는 이름의 Boolean 변수를 선언합니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"이 변수는 재생 버튼을 클릭할 때마다 값이 toggle 되고, 바뀐 값이 View들에 반영이 되어야 합니다."},{"type":"text","text":" "},{"type":"text","text":"그래서 변수의 앞에 @State를 붙여줍니다."}]}],"type":"step","runtimePreview":"StateBinding2.png","media":null},{"code":"StateBindingCode3.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"재생 버튼을 추가합니다. Button의 보여지는 부분에 Image를 넣습니다."},{"type":"text","text":" "},{"type":"text","text":"Button에 대한 자세한 설명은 이후 Button Chapter에서 다루어집니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Image의 내부를 보면 isPlaying ? “Pause.fill” : “play.fill”이라고 되어있습니다."},{"type":"text","text":" "},{"type":"text","text":"이는 isPlaying이 true이면 “Pause.fill”이라는 sfsymbol 이미지를 보여주고,"},{"type":"text","text":" "},{"type":"text","text":"false이면 “plat.fill”이라는 sfsymbol 이미지를 보여주라는 것입니다."}]}],"type":"step","runtimePreview":"StateBinding3.png","media":null},{"code":"StateBindingCode4.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"버튼을 클릭했을 경우 발생하는 event를 추가합니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"클릭할 때 isPlaying이 true면 false로, false면 true로 바꿔줘야 하므로"},{"type":"text","text":" "},{"type":"text","text":"isPlaying.toggle()을 합니다."}]}],"type":"step","runtimePreview":"StateBinding4.png","media":null}]},{"anchor":"@Binding","title":"@Binding","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"앞의 예시 코드와 같이 @State는 하나의 View struct 내부에서 하나의 변수가 여러 View에서 공유되고,"},{"type":"text","text":" "},{"type":"text","text":"값의 변화에 영향을 받는 경우 사용됩니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"그렇다면 두개의 View struct에서 하나의 변수 값을 공유할 필요가 있는 경우에는 어떻게 해야할 지 알아봅시다."}]}],"mediaPosition":"trailing","media":""}],"stepsSection":[{"code":"StateBindingCode5.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"오른쪽의 코드는 @State Section에서 다루었던 코드입니다."},{"type":"text","text":" "},{"type":"text","text":"이 코드에서는 Button을 StateBindingView 내부에 선언했습니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"하지만 코드가 복잡해지거나, 하나의 코드를 여러 곳에서 사용하는 경우 해당 View를 따로 분리하여 사용하기도 합니다."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"StateBindingCode6.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"PlayButton이라는 이름의 View struct를 만들어봅시다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"PlayButton 안에 StateBindingView에 있던 Button 코드를 넣습니다."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"StateBindingCode7.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"StateBindingView에 있던 Button 코드 위치에 PlayButton()을 선언합니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"이렇게 하면 실제 화면에서는 PlayButton의 View가 해당 위치에 보여지게 됩니다."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"StateBindingCode8.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"PlayButton의 Button에서도 기존과 동일하게 isPlaying.toggle()이라는 이벤트가 발생합니다."},{"type":"text","text":" "},{"type":"text","text":"그러나 지금은 isPlaying이라는 변수가 StateBindingView에서만 선언되어있으므로 PlayButton에서는 해당 변수를 사용할 수 없습니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"이를 해결하기 위해서는 PlayButton에서 isPlaying이라는 변수를 사용할 수 있도록 StateBindingView의 isPlaying 변수를 연결해주어야 합니다. PlayButton에 @Binding var isPlaying: Bool이라고 선언해줍니다."}]},{"type":"aside","style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"@Binding을 통해 View 사이의 양방향 연결이 가능해집니다."}]}]}],"type":"step","runtimePreview":null,"media":null},{"code":"StateBindingCode9.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"그 다음 PlayButton()의 안에 isPlaying: $isPlaying을 넣어줍니다."},{"type":"text","text":" "},{"type":"text","text":"이는 PlayButton의 isPlaying으로 StateBindingView의 isPlaying을 넣어주는 것입니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"그리고 PlayButton에서 toggle된 isPlaying 값이 StateBindingView으로도 반영이 되어야 하므로 isPlaying의 앞에 $를 붙여줍니다."}]}],"type":"step","runtimePreview":"StateBinding4.png","media":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"예제 코드를 실행해보세요. 재생 버튼을 클릭하면 화면이 어떻게 변하는 지 확인해보세요."}]}]}]},{"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.7)Toggle&Picker","overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Toggle & Picker","abstract":[{"type":"text","text":"SwiftUI의 Value Selector는 여러가지 값들 중 하나를 선택할 수 있는 control View입니다."}]}],"references":{"StateBindingCode6.swift":{"syntax":"swift","content":["import SwiftUI","","struct StateBindingView: View{","    ","    @State private var isPlaying = false","    ","    @Environment(\\.colorScheme) var colorScheme","    @State private var progress: Double = 65.0","    @State private var time: Int = 188","    @State var timer = Timer.publish (every: 1, on: .current, in: .common).autoconnect()","    ","    var body: some View{","        VStack {","            HStack{","                Image(uiImage: (UIImage(named: \"music.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 100, height: 100)","                ","                Image(uiImage: (UIImage(named: colorScheme == .dark ? \"music_text.png\" : \"music_text_light.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 250, height: 100)","            }","            VStack{","                ProgressView(\"\", value: progress, total: 188)","                    .progressViewStyle(LinearProgressViewStyle(tint: Color.pink))","                ","                HStack{","                    Text(\"\\(Int(progress)\/60):\\(String(format: \"%02d\", Int(progress)%60))\")","                        .fontWeight(.bold)","                    ","                    Spacer()","                    ","                    Text(\"\\(time\/60):\\(String(format: \"%02d\", time%60))\")","                        .fontWeight(.bold)","                }","            }","            .frame(width: 350)","            .padding()","            ","            HStack(spacing: 50){","                Image(systemName: \"backward.fill\")","                ","                Image(systemName: \"forward.fill\")","            }","            .font(.system(size: 40))","        }","        .onReceive(timer) { _ in","            if isPlaying && self.progress < 188 {","                self.progress += 1","            }","        }","    }","}","","struct PlayButton: View {","    ","    var body: some View {","        Button(action: {","            self.isPlaying.toggle()","        }) {","            Image(systemName: isPlaying ? \"pause.fill\" : \"play.fill\")","                .foregroundColor(.pink)","                .frame(width: 50, height: 50)","        }","    }","}","","","","struct StateBindingView_Previews: PreviewProvider {","    static var previews: some View {","        StateBindingView()","    }","}"],"fileName":"StateBindingView.swift","identifier":"StateBindingCode6.swift","type":"file","fileType":"swift","highlights":[{"line":57},{"line":58},{"line":59},{"line":60},{"line":61},{"line":62},{"line":63},{"line":64},{"line":65},{"line":66},{"line":67},{"line":68},{"line":69},{"line":70},{"line":71}]},"doc://CodersHighDocument/tutorials/SwiftUI/SwiftUI-Basic":{"role":"article","title":"SwiftUI Basic","abstract":[],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/SwiftUI-Basic","kind":"article","type":"topic","url":"\/tutorials\/swiftui\/swiftui-basic"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.4)Button":{"role":"project","title":"Button","estimatedTime":"15분","abstract":[{"type":"text","text":"Button은 클릭되었을 때 action 작업을 수행하는 control입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.4)Button","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/1.4)button"},"doc://CodersHighDocument/tutorials/CodersHighDocument/3.2)Paints":{"role":"project","title":"Paints","estimatedTime":"5분","abstract":[{"type":"text","text":"Paint는 Shape의 내부를 정해진 하나로 채워버리는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.2)Paints","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/3.2)paints"},"StateBindingCode8.swift":{"syntax":"swift","content":["import SwiftUI","","struct StateBindingView: View{","    ","    @State private var isPlaying = false","    ","    @Environment(\\.colorScheme) var colorScheme","    @State private var progress: Double = 65.0","    @State private var time: Int = 188","    @State var timer = Timer.publish (every: 1, on: .current, in: .common).autoconnect()","    ","    var body: some View{","        VStack {","            HStack{","                Image(uiImage: (UIImage(named: \"music.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 100, height: 100)","                ","                Image(uiImage: (UIImage(named: colorScheme == .dark ? \"music_text.png\" : \"music_text_light.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 250, height: 100)","            }","            VStack{","                ProgressView(\"\", value: progress, total: 188)","                    .progressViewStyle(LinearProgressViewStyle(tint: Color.pink))","                ","                HStack{","                    Text(\"\\(Int(progress)\/60):\\(String(format: \"%02d\", Int(progress)%60))\")","                        .fontWeight(.bold)","                    ","                    Spacer()","                    ","                    Text(\"\\(time\/60):\\(String(format: \"%02d\", time%60))\")","                        .fontWeight(.bold)","                }","            }","            .frame(width: 350)","            .padding()","            ","            HStack(spacing: 50){","                Image(systemName: \"backward.fill\")","                ","                PlayButton()","                ","                Image(systemName: \"forward.fill\")","            }","            .font(.system(size: 40))","        }","        .onReceive(timer) { _ in","            if isPlaying && self.progress < 188 {","                self.progress += 1","            }","        }","    }","}","","struct PlayButton: View {","    @Binding var isPlaying: Bool","    ","    var body: some View {","        Button(action: {","            self.isPlaying.toggle()","        }) {","            Image(systemName: isPlaying ? \"pause.fill\" : \"play.fill\")","                .foregroundColor(.pink)","                .frame(width: 50, height: 50)","        }","    }","}","","","","struct StateBindingView_Previews: PreviewProvider {","    static var previews: some View {","        StateBindingView()","    }","}"],"fileName":"StateBindingView.swift","identifier":"StateBindingCode8.swift","type":"file","fileType":"swift","highlights":[{"line":60}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.5)TextField":{"role":"project","title":"TextField","estimatedTime":"5분","abstract":[{"type":"text","text":"TextField는 사용자가 텍스트를 직접 입력할 수 있는 공간을 제공합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.5)TextField","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/1.5)textfield"},"doc://CodersHighDocument/tutorials/CodersHighDocument/3.1)Shapes#Shapes":{"role":"pseudoSymbol","title":"Shapes","abstract":[{"type":"text","text":"Animation은 이름대로 특정한 조건에 대하여 애니메이션으로 나타나는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.1)Shapes#Shapes","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/3.1)shapes#Shapes"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.2)Image#Image":{"role":"pseudoSymbol","title":"Image","abstract":[{"type":"text","text":"Image는 이미지를 보여주는 view입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.2)Image#Image","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.2)image#Image"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.7)Sheet#Sheet":{"role":"pseudoSymbol","title":"Sheet","abstract":[{"type":"text","text":"Sheet는 기존의 View 위에 보여지는 새로운 View입니다."},{"type":"text","text":" "},{"type":"text","text":"modal"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.7)Sheet#Sheet","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.7)sheet#Sheet"},"StateBindingCode9.swift":{"syntax":"swift","content":["import SwiftUI","","struct StateBindingView: View{","    ","    @State private var isPlaying = false","    ","    @Environment(\\.colorScheme) var colorScheme","    @State private var progress: Double = 65.0","    @State private var time: Int = 188","    @State var timer = Timer.publish (every: 1, on: .current, in: .common).autoconnect()","    ","    var body: some View{","        VStack {","            HStack{","                Image(uiImage: (UIImage(named: \"music.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 100, height: 100)","                ","                Image(uiImage: (UIImage(named: colorScheme == .dark ? \"music_text.png\" : \"music_text_light.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 250, height: 100)","            }","            VStack{","                ProgressView(\"\", value: progress, total: 188)","                    .progressViewStyle(LinearProgressViewStyle(tint: Color.pink))","                ","                HStack{","                    Text(\"\\(Int(progress)\/60):\\(String(format: \"%02d\", Int(progress)%60))\")","                        .fontWeight(.bold)","                    ","                    Spacer()","                    ","                    Text(\"\\(time\/60):\\(String(format: \"%02d\", time%60))\")","                        .fontWeight(.bold)","                }","            }","            .frame(width: 350)","            .padding()","            ","            HStack(spacing: 50){","                Image(systemName: \"backward.fill\")","                ","                PlayButton(isPlaying: $isPlaying)","                ","                Image(systemName: \"forward.fill\")","            }","            .font(.system(size: 40))","        }","        .onReceive(timer) { _ in","            if isPlaying && self.progress < 188 {","                self.progress += 1","            }","        }","    }","}","","struct PlayButton: View {","    @Binding var isPlaying: Bool","    ","    var body: some View {","        Button(action: {","            self.isPlaying.toggle()","        }) {","            Image(systemName: isPlaying ? \"pause.fill\" : \"play.fill\")","                .foregroundColor(.pink)","                .frame(width: 50, height: 50)","        }","    }","}","","","","struct StateBindingView_Previews: PreviewProvider {","    static var previews: some View {","        StateBindingView()","    }","}"],"fileName":"StateBindingView.swift","identifier":"StateBindingCode9.swift","type":"file","fileType":"swift","highlights":[{"line":45}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.9)ProgressView#ProgressView":{"role":"pseudoSymbol","title":"ProgressView","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.9)ProgressView#ProgressView","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.9)progressview#ProgressView"},"doc://CodersHighDocument/tutorials/CodersHighDocument/3.4)Gesture#Gesture":{"role":"pseudoSymbol","title":"Gesture","abstract":[{"type":"text","text":"Gesture는 사용자의 특정한 행동에 따라 뷰에 변화가 알어나게 하는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.4)Gesture#Gesture","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/3.4)gesture#Gesture"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.3)Stack#ZStack":{"role":"pseudoSymbol","title":"ZStack","abstract":[{"type":"text","text":"SwiftUI에서는 두개 이상의 View를 나열하기 위해서는 Stack을 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.3)Stack#ZStack","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.3)stack#ZStack"},"doc://CodersHighDocument/tutorials/CodersHighDocument/3.3)Animation":{"role":"project","title":"Animation","estimatedTime":"5분","abstract":[{"type":"text","text":"Animation은 이름대로 특정한 조건에 대하여 애니메이션으로 나타나는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.3)Animation","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/3.3)animation"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.11)OutlineGroup&DisclosureGroup#DisclosureGroup":{"role":"pseudoSymbol","title":"DisclosureGroup","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.11)OutlineGroup&DisclosureGroup#DisclosureGroup","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.11)outlinegroup&disclosuregroup#DisclosureGroup"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.2)Image#Image-file":{"role":"pseudoSymbol","title":"Image file 추가하기","abstract":[{"type":"text","text":"Image는 이미지를 보여주는 view입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.2)Image#Image-file","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.2)image#Image-file"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.6)@State&@Binding":{"role":"project","title":"@State & @Binding","estimatedTime":"10분","abstract":[{"type":"text","text":"SwiftUI에서 @State와 @Binding은 가장 필수적으로 사용되는 Property Wrapper 중 한 종류입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.6)@State&@Binding","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/1.6)@state&@binding"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.4)NavigationView#Animals":{"role":"pseudoSymbol","title":"Animals 앱 만들기","abstract":[{"type":"text","text":"NavigationView는 SwiftUI의 가장 중요한 구성 요소 중 하나로, 계층적인 방식으로 메인 화면에서 서브 화면으로 쉽게 전환할 수 있도록 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.4)NavigationView#Animals","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.4)navigationview#Animals"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.5)TabView#TabView":{"role":"pseudoSymbol","title":"TabView","abstract":[{"type":"text","text":"TabView는 화면의 하단에 생성되는 Bar를 통해 여러가지 View로의 전환이 가능하도록 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.5)TabView#TabView","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.5)tabview#TabView"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.8)LazyGrid#LazyVGrid":{"role":"pseudoSymbol","title":"LazyVGrid","abstract":[{"type":"text","text":"Grid는 웹 페이지에서 주로 사용되는 방법으로 요소들을 특정 패턴으로 나열하는 방식입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.8)LazyGrid#LazyVGrid","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.8)lazygrid#LazyVGrid"},"StateBindingCode1.swift":{"syntax":"swift","content":["import SwiftUI","","struct StateBindingView: View{","    ","    @Environment(\\.colorScheme) var colorScheme","    @State private var progress: Double = 65.0","    @State private var time: Int = 188","    @State var timer = Timer.publish (every: 1, on: .current, in: .common).autoconnect()","    ","    var body: some View{","        VStack {","            HStack{","                Image(uiImage: (UIImage(named: \"music.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 100, height: 100)","                ","                Image(uiImage: (UIImage(named: colorScheme == .dark ? \"music_text.png\" : \"music_text_light.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 250, height: 100)","            }","            VStack{","                ProgressView(\"\", value: progress, total: 188)","                    .progressViewStyle(LinearProgressViewStyle(tint: Color.pink))","                ","                HStack{","                    Text(\"\\(Int(progress)\/60):\\(String(format: \"%02d\", Int(progress)%60))\")","                        .fontWeight(.bold)","                    ","                    Spacer()","                    ","                    Text(\"\\(time\/60):\\(String(format: \"%02d\", time%60))\")","                        .fontWeight(.bold)","                }","            }","            .frame(width: 350)","            .padding()","            ","            HStack(spacing: 50){","                Image(systemName: \"backward.fill\")","                ","                Image(systemName: \"forward.fill\")","            }","            .font(.system(size: 40))","        }","        .onReceive(timer) { _ in","            if isPlaying && self.progress < 188 {","                self.progress += 1","            }","        }","    }","}","","struct StateBindingView_Previews: PreviewProvider {","    static var previews: some View {","        StateBindingView()","    }","}"],"fileName":"StateBindingView.swift","identifier":"StateBindingCode1.swift","type":"file","fileType":"swift","highlights":[]},"StateBindingCode3.swift":{"syntax":"swift","content":["import SwiftUI","","struct StateBindingView: View{","    ","    @State private var isPlaying = false","    ","    @Environment(\\.colorScheme) var colorScheme","    @State private var progress: Double = 65.0","    @State private var time: Int = 188","    @State var timer = Timer.publish (every: 1, on: .current, in: .common).autoconnect()","    ","    var body: some View{","        VStack {","            HStack{","                Image(uiImage: (UIImage(named: \"music.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 100, height: 100)","                ","                Image(uiImage: (UIImage(named: colorScheme == .dark ? \"music_text.png\" : \"music_text_light.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 250, height: 100)","            }","            VStack{","                ProgressView(\"\", value: progress, total: 188)","                    .progressViewStyle(LinearProgressViewStyle(tint: Color.pink))","                ","                HStack{","                    Text(\"\\(Int(progress)\/60):\\(String(format: \"%02d\", Int(progress)%60))\")","                        .fontWeight(.bold)","                    ","                    Spacer()","                    ","                    Text(\"\\(time\/60):\\(String(format: \"%02d\", time%60))\")","                        .fontWeight(.bold)","                }","            }","            .frame(width: 350)","            .padding()","            ","            HStack(spacing: 50){","                Image(systemName: \"backward.fill\")","                ","                Button(action: {","                    ","                }) {","                    Image(systemName: isPlaying ? \"pause.fill\" : \"play.fill\")","                        .foregroundColor(.pink)","                        .frame(width: 50, height: 50)","                }","                ","                Image(systemName: \"forward.fill\")","            }","            .font(.system(size: 40))","        }","        .onReceive(timer) { _ in","            if isPlaying && self.progress < 188 {","                self.progress += 1","            }","        }","    }","}","","struct StateBindingView_Previews: PreviewProvider {","    static var previews: some View {","        StateBindingView()","    }","}"],"fileName":"StateBindingView.swift","identifier":"StateBindingCode3.swift","type":"file","fileType":"swift","highlights":[{"line":45},{"line":46},{"line":47},{"line":48},{"line":49},{"line":50},{"line":51},{"line":52}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.3)Stack#VStack":{"role":"pseudoSymbol","title":"VStack","abstract":[{"type":"text","text":"SwiftUI에서는 두개 이상의 View를 나열하기 위해서는 Stack을 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.3)Stack#VStack","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.3)stack#VStack"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.7)Toggle&Picker#Picker":{"role":"pseudoSymbol","title":"Picker","abstract":[{"type":"text","text":"SwiftUI의 Value Selector는 여러가지 값들 중 하나를 선택할 수 있는 control View입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.7)Toggle&Picker#Picker","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.7)toggle&picker#Picker"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.4)NavigationView":{"role":"project","title":"NavigationView","estimatedTime":"20분","abstract":[{"type":"text","text":"NavigationView는 SwiftUI의 가장 중요한 구성 요소 중 하나로, 계층적인 방식으로 메인 화면에서 서브 화면으로 쉽게 전환할 수 있도록 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.4)NavigationView","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.4)navigationview"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.8)LazyGrid#LazyHGrid":{"role":"pseudoSymbol","title":"LazyHGrid","abstract":[{"type":"text","text":"Grid는 웹 페이지에서 주로 사용되는 방법으로 요소들을 특정 패턴으로 나열하는 방식입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.8)LazyGrid#LazyHGrid","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.8)lazygrid#LazyHGrid"},"StateBinding3.png":{"alt":"preview","type":"image","identifier":"StateBinding3.png","variants":[{"url":"\/images\/StateBinding3.png","traits":["1x","light"]}]},"doc://CodersHighDocument/tutorials/SwiftUI":{"role":"overview","title":"SwiftUI 프로토타이핑","abstract":[{"type":"text","text":"SwiftUI의 View에 대해 학습해보고 직접 UI화면을 구현해봅시다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI","kind":"overview","type":"topic","url":"\/tutorials\/swiftui"},"doc://CodersHighDocument/tutorials/CodersHighDocument/3.2)Paints#Paints":{"role":"pseudoSymbol","title":"Paints","abstract":[{"type":"text","text":"Paint는 Shape의 내부를 정해진 하나로 채워버리는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.2)Paints#Paints","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/3.2)paints#Paints"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.6)Alert&ActionSheet#ActionSheet":{"role":"pseudoSymbol","title":"ActionSheet","abstract":[{"type":"text","text":"Alert와 ActionSheet는 알림창을 띄워서 사용자가 선택을 할 수 있는 화면을 구현하는 데 사용되는 View입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.6)Alert&ActionSheet#ActionSheet","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.6)alert&actionsheet#ActionSheet"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.8)Spacer&Divider#Divider":{"role":"pseudoSymbol","title":"Divider","abstract":[{"type":"text","text":"Spacer와 Divider는 View 사이의 구분을 위해 사용됩니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.8)Spacer&Divider#Divider","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.8)spacer&divider#Divider"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.12)GeometryReader":{"role":"project","title":"GeometryReader","estimatedTime":"10분","abstract":[{"type":"text","text":"GeometryReader를 사용하여 내부의 view가 전체 view의 틀 안에서 좌표계를 이용하여 내부 요소들을 쉽게 배치할 수 있습니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.12)GeometryReader","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.12)geometryreader"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.6)Alert&ActionSheet":{"role":"project","title":"Alert & ActionSheet","estimatedTime":"10분","abstract":[{"type":"text","text":"Alert와 ActionSheet는 알림창을 띄워서 사용자가 선택을 할 수 있는 화면을 구현하는 데 사용되는 View입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.6)Alert&ActionSheet","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.6)alert&actionsheet"},"doc://CodersHighDocument/tutorials/SwiftUI/SwiftUI-Drawing-and-Animation":{"role":"article","title":"SwiftUI Drawing and Animation","abstract":[],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/SwiftUI-Drawing-and-Animation","kind":"article","type":"topic","url":"\/tutorials\/swiftui\/swiftui-drawing-and-animation"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.9)ProgressView#Custom-ProgressView":{"role":"pseudoSymbol","title":"Custom ProgressView","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.9)ProgressView#Custom-ProgressView","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.9)progressview#Custom-ProgressView"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.3)ScrollView":{"role":"project","title":"ScrollView","estimatedTime":"5분","abstract":[{"type":"text","text":"ScrollView는 한 화면에 모든 내용을 보여주지 못하는 경우 화면을 스크롤하여 화면에서 벗어난 부분의 내용을 볼 수 있도록 만들어줍니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.3)ScrollView","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.3)scrollview"},"doc://CodersHighDocument/tutorials/CodersHighDocument/3.4)Gesture":{"role":"project","title":"Gesture","estimatedTime":"5분","abstract":[{"type":"text","text":"Gesture는 사용자의 특정한 행동에 따라 뷰에 변화가 알어나게 하는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.4)Gesture","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/3.4)gesture"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.6)Alert&ActionSheet#Alert":{"role":"pseudoSymbol","title":"Alert","abstract":[{"type":"text","text":"Alert와 ActionSheet는 알림창을 띄워서 사용자가 선택을 할 수 있는 화면을 구현하는 데 사용되는 View입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.6)Alert&ActionSheet#Alert","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.6)alert&actionsheet#Alert"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.3)Stack":{"role":"project","title":"Stack","estimatedTime":"5분","abstract":[{"type":"text","text":"SwiftUI에서는 두개 이상의 View를 나열하기 위해서는 Stack을 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.3)Stack","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/1.3)stack"},"doc://CodersHighDocument/tutorials/CodersHighDocument/3.1)Shapes":{"role":"project","title":"Shapes","estimatedTime":"5분","abstract":[{"type":"text","text":"Animation은 이름대로 특정한 조건에 대하여 애니메이션으로 나타나는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.1)Shapes","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/3.1)shapes"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.4)Button#Button":{"role":"pseudoSymbol","title":"Button의 구조","abstract":[{"type":"text","text":"Button은 클릭되었을 때 action 작업을 수행하는 control입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.4)Button#Button","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.4)button#Button"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.2)Image":{"role":"project","title":"Image","estimatedTime":"5분","abstract":[{"type":"text","text":"Image는 이미지를 보여주는 view입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.2)Image","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/1.2)image"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.10)Form&GroupBox#Form":{"role":"pseudoSymbol","title":"Form","abstract":[{"type":"text","text":"Form은 데이터 혹은 앱의 설정들을 나타내기 위해 사용하는 컨테이너입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.10)Form&GroupBox#Form","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.10)form&groupbox#Form"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.5)TabView":{"role":"project","title":"TabView","estimatedTime":"5분","abstract":[{"type":"text","text":"TabView는 화면의 하단에 생성되는 Bar를 통해 여러가지 View로의 전환이 가능하도록 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.5)TabView","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.5)tabview"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.10)Form&GroupBox#Form-&-Section":{"role":"pseudoSymbol","title":"Form & Section","abstract":[{"type":"text","text":"Form은 데이터 혹은 앱의 설정들을 나타내기 위해 사용하는 컨테이너입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.10)Form&GroupBox#Form-&-Section","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.10)form&groupbox#Form-&-Section"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.6)@State&@Binding#@State":{"role":"pseudoSymbol","title":"@State","abstract":[{"type":"text","text":"SwiftUI에서 @State와 @Binding은 가장 필수적으로 사용되는 Property Wrapper 중 한 종류입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.6)@State&@Binding#@State","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.6)@state&@binding#@State"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.11)OutlineGroup&DisclosureGroup":{"role":"project","title":"OutlineGroup & DisclosureGroup","estimatedTime":"10분","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.11)OutlineGroup&DisclosureGroup","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.11)outlinegroup&disclosuregroup"},"doc://CodersHighDocument/tutorials/SwiftUI/SwiftUI-Views":{"role":"article","title":"SwiftUI Views","abstract":[],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/SwiftUI-Views","kind":"article","type":"topic","url":"\/tutorials\/swiftui\/swiftui-views"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.3)ScrollView#ScrollView":{"role":"pseudoSymbol","title":"ScrollView","abstract":[{"type":"text","text":"ScrollView는 한 화면에 모든 내용을 보여주지 못하는 경우 화면을 스크롤하여 화면에서 벗어난 부분의 내용을 볼 수 있도록 만들어줍니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.3)ScrollView#ScrollView","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.3)scrollview#ScrollView"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.7)Toggle&Picker#Toggle":{"role":"pseudoSymbol","title":"Toggle","abstract":[{"type":"text","text":"SwiftUI의 Value Selector는 여러가지 값들 중 하나를 선택할 수 있는 control View입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.7)Toggle&Picker#Toggle","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.7)toggle&picker#Toggle"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.1)ForEach#ForEach":{"role":"pseudoSymbol","title":"ForEach","abstract":[{"type":"text","text":"View를 반복하여 나열하는 경우에 ForEach를 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.1)ForEach#ForEach","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.1)foreach#ForEach"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.8)LazyGrid":{"role":"project","title":"LazyGrid","estimatedTime":"10분","abstract":[{"type":"text","text":"Grid는 웹 페이지에서 주로 사용되는 방법으로 요소들을 특정 패턴으로 나열하는 방식입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.8)LazyGrid","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.8)lazygrid"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.12)GeometryReader#GeometryReader":{"role":"pseudoSymbol","title":"GeometryReader","abstract":[{"type":"text","text":"GeometryReader를 사용하여 내부의 view가 전체 view의 틀 안에서 좌표계를 이용하여 내부 요소들을 쉽게 배치할 수 있습니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.12)GeometryReader#GeometryReader","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.12)geometryreader#GeometryReader"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.1)ForEach":{"role":"project","title":"ForEach","estimatedTime":"10분","abstract":[{"type":"text","text":"View를 반복하여 나열하는 경우에 ForEach를 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.1)ForEach","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.1)foreach"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.4)Button#Button-Style":{"role":"pseudoSymbol","title":"재사용 가능한 Button Style","abstract":[{"type":"text","text":"Button은 클릭되었을 때 action 작업을 수행하는 control입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.4)Button#Button-Style","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.4)button#Button-Style"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.10)Form&GroupBox":{"role":"project","title":"Form","estimatedTime":"15분","abstract":[{"type":"text","text":"Form은 데이터 혹은 앱의 설정들을 나타내기 위해 사용하는 컨테이너입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.10)Form&GroupBox","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.10)form&groupbox"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.10)Form&GroupBox#GroupBox":{"role":"pseudoSymbol","title":"GroupBox","abstract":[{"type":"text","text":"Form은 데이터 혹은 앱의 설정들을 나타내기 위해 사용하는 컨테이너입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.10)Form&GroupBox#GroupBox","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.10)form&groupbox#GroupBox"},"StateBindingCode2.swift":{"syntax":"swift","content":["import SwiftUI","","struct StateBindingView: View{","    ","    @State private var isPlaying = false","    ","    @Environment(\\.colorScheme) var colorScheme","    @State private var progress: Double = 65.0","    @State private var time: Int = 188","    @State var timer = Timer.publish (every: 1, on: .current, in: .common).autoconnect()","    ","    var body: some View{","        VStack {","            HStack{","                Image(uiImage: (UIImage(named: \"music.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 100, height: 100)","                ","                Image(uiImage: (UIImage(named: colorScheme == .dark ? \"music_text.png\" : \"music_text_light.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 250, height: 100)","            }","            VStack{","                ProgressView(\"\", value: progress, total: 188)","                    .progressViewStyle(LinearProgressViewStyle(tint: Color.pink))","                ","                HStack{","                    Text(\"\\(Int(progress)\/60):\\(String(format: \"%02d\", Int(progress)%60))\")","                        .fontWeight(.bold)","                    ","                    Spacer()","                    ","                    Text(\"\\(time\/60):\\(String(format: \"%02d\", time%60))\")","                        .fontWeight(.bold)","                }","            }","            .frame(width: 350)","            .padding()","            ","            HStack(spacing: 50){","                Image(systemName: \"backward.fill\")","                ","                Image(systemName: \"forward.fill\")","            }","            .font(.system(size: 40))","        }","        .onReceive(timer) { _ in","            if isPlaying && self.progress < 188 {","                self.progress += 1","            }","        }","    }","}","","struct StateBindingView_Previews: PreviewProvider {","    static var previews: some View {","        StateBindingView()","    }","}"],"fileName":"StateBindingView.swift","identifier":"StateBindingCode2.swift","type":"file","fileType":"swift","highlights":[{"line":5},{"line":6}]},"StateBindingCode5.swift":{"syntax":"swift","content":["import SwiftUI","","struct StateBindingView: View{","    ","    @State private var isPlaying = false","    ","    @Environment(\\.colorScheme) var colorScheme","    @State private var progress: Double = 65.0","    @State private var time: Int = 188","    @State var timer = Timer.publish (every: 1, on: .current, in: .common).autoconnect()","    ","    var body: some View{","        VStack {","            HStack{","                Image(uiImage: (UIImage(named: \"music.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 100, height: 100)","                ","                Image(uiImage: (UIImage(named: colorScheme == .dark ? \"music_text.png\" : \"music_text_light.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 250, height: 100)","            }","            VStack{","                ProgressView(\"\", value: progress, total: 188)","                    .progressViewStyle(LinearProgressViewStyle(tint: Color.pink))","                ","                HStack{","                    Text(\"\\(Int(progress)\/60):\\(String(format: \"%02d\", Int(progress)%60))\")","                        .fontWeight(.bold)","                    ","                    Spacer()","                    ","                    Text(\"\\(time\/60):\\(String(format: \"%02d\", time%60))\")","                        .fontWeight(.bold)","                }","            }","            .frame(width: 350)","            .padding()","            ","            HStack(spacing: 50){","                Image(systemName: \"backward.fill\")","                ","                Button(action: {","                    self.isPlaying.toggle()","                }) {","                    Image(systemName: isPlaying ? \"pause.fill\" : \"play.fill\")","                        .foregroundColor(.pink)","                        .frame(width: 50, height: 50)","                }","                ","                Image(systemName: \"forward.fill\")","            }","            .font(.system(size: 40))","        }","        .onReceive(timer) { _ in","            if isPlaying && self.progress < 188 {","                self.progress += 1","            }","        }","    }","}","","struct StateBindingView_Previews: PreviewProvider {","    static var previews: some View {","        StateBindingView()","    }","}"],"fileName":"StateBindingView.swift","identifier":"StateBindingCode5.swift","type":"file","fileType":"swift","highlights":[]},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.11)OutlineGroup&DisclosureGroup#OutlineGroup":{"role":"pseudoSymbol","title":"OutlineGroup","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.11)OutlineGroup&DisclosureGroup#OutlineGroup","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.11)outlinegroup&disclosuregroup#OutlineGroup"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.8)Spacer&Divider#Spacer":{"role":"pseudoSymbol","title":"Spacer","abstract":[{"type":"text","text":"Spacer와 Divider는 View 사이의 구분을 위해 사용됩니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.8)Spacer&Divider#Spacer","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.8)spacer&divider#Spacer"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.7)Sheet":{"role":"project","title":"Sheet","estimatedTime":"5분","abstract":[{"type":"text","text":"Sheet는 기존의 View 위에 보여지는 새로운 View입니다."},{"type":"text","text":" "},{"type":"text","text":"modal"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.7)Sheet","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.7)sheet"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.1)Text":{"role":"project","title":"Text","estimatedTime":"5분","abstract":[{"type":"text","text":"Text View는 앱의 UI에 문자열을 그립니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.1)Text","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/1.1)text"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.4)Button#Button-UI":{"role":"pseudoSymbol","title":"Button UI 변경","abstract":[{"type":"text","text":"Button은 클릭되었을 때 action 작업을 수행하는 control입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.4)Button#Button-UI","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.4)button#Button-UI"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.1)Text#Text":{"role":"pseudoSymbol","title":"Text","abstract":[{"type":"text","text":"Text View는 앱의 UI에 문자열을 그립니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.1)Text#Text","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.1)text#Text"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.3)Stack#HStack":{"role":"pseudoSymbol","title":"HStack","abstract":[{"type":"text","text":"SwiftUI에서는 두개 이상의 View를 나열하기 위해서는 Stack을 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.3)Stack#HStack","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.3)stack#HStack"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.2)List#StaticList":{"role":"pseudoSymbol","title":"StaticList","abstract":[{"type":"text","text":"List는 목록 형태의 View를 구현하기 위해 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.2)List#StaticList","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.2)list#StaticList"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.2)List":{"role":"project","title":"List","estimatedTime":"15분","abstract":[{"type":"text","text":"List는 목록 형태의 View를 구현하기 위해 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.2)List","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.2)list"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.7)Toggle&Picker":{"role":"project","title":"Toggle & Picker","estimatedTime":"10분","abstract":[{"type":"text","text":"SwiftUI의 Value Selector는 여러가지 값들 중 하나를 선택할 수 있는 control View입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.7)Toggle&Picker","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/1.7)toggle&picker"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.5)TextField#TextField":{"role":"pseudoSymbol","title":"TextField","abstract":[{"type":"text","text":"TextField는 사용자가 텍스트를 직접 입력할 수 있는 공간을 제공합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.5)TextField#TextField","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.5)textfield#TextField"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.1)Text#ViewModifier":{"role":"pseudoSymbol","title":"ViewModifier","abstract":[{"type":"text","text":"Text View는 앱의 UI에 문자열을 그립니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.1)Text#ViewModifier","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.1)text#ViewModifier"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.8)Spacer&Divider":{"role":"project","title":"Spacer & Divider","estimatedTime":"5분","abstract":[{"type":"text","text":"Spacer와 Divider는 View 사이의 구분을 위해 사용됩니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.8)Spacer&Divider","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/1.8)spacer&divider"},"StateBindingCode7.swift":{"syntax":"swift","content":["import SwiftUI","","struct StateBindingView: View{","    ","    @State private var isPlaying = false","    ","    @Environment(\\.colorScheme) var colorScheme","    @State private var progress: Double = 65.0","    @State private var time: Int = 188","    @State var timer = Timer.publish (every: 1, on: .current, in: .common).autoconnect()","    ","    var body: some View{","        VStack {","            HStack{","                Image(uiImage: (UIImage(named: \"music.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 100, height: 100)","                ","                Image(uiImage: (UIImage(named: colorScheme == .dark ? \"music_text.png\" : \"music_text_light.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 250, height: 100)","            }","            VStack{","                ProgressView(\"\", value: progress, total: 188)","                    .progressViewStyle(LinearProgressViewStyle(tint: Color.pink))","                ","                HStack{","                    Text(\"\\(Int(progress)\/60):\\(String(format: \"%02d\", Int(progress)%60))\")","                        .fontWeight(.bold)","                    ","                    Spacer()","                    ","                    Text(\"\\(time\/60):\\(String(format: \"%02d\", time%60))\")","                        .fontWeight(.bold)","                }","            }","            .frame(width: 350)","            .padding()","            ","            HStack(spacing: 50){","                Image(systemName: \"backward.fill\")","                ","                PlayButton()","                ","                Image(systemName: \"forward.fill\")","            }","            .font(.system(size: 40))","        }","        .onReceive(timer) { _ in","            if isPlaying && self.progress < 188 {","                self.progress += 1","            }","        }","    }","}","","struct PlayButton: View {","    ","    var body: some View {","        Button(action: {","            self.isPlaying.toggle()","        }) {","            Image(systemName: isPlaying ? \"pause.fill\" : \"play.fill\")","                .foregroundColor(.pink)","                .frame(width: 50, height: 50)","        }","    }","}","","","","struct StateBindingView_Previews: PreviewProvider {","    static var previews: some View {","        StateBindingView()","    }","}"],"fileName":"StateBindingView.swift","identifier":"StateBindingCode7.swift","type":"file","fileType":"swift","highlights":[{"line":45},{"line":46}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.4)NavigationView#NavigationView":{"role":"pseudoSymbol","title":"NavigationView 기초","abstract":[{"type":"text","text":"NavigationView는 SwiftUI의 가장 중요한 구성 요소 중 하나로, 계층적인 방식으로 메인 화면에서 서브 화면으로 쉽게 전환할 수 있도록 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.4)NavigationView#NavigationView","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.4)navigationview#NavigationView"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.6)@State&@Binding#@Binding":{"role":"pseudoSymbol","title":"@Binding","abstract":[{"type":"text","text":"SwiftUI에서 @State와 @Binding은 가장 필수적으로 사용되는 Property Wrapper 중 한 종류입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.6)@State&@Binding#@Binding","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.6)@state&@binding#@Binding"},"doc://CodersHighDocument/tutorials/CodersHighDocument/3.3)Animation#Animation":{"role":"pseudoSymbol","title":"Animation","abstract":[{"type":"text","text":"Animation은 이름대로 특정한 조건에 대하여 애니메이션으로 나타나는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.3)Animation#Animation","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/3.3)animation#Animation"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.7)Toggle&Picker#Picker-custom":{"role":"pseudoSymbol","title":"Picker custom","abstract":[{"type":"text","text":"SwiftUI의 Value Selector는 여러가지 값들 중 하나를 선택할 수 있는 control View입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.7)Toggle&Picker#Picker-custom","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.7)toggle&picker#Picker-custom"},"StateBindingCode4.swift":{"syntax":"swift","content":["import SwiftUI","","struct StateBindingView: View{","    ","    @State private var isPlaying = false","    ","    @Environment(\\.colorScheme) var colorScheme","    @State private var progress: Double = 65.0","    @State private var time: Int = 188","    @State var timer = Timer.publish (every: 1, on: .current, in: .common).autoconnect()","    ","    var body: some View{","        VStack {","            HStack{","                Image(uiImage: (UIImage(named: \"music.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 100, height: 100)","                ","                Image(uiImage: (UIImage(named: colorScheme == .dark ? \"music_text.png\" : \"music_text_light.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: .fit)","                    .frame(width: 250, height: 100)","            }","            VStack{","                ProgressView(\"\", value: progress, total: 188)","                    .progressViewStyle(LinearProgressViewStyle(tint: Color.pink))","                ","                HStack{","                    Text(\"\\(Int(progress)\/60):\\(String(format: \"%02d\", Int(progress)%60))\")","                        .fontWeight(.bold)","                    ","                    Spacer()","                    ","                    Text(\"\\(time\/60):\\(String(format: \"%02d\", time%60))\")","                        .fontWeight(.bold)","                }","            }","            .frame(width: 350)","            .padding()","            ","            HStack(spacing: 50){","                Image(systemName: \"backward.fill\")","                ","                Button(action: {","                    self.isPlaying.toggle()","                }) {","                    Image(systemName: isPlaying ? \"pause.fill\" : \"play.fill\")","                        .foregroundColor(.pink)","                        .frame(width: 50, height: 50)","                }","                ","                Image(systemName: \"forward.fill\")","            }","            .font(.system(size: 40))","        }","        .onReceive(timer) { _ in","            if isPlaying && self.progress < 188 {","                self.progress += 1","            }","        }","    }","}","","struct StateBindingView_Previews: PreviewProvider {","    static var previews: some View {","        StateBindingView()","    }","}"],"fileName":"StateBindingView.swift","identifier":"StateBindingCode4.swift","type":"file","fileType":"swift","highlights":[{"line":46}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/3.1)Shapes#Other-Shapes":{"role":"pseudoSymbol","title":"Other Shapes","abstract":[{"type":"text","text":"Animation은 이름대로 특정한 조건에 대하여 애니메이션으로 나타나는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.1)Shapes#Other-Shapes","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/3.1)shapes#Other-Shapes"},"StateBinding4.png":{"alt":"preview","type":"image","identifier":"StateBinding4.png","variants":[{"url":"\/images\/StateBinding4.png","traits":["1x","light"]}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.2)List#DynamicList":{"role":"pseudoSymbol","title":"DynamicList","abstract":[{"type":"text","text":"List는 목록 형태의 View를 구현하기 위해 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.2)List#DynamicList","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.2)list#DynamicList"},"StateBinding2.png":{"alt":"preview","type":"image","identifier":"StateBinding2.png","variants":[{"url":"\/images\/StateBinding2.png","traits":["1x","light"]}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.9)ProgressView":{"role":"project","title":"ProgressView","estimatedTime":"10분","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.9)ProgressView","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.9)progressview"},"StateBinding.png":{"alt":"preview","type":"image","identifier":"StateBinding.png","variants":[{"url":"\/images\/StateBinding.png","traits":["1x","light"]}]}}}