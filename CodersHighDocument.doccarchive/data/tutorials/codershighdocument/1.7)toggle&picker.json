{"metadata":{"title":"Toggle & Picker","categoryPathComponent":"SwiftUI","role":"project","category":"SwiftUI"},"hierarchy":{"modules":[{"reference":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/SwiftUI-Basic","projects":[{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.1)Text","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.1)Text#Text"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.1)Text#ViewModifier"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.2)Image","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.2)Image#Image-file"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.2)Image#Image"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.3)Stack","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.3)Stack#VStack"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.3)Stack#HStack"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.3)Stack#ZStack"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.4)Button","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.4)Button#Button"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.4)Button#Button-UI"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.4)Button#Button-Style"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.5)TextField","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.5)TextField#TextField"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.6)@State&@Binding","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.6)@State&@Binding#@State"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.6)@State&@Binding#@Binding"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.7)Toggle&Picker","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.7)Toggle&Picker#Toggle"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.7)Toggle&Picker#Picker"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.7)Toggle&Picker#Picker-custom"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.8)Spacer&Divider","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.8)Spacer&Divider#Spacer"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.8)Spacer&Divider#Divider"}]}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/SwiftUI-Views","projects":[{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.1)ForEach","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.1)ForEach#ForEach"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.2)List","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.2)List#StaticList"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.2)List#DynamicList"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.3)ScrollView","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.3)ScrollView#ScrollView"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.4)NavigationView","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.4)NavigationView#NavigationView"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.4)NavigationView#Animals"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.5)TabView","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.5)TabView#TabView"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.6)LazyGrid","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.6)LazyGrid#LazyHGrid"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.6)LazyGrid#LazyVGrid"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.7)Alert&ActionSheet","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.7)Alert&ActionSheet#Alert"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.7)Alert&ActionSheet#ActionSheet"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.8)Sheet","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.8)Sheet#Sheet"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.9)ProgressView","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.9)ProgressView#ProgressView"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.9)ProgressView#Custom-ProgressView"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.10)Form&GroupBox","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.10)Form&GroupBox#Form"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.10)Form&GroupBox#Form-&-Section"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.10)Form&GroupBox#GroupBox"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.11)OutlineGroup&DisclosureGroup","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.11)OutlineGroup&DisclosureGroup#OutlineGroup"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.11)OutlineGroup&DisclosureGroup#DisclosureGroup"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.12)GeometryReader","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.12)GeometryReader#GeometryReader"}]}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/SwiftUI-Drawing-and-Animation","projects":[{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.1)Shapes","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.1)Shapes#Shapes"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.1)Shapes#Other-Shapes"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.2)Paints","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.2)Paints#Paints"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.3)Animation","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.3)Animation#Animation"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.4)Gesture","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.4)Gesture#Gesture"}]}]}],"reference":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI","paths":[["doc:\/\/CodersHighDocument\/tutorials\/SwiftUI","doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/$volume","doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/SwiftUI-Basic"]]},"schemaVersion":{"major":0,"minor":1,"patch":0},"kind":"project","identifier":{"url":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.7)Toggle&Picker","interfaceLanguage":"swift"},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUI의 Value Selector는 여러가지 값들 중 하나를 선택할 수 있는 control View입니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Value Selector에는 Toggle, Slider, Stepper, Picker, DatePicker, ColorPicker가 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"그 중 가장 많이 사용되는 Toggle과 Picker에 대해 알아봅시다."}]}],"estimatedTimeInMinutes":10,"title":"Toggle & Picker","image":"TogglePicker_intro.png","chapter":"SwiftUI Basic","kind":"hero","backgroundImage":"TogglePicker_intro.png"},{"kind":"tasks","tasks":[{"anchor":"Toggle","title":"Toggle","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Toggle은 On, Off 상태를 전환하는 control입니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"On이 선택된 경우와 Off가 선택된 경우에 따라 다른 결과를 보여주는 데 주로 사용됩니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"작동되었을 때와 되지 않았을 때를 구분하기 위하여 boolean 값을 가지는 변수를 정의하여 사용합니다."}]}],"mediaPosition":"trailing","media":""}],"stepsSection":[{"code":"ToggleCode1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"다크모드를 On\/Off 하는 화면을 구현해봅시다."}]}],"caption":[],"type":"step","runtimePreview":"Toggle1.png","media":null},{"code":"ToggleCode2.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Toggle은 Toogle()의 형태로 사용합니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Toggle은 Label 부분과 isOn으로 구성되어 있습니다."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"ToggleCode3.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"isOn은 Toggle이 켜져 있는지 여부를 결정하는 Boolean 값을 넣습니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Bool 값의 @State 변수를 선언하고 그 변수의 앞에 $를 붙여서 사용합니다. 예제 코드에서는 isToogle이라는 변수를 선언하였습니다."}]}],"type":"step","runtimePreview":"Toggle3.png","media":null},{"code":"ToggleCode4.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Label부분에는 Toggle의 상태를 보여주는 텍스트를 입력합니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Label을 작성하는 방식에는 두가지가 있는데, 속성 변경 없이 텍스트로만 되어있는 경우에는 ()안에 첫번째 파라미터로 넣으면 됩니다."}]}],"type":"step","runtimePreview":"Toggle4.png","media":null},{"code":"ToggleCode5.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Text에 modifier를 붙이고 싶거나 하는 경우에는 Toggle()의 뒤에 {}를 붙이고 그 안에 Text()를 넣어서 사용합니다."}]}],"caption":[],"type":"step","runtimePreview":"Toggle4.png","media":null},{"code":"ToggleCode6.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Label을 보여주지 않으려면 .labelsHidden()을 사용하면 됩니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Label을 화면에 맞게 원하는 대로 custom하기 어려운 경우 Label을 가리고 다른 View들과 조합하여 사용합니다."}]}],"type":"step","runtimePreview":"Toggle6.png","media":null},{"code":"ToggleCode7.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Toggle의 style을 지정할 수 있습니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"기본적으로 Switch, Button의 style을 사용할 수 있고,"},{"type":"text","text":" "},{"type":"text","text":"custom style을 만들어서 사용할 수도 있습니다. "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/togglestyle"}]}],"type":"step","runtimePreview":"Toggle7.png","media":null},{"code":"ToggleCode8.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Toggle의 값 변화에 따라 Image와 Text값을 변경하기 위해서"},{"type":"text","text":" "},{"type":"text","text":"isToggle ? “dark_mode” : “light_mode”의 형태로 코드를 수정합니다."}]}],"caption":[{"type":"aside","style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Bool ? A : B -> Bool값이 true이면 A, false이면 B"},{"type":"text","text":" "},{"type":"text","text":"즉, isToggle이 true이면 Image(“dark_mode”)"},{"type":"text","text":" "},{"type":"text","text":"isToggle이 false이면 Image(“light_mode”)가 된다는 것을 의미합니다."}]}]}],"type":"step","runtimePreview":"Toggle8.png","media":null},{"code":"ToggleCode9.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Text도 마찬가지로 isToggle ? “ON” : “OFF”의 형태로 수정합니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"이제 코드를 실행해서 Toggle의 값이 변경될 때 어떻게 화면이 변하는 지 확인해보세요."}]}],"type":"step","runtimePreview":"Toggle9.png","media":null}]},{"anchor":"Picker","title":"Picker","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Picker는 여러가지 항목들 중에 어떤 것을 선택하였는 지 표시하는 control입니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"선택된 값을 가지는 변수를 @State로 정의하여 사용합니다."}]}],"mediaPosition":"trailing","media":""}],"stepsSection":[{"code":"PickerCode1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"좋아하는 맛을 선택하는 Picker를 만들어봅시다."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"PickerCode2.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Picker는 Picker(){}의 형태로 사용합니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Picker의 값들에는 label, 선택한 binding 값, 선택할 수 있는 값이 있습니다."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"PickerCode3.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"()의 안에는 label과 선택한 binding되는 값을 삽입합니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"선택한 값을 저장하는 @State 변수를 선언해줍니다."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"PickerCode4.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Label에는 선택하는 목적을 설명하는 텍스트를 넣습니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"선택한 binding되는 값은 selection: $selectedFlavor의 형태로 넣습니다."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"PickerCode5.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"다음으로 {}의 안에 Picker를 통해 선택할 수 있는 값들을 넣어줍니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"그 전에 enum을 사용해서 선택할 수 있는 값들을 열거형으로 만들어줍니다."},{"type":"text","text":" "},{"type":"text","text":"Flavor라는 이름의 enum을 만들어주고 그 안에 chocolate, Vanilla, Strawberry, MintChocolate 네 가지의 case를 선언합니다."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"PickerCode6.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"열거 사례들의 raw value의 타입이 String이므로 Flavor: String의 형태로 타입을 지정해줍니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"selectedFlavor의 초기값을 Flavor.Chocolate로 지정합니다. 다른 값을 초기값으로 지정하고 싶으면 해당하는 값으로 변경하면 됩니다."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"PickerCode7.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Picker의 {} 안에 4가지 맛의 Text를 넣고 각각의 맛을 구분하기 위해서 tag를 붙여줍니다."}]}],"caption":[],"type":"step","runtimePreview":"Picker7.png","media":null},{"code":"PickerCode8.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"선택한 맛을 보여주는 Text에 selectedFlavor.rawValue를 넣어줍니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"enum에서 rawValue의 타입을 String으로 지정해주었으므로 selectedFlavor.rawValue는 각 값의 String 값을 반환합니다."}]}],"type":"step","runtimePreview":"Picker8.png","media":null},{"code":"PickerCode9.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Picker의 Style을 지정해줄 수 있습니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"segmented, wheel의 style 형태를 사용할 수 있습니다."},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/pickerstyle"}]}],"type":"step","runtimePreview":"Picker9.png","media":null}]},{"anchor":"Picker-custom","title":"Picker custom","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Picker를 custom하는 방법을 알아봅니다."}]}],"mediaPosition":"trailing","media":""}],"stepsSection":[{"code":"PickerCode10.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"label의 값이 EmptyView()인 Picker를 만들어줍니다."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"PickerCode11.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Menu의 안에 Picker를 넣어줍니다."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"PickerCode12.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Menu의 label부분에 원하는 Picker의 모양을 넣어주면 해당 모양으로 custom된 Picker가 만들어집니다."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"PickerCode13.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"선택된 값을 보여주는 Text와 “chevrom.down” SFsymbol을 HStack으로 정렬한 View로 custom 한 예제코드입니다."}]}],"caption":[],"type":"step","runtimePreview":"Picker13.png","media":null},{"code":"PickerCode14.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Form의 형태로 Picker를 만들수도 있습니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"NavigationView, Form, Section에 대해서는 Chapter2에서 자세히 다룹니다."}]}],"type":"step","runtimePreview":"Picker14.png","media":null}]}]},{"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.8)Spacer&Divider","overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Spacer & Divider","abstract":[{"type":"text","text":"Spacer와 Divider는 View 사이의 구분을 위해 사용됩니다."}]}],"references":{"doc://CodersHighDocument/tutorials/CodersHighDocument/2.2)List#StaticList":{"role":"pseudoSymbol","title":"StaticList","abstract":[{"type":"text","text":"List는 목록 형태의 View를 구현하기 위해 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.2)List#StaticList","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.2)list#StaticList"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.2)List#DynamicList":{"role":"pseudoSymbol","title":"DynamicList","abstract":[{"type":"text","text":"List는 목록 형태의 View를 구현하기 위해 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.2)List#DynamicList","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.2)list#DynamicList"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.6)@State&@Binding#@State":{"role":"pseudoSymbol","title":"@State","abstract":[{"type":"text","text":"SwiftUI에서 @State와 @Binding은 가장 필수적으로 사용되는 Property Wrapper 중 한 종류입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.6)@State&@Binding#@State","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.6)@state&@binding#@State"},"PickerCode7.swift":{"syntax":"swift","content":["import SwiftUI","","struct PickerView: View {","    @State private var selectedFlavor = Flavor.Chocolate","    ","    var body: some View{","        VStack{","            Picker(\"Flavor\", selection: $selectedFlavor){","                Text(\"Chocolate\").tag(Flavor.Chocolate)","                Text(\"Vanilla\").tag(Flavor.Vanilla)","                Text(\"Strawberry\").tag(Flavor.Strawberry)","                Text(\"MintChocolate\").tag(Flavor.MintChocolate)","            }","            ","            Text(\"선택한 맛 : \")","                .font(.largeTitle)","                .foregroundColor(.pink)","        }","    }","}","","enum Flavor: String {","    case Chocolate","    case Vanilla","    case Strawberry","    case MintChocolate","}","","","struct PickerView_Previews: PreviewProvider {","    static var previews: some View {","        PickerView()","    }","}"],"fileName":"PickerView.swift","identifier":"PickerCode7.swift","type":"file","fileType":"swift","highlights":[{"line":9},{"line":10},{"line":11},{"line":12}]},"PickerCode1.swift":{"syntax":"swift","content":["import SwiftUI","","struct PickerView: View {","    ","    var body: some View{","        VStack{","            \/\/여기에 Picker에 대한 코드를 작성합니다.","            ","            Text(\"선택한 맛 : \")","                .font(.largeTitle)","                .foregroundColor(.pink)","        }","    }","}","","struct PickerView_Previews: PreviewProvider {","    static var previews: some View {","        PickerView()","    }","}"],"fileName":"PickerView.swift","identifier":"PickerCode1.swift","type":"file","fileType":"swift","highlights":[]},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.1)Text#Text":{"role":"pseudoSymbol","title":"Text","abstract":[{"type":"text","text":"Text View는 앱의 UI에 문자열을 그립니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.1)Text#Text","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.1)text#Text"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.3)Stack#ZStack":{"role":"pseudoSymbol","title":"ZStack","abstract":[{"type":"text","text":"SwiftUI에서는 두개 이상의 View를 나열하기 위해서는 Stack을 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.3)Stack#ZStack","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.3)stack#ZStack"},"Picker9.png":{"alt":"preview","type":"image","identifier":"Picker9.png","variants":[{"url":"\/images\/Picker9.png","traits":["1x","light"]}]},"https://developer.apple.com/documentation/swiftui/togglestyle":{"title":"ToggleStyle","titleInlineContent":[{"type":"text","text":"ToggleStyle"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/togglestyle","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/togglestyle"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.3)ScrollView":{"role":"project","title":"ScrollView","estimatedTime":"5분","abstract":[{"type":"text","text":"ScrollView는 한 화면에 모든 내용을 보여주지 못하는 경우 화면을 스크롤하여 화면에서 벗어난 부분의 내용을 볼 수 있도록 만들어줍니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.3)ScrollView","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.3)scrollview"},"doc://CodersHighDocument/tutorials/CodersHighDocument/3.2)Paints":{"role":"project","title":"Paints","estimatedTime":"5분","abstract":[{"type":"text","text":"Paint는 Shape의 내부를 정해진 하나로 채워버리는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.2)Paints","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/3.2)paints"},"PickerCode9.swift":{"syntax":"swift","content":["import SwiftUI","","struct PickerView: View {","    @State private var selectedFlavor = Flavor.Chocolate","    ","    var body: some View{","        VStack{","            Picker(\"Flavor\", selection: $selectedFlavor){","                Text(\"Chocolate\").tag(Flavor.Chocolate)","                Text(\"Vanilla\").tag(Flavor.Vanilla)","                Text(\"Strawberry\").tag(Flavor.Strawberry)","                Text(\"MintChocolate\").tag(Flavor.MintChocolate)","            }","            .pickerStyle(.segmented)","            ","            Text(\"선택한 맛 : \\(selectedFlavor.rawValue)\")","                .font(.largeTitle)","                .foregroundColor(.pink)","        }","    }","}","","enum Flavor: String {","    case Chocolate","    case Vanilla","    case Strawberry","    case MintChocolate","}","","","struct PickerView_Previews: PreviewProvider {","    static var previews: some View {","        PickerView()","    }","}"],"fileName":"PickerView.swift","identifier":"PickerCode9.swift","type":"file","fileType":"swift","highlights":[{"line":14}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/3.1)Shapes":{"role":"project","title":"Shapes","estimatedTime":"5분","abstract":[{"type":"text","text":"Animation은 이름대로 특정한 조건에 대하여 애니메이션으로 나타나는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.1)Shapes","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/3.1)shapes"},"TogglePicker_intro.png":{"alt":"preview","type":"image","identifier":"TogglePicker_intro.png","variants":[{"url":"\/images\/TogglePicker_intro.png","traits":["1x","light"]}]},"ToggleCode6.swift":{"syntax":"swift","content":["import SwiftUI","","struct ToggleView: View {","    ","    @State private var isToggle = false","    ","    var body: some View {","        VStack{","            Text(\"DARK MODE\")","                .font(.largeTitle)","                .foregroundColor(.pink)","                .padding()","                .overlay(","                    RoundedRectangle(cornerRadius: 20)","                        .stroke(Color.pink, lineWidth: 5)","                )","            ","            Image(\"light_mode\")","                .resizable()","                .aspectRatio(contentMode: .fit)","                .frame(width: 400, height: 300)","            ","            HStack{","                Toggle(\"Label\", isOn: $isToggle)","                    .labelsHidden()","                ","                Text(\"OFF\")","                    .font(.title)","                    .padding()","                    .foregroundColor(.pink)","            }","        }","    }","}","","struct ToggleView_Previews: PreviewProvider {","    static var previews: some View {","        ToggleView()","    }","}"],"fileName":"ToggleView.swift","identifier":"ToggleCode6.swift","type":"file","fileType":"swift","highlights":[{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.7)Toggle&Picker#Toggle":{"role":"pseudoSymbol","title":"Toggle","abstract":[{"type":"text","text":"SwiftUI의 Value Selector는 여러가지 값들 중 하나를 선택할 수 있는 control View입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.7)Toggle&Picker#Toggle","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.7)toggle&picker#Toggle"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.2)List":{"role":"project","title":"List","estimatedTime":"15분","abstract":[{"type":"text","text":"List는 목록 형태의 View를 구현하기 위해 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.2)List","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.2)list"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.3)Stack":{"role":"project","title":"Stack","estimatedTime":"5분","abstract":[{"type":"text","text":"SwiftUI에서는 두개 이상의 View를 나열하기 위해서는 Stack을 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.3)Stack","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/1.3)stack"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.9)ProgressView":{"role":"project","title":"ProgressView","estimatedTime":"10분","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.9)ProgressView","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.9)progressview"},"PickerCode4.swift":{"syntax":"swift","content":["import SwiftUI","","struct PickerView: View {","    @State private var selectedFlavor","    ","    var body: some View{","        VStack{","            Picker(\"Flavor\", selection: $selectedFlavor){","                ","            }","            ","            Text(\"선택한 맛 : \")","                .font(.largeTitle)","                .foregroundColor(.pink)","        }","    }","}","","struct PickerView_Previews: PreviewProvider {","    static var previews: some View {","        PickerView()","    }","}"],"fileName":"PickerView.swift","identifier":"PickerCode4.swift","type":"file","fileType":"swift","highlights":[{"line":8}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.8)Sheet":{"role":"project","title":"Sheet","estimatedTime":"5분","abstract":[{"type":"text","text":"Sheet는 기존의 View 위에 보여지는 새로운 View입니다."},{"type":"text","text":" "},{"type":"text","text":"modal"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.8)Sheet","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.8)sheet"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.2)Image#Image":{"role":"pseudoSymbol","title":"Image","abstract":[{"type":"text","text":"Image는 이미지를 보여주는 view입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.2)Image#Image","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.2)image#Image"},"PickerCode10.swift":{"syntax":"swift","content":["import SwiftUI","","struct PickerView: View {","    @State private var selectedFlavor = Flavor.Chocolate","    ","    var body: some View{","        Picker(selection: $selectedFlavor, label: EmptyView()) {","            Text(\"Chocolate\").tag(Flavor.Chocolate)","            Text(\"Vanilla\").tag(Flavor.Vanilla)","            Text(\"Strawberry\").tag(Flavor.Strawberry)","            Text(\"MintChocolate\").tag(Flavor.MintChocolate)","        }","    }","}","","enum Flavor: String {","    case Chocolate","    case Vanilla","    case Strawberry","    case MintChocolate","}","","","struct PickerView_Previews: PreviewProvider {","    static var previews: some View {","        PickerView()","    }","}"],"fileName":"PickerView.swift","identifier":"PickerCode10.swift","type":"file","fileType":"swift","highlights":[]},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.4)NavigationView#Animals":{"role":"pseudoSymbol","title":"Animals 앱 만들기","abstract":[{"type":"text","text":"NavigationView는 SwiftUI의 가장 중요한 구성 요소 중 하나로, 계층적인 방식으로 메인 화면에서 서브 화면으로 쉽게 전환할 수 있도록 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.4)NavigationView#Animals","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.4)navigationview#Animals"},"PickerCode2.swift":{"syntax":"swift","content":["import SwiftUI","","struct PickerView: View {","    ","    var body: some View{","        VStack{","            Picker(){","                ","            }","            ","            Text(\"선택한 맛 : \")","                .font(.largeTitle)","                .foregroundColor(.pink)","        }","    }","}","","struct PickerView_Previews: PreviewProvider {","    static var previews: some View {","        PickerView()","    }","}"],"fileName":"PickerView.swift","identifier":"PickerCode2.swift","type":"file","fileType":"swift","highlights":[{"line":7},{"line":8},{"line":9}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.12)GeometryReader#GeometryReader":{"role":"pseudoSymbol","title":"GeometryReader","abstract":[{"type":"text","text":"GeometryReader를 사용하여 내부의 view가 전체 view의 틀 안에서 좌표계를 이용하여 내부 요소들을 쉽게 배치할 수 있습니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.12)GeometryReader#GeometryReader","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.12)geometryreader#GeometryReader"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.8)Spacer&Divider#Divider":{"role":"pseudoSymbol","title":"Divider","abstract":[{"type":"text","text":"Spacer와 Divider는 View 사이의 구분을 위해 사용됩니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.8)Spacer&Divider#Divider","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.8)spacer&divider#Divider"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.4)Button":{"role":"project","title":"Button","estimatedTime":"15분","abstract":[{"type":"text","text":"Button은 클릭되었을 때 action 작업을 수행하는 control입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.4)Button","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/1.4)button"},"doc://CodersHighDocument/tutorials/SwiftUI/SwiftUI-Drawing-and-Animation":{"role":"article","title":"SwiftUI Drawing and Animation","abstract":[],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/SwiftUI-Drawing-and-Animation","kind":"article","type":"topic","url":"\/tutorials\/swiftui\/swiftui-drawing-and-animation"},"PickerCode5.swift":{"syntax":"swift","content":["import SwiftUI","","struct PickerView: View {","    @State private var selectedFlavor","    ","    var body: some View{","        VStack{","            Picker(\"Flavor\", selection: $selectedFlavor){","                ","            }","            ","            Text(\"선택한 맛 : \")","                .font(.largeTitle)","                .foregroundColor(.pink)","        }","    }","}","","enum Flavor{","    case Chocolate","    case Vanilla","    case Strawberry","    case MintChocolate","}","","","struct PickerView_Previews: PreviewProvider {","    static var previews: some View {","        PickerView()","    }","}"],"fileName":"PickerView.swift","identifier":"PickerCode5.swift","type":"file","fileType":"swift","highlights":[{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26}]},"PickerCode14.swift":{"syntax":"swift","content":["import SwiftUI","","struct PickerView: View {","    @State private var selectedFlavor = Flavor.Chocolate","    ","    var body: some View{","        NavigationView{","            Form{","                Section{","                    Picker(\"Flavor\", selection: $selectedFlavor) {","                        Text(\"Chocolate\").tag(Flavor.Chocolate)","                        Text(\"Vanilla\").tag(Flavor.Vanilla)","                        Text(\"Strawberry\").tag(Flavor.Strawberry)","                        Text(\"MintChocolate\").tag(Flavor.MintChocolate)","                    }","                }","            }","        }","    }","}","","enum Flavor: String {","    case Chocolate","    case Vanilla","    case Strawberry","    case MintChocolate","}","","","struct PickerView_Previews: PreviewProvider {","    static var previews: some View {","        PickerView()","    }","}"],"fileName":"PickerView.swift","identifier":"PickerCode14.swift","type":"file","fileType":"swift","highlights":[{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.3)Stack#HStack":{"role":"pseudoSymbol","title":"HStack","abstract":[{"type":"text","text":"SwiftUI에서는 두개 이상의 View를 나열하기 위해서는 Stack을 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.3)Stack#HStack","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.3)stack#HStack"},"doc://CodersHighDocument/tutorials/CodersHighDocument/3.1)Shapes#Shapes":{"role":"pseudoSymbol","title":"Shapes","abstract":[{"type":"text","text":"Animation은 이름대로 특정한 조건에 대하여 애니메이션으로 나타나는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.1)Shapes#Shapes","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/3.1)shapes#Shapes"},"Toggle6.png":{"alt":"preview","type":"image","identifier":"Toggle6.png","variants":[{"url":"\/images\/Toggle6.png","traits":["1x","light"]}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.8)Spacer&Divider":{"role":"project","title":"Spacer & Divider","estimatedTime":"5분","abstract":[{"type":"text","text":"Spacer와 Divider는 View 사이의 구분을 위해 사용됩니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.8)Spacer&Divider","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/1.8)spacer&divider"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.10)Form&GroupBox#Form-&-Section":{"role":"pseudoSymbol","title":"Form & Section","abstract":[{"type":"text","text":"Form은 데이터 혹은 앱의 설정들을 나타내기 위해 사용하는 컨테이너입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.10)Form&GroupBox#Form-&-Section","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.10)form&groupbox#Form-&-Section"},"PickerCode12.swift":{"syntax":"swift","content":["import SwiftUI","","struct PickerView: View {","    @State private var selectedFlavor = Flavor.Chocolate","    ","    var body: some View{","        Menu {","            Picker(selection: $selectedFlavor, label: EmptyView()) {","                Text(\"Chocolate\").tag(Flavor.Chocolate)","                Text(\"Vanilla\").tag(Flavor.Vanilla)","                Text(\"Strawberry\").tag(Flavor.Strawberry)","                Text(\"MintChocolate\").tag(Flavor.MintChocolate)","            }","        } label: {","            ","        }","    }","}","","enum Flavor: String {","    case Chocolate","    case Vanilla","    case Strawberry","    case MintChocolate","}","","","struct PickerView_Previews: PreviewProvider {","    static var previews: some View {","        PickerView()","    }","}"],"fileName":"PickerView.swift","identifier":"PickerCode12.swift","type":"file","fileType":"swift","highlights":[{"line":14},{"line":15}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/3.4)Gesture#Gesture":{"role":"pseudoSymbol","title":"Gesture","abstract":[{"type":"text","text":"Gesture는 사용자의 특정한 행동에 따라 뷰에 변화가 알어나게 하는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.4)Gesture#Gesture","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/3.4)gesture#Gesture"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.1)ForEach#ForEach":{"role":"pseudoSymbol","title":"ForEach","abstract":[{"type":"text","text":"View를 반복하여 나열하는 경우에 ForEach를 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.1)ForEach#ForEach","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.1)foreach#ForEach"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.7)Toggle&Picker#Picker":{"role":"pseudoSymbol","title":"Picker","abstract":[{"type":"text","text":"SwiftUI의 Value Selector는 여러가지 값들 중 하나를 선택할 수 있는 control View입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.7)Toggle&Picker#Picker","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.7)toggle&picker#Picker"},"doc://CodersHighDocument/tutorials/SwiftUI/SwiftUI-Basic":{"role":"article","title":"SwiftUI Basic","abstract":[],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/SwiftUI-Basic","kind":"article","type":"topic","url":"\/tutorials\/swiftui\/swiftui-basic"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.7)Toggle&Picker#Picker-custom":{"role":"pseudoSymbol","title":"Picker custom","abstract":[{"type":"text","text":"SwiftUI의 Value Selector는 여러가지 값들 중 하나를 선택할 수 있는 control View입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.7)Toggle&Picker#Picker-custom","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.7)toggle&picker#Picker-custom"},"ToggleCode4.swift":{"syntax":"swift","content":["import SwiftUI","","struct ToggleView: View {","    ","    @State private var isToggle = false","    ","    var body: some View {","        VStack{","            Text(\"DARK MODE\")","                .font(.largeTitle)","                .foregroundColor(.pink)","                .padding()","                .overlay(","                    RoundedRectangle(cornerRadius: 20)","                        .stroke(Color.pink, lineWidth: 5)","                )","            ","            Image(\"light_mode\")","                .resizable()","                .aspectRatio(contentMode: .fit)","                .frame(width: 400, height: 300)","            ","            Toggle(\"Label\", isOn: $isToggle)","        }","    }","}","","struct ToggleView_Previews: PreviewProvider {","    static var previews: some View {","        ToggleView()","    }","}"],"fileName":"ToggleView.swift","identifier":"ToggleCode4.swift","type":"file","fileType":"swift","highlights":[{"line":23}]},"PickerCode6.swift":{"syntax":"swift","content":["import SwiftUI","","struct PickerView: View {","    @State private var selectedFlavor = Flavor.Chocolate","    ","    var body: some View{","        VStack{","            Picker(\"Flavor\", selection: $selectedFlavor){","                ","            }","            ","            Text(\"선택한 맛 : \")","                .font(.largeTitle)","                .foregroundColor(.pink)","        }","    }","}","","enum Flavor: String {","    case Chocolate","    case Vanilla","    case Strawberry","    case MintChocolate","}","","","struct PickerView_Previews: PreviewProvider {","    static var previews: some View {","        PickerView()","    }","}"],"fileName":"PickerView.swift","identifier":"PickerCode6.swift","type":"file","fileType":"swift","highlights":[{"line":4},{"line":19}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/3.2)Paints#Paints":{"role":"pseudoSymbol","title":"Paints","abstract":[{"type":"text","text":"Paint는 Shape의 내부를 정해진 하나로 채워버리는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.2)Paints#Paints","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/3.2)paints#Paints"},"doc://CodersHighDocument/tutorials/CodersHighDocument/3.3)Animation":{"role":"project","title":"Animation","estimatedTime":"5분","abstract":[{"type":"text","text":"Animation은 이름대로 특정한 조건에 대하여 애니메이션으로 나타나는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.3)Animation","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/3.3)animation"},"ToggleCode7.swift":{"syntax":"swift","content":["import SwiftUI","","struct ToggleView: View {","    ","    @State private var isToggle = false","    ","    var body: some View {","        VStack{","            Text(\"DARK MODE\")","                .font(.largeTitle)","                .foregroundColor(.pink)","                .padding()","                .overlay(","                    RoundedRectangle(cornerRadius: 20)","                        .stroke(Color.pink, lineWidth: 5)","                )","            ","            Image(\"light_mode\")","                .resizable()","                .aspectRatio(contentMode: .fit)","                .frame(width: 400, height: 300)","            ","            HStack{","                Toggle(\"Label\", isOn: $isToggle)","                    .labelsHidden()","                    .toggleStyle(SwitchToggleStyle(tint: .pink))","                ","                Text(\"OFF\")","                    .font(.title)","                    .padding()","                    .foregroundColor(.pink)","            }","        }","    }","}","","struct ToggleView_Previews: PreviewProvider {","    static var previews: some View {","        ToggleView()","    }","}"],"fileName":"ToggleView.swift","identifier":"ToggleCode7.swift","type":"file","fileType":"swift","highlights":[{"line":26}]},"ToggleCode1.swift":{"syntax":"swift","content":["import SwiftUI","","struct ToggleView: View {","    ","    var body: some View {","        VStack{","            Text(\"DARK MODE\")","                .font(.largeTitle)","                .foregroundColor(.pink)","                .padding()","                .overlay(","                    RoundedRectangle(cornerRadius: 20)","                        .stroke(Color.pink, lineWidth: 5)","                )","            ","            Image(\"light_mode\")","                .resizable()","                .aspectRatio(contentMode: .fit)","                .frame(width: 400, height: 300)","            ","            \/\/여기에 Toggle에 대한 코드를 작성합니다.","        }","    }","}","","struct ToggleView_Previews: PreviewProvider {","    static var previews: some View {","        ToggleView()","    }","}"],"fileName":"ToggleView.swift","identifier":"ToggleCode1.swift","type":"file","fileType":"swift","highlights":[]},"Toggle1.png":{"alt":"preview","type":"image","identifier":"Toggle1.png","variants":[{"url":"\/images\/Toggle1.png","traits":["1x","light"]}]},"ToggleCode2.swift":{"syntax":"swift","content":["import SwiftUI","","struct ToggleView: View {","    ","    var body: some View {","        VStack{","            Text(\"DARK MODE\")","                .font(.largeTitle)","                .foregroundColor(.pink)","                .padding()","                .overlay(","                    RoundedRectangle(cornerRadius: 20)","                        .stroke(Color.pink, lineWidth: 5)","                )","            ","            Image(\"light_mode\")","                .resizable()","                .aspectRatio(contentMode: .fit)","                .frame(width: 400, height: 300)","            ","            Toggle(\"\", isOn: )","        }","    }","}","","struct ToggleView_Previews: PreviewProvider {","    static var previews: some View {","        ToggleView()","    }","}"],"fileName":"ToggleView.swift","identifier":"ToggleCode2.swift","type":"file","fileType":"swift","highlights":[{"line":21}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.1)Text#ViewModifier":{"role":"pseudoSymbol","title":"ViewModifier","abstract":[{"type":"text","text":"Text View는 앱의 UI에 문자열을 그립니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.1)Text#ViewModifier","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.1)text#ViewModifier"},"PickerCode8.swift":{"syntax":"swift","content":["import SwiftUI","","struct PickerView: View {","    @State private var selectedFlavor = Flavor.Chocolate","    ","    var body: some View{","        VStack{","            Picker(\"Flavor\", selection: $selectedFlavor){","                Text(\"Chocolate\").tag(Flavor.Chocolate)","                Text(\"Vanilla\").tag(Flavor.Vanilla)","                Text(\"Strawberry\").tag(Flavor.Strawberry)","                Text(\"MintChocolate\").tag(Flavor.MintChocolate)","            }","            ","            Text(\"선택한 맛 : \\(selectedFlavor.rawValue)\")","                .font(.largeTitle)","                .foregroundColor(.pink)","        }","    }","}","","enum Flavor: String {","    case Chocolate","    case Vanilla","    case Strawberry","    case MintChocolate","}","","","struct PickerView_Previews: PreviewProvider {","    static var previews: some View {","        PickerView()","    }","}"],"fileName":"PickerView.swift","identifier":"PickerCode8.swift","type":"file","fileType":"swift","highlights":[{"line":15}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.1)ForEach":{"role":"project","title":"ForEach","estimatedTime":"10분","abstract":[{"type":"text","text":"View를 반복하여 나열하는 경우에 ForEach를 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.1)ForEach","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.1)foreach"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.11)OutlineGroup&DisclosureGroup#DisclosureGroup":{"role":"pseudoSymbol","title":"DisclosureGroup","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.11)OutlineGroup&DisclosureGroup#DisclosureGroup","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.11)outlinegroup&disclosuregroup#DisclosureGroup"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.5)TabView#TabView":{"role":"pseudoSymbol","title":"TabView","abstract":[{"type":"text","text":"TabView는 화면의 하단에 생성되는 Bar를 통해 여러가지 View로의 전환이 가능하도록 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.5)TabView#TabView","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.5)tabview#TabView"},"Picker14.png":{"alt":"preview","type":"image","identifier":"Picker14.png","variants":[{"url":"\/images\/Picker14.png","traits":["1x","light"]}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.7)Alert&ActionSheet#ActionSheet":{"role":"pseudoSymbol","title":"ActionSheet","abstract":[{"type":"text","text":"Alert와 ActionSheet는 알림창을 띄워서 사용자가 선택을 할 수 있는 화면을 구현하는 데 사용되는 View입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.7)Alert&ActionSheet#ActionSheet","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.7)alert&actionsheet#ActionSheet"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.10)Form&GroupBox#GroupBox":{"role":"pseudoSymbol","title":"GroupBox","abstract":[{"type":"text","text":"Form은 데이터 혹은 앱의 설정들을 나타내기 위해 사용하는 컨테이너입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.10)Form&GroupBox#GroupBox","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.10)form&groupbox#GroupBox"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.2)Image#Image-file":{"role":"pseudoSymbol","title":"Image file 추가하기","abstract":[{"type":"text","text":"Image는 이미지를 보여주는 view입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.2)Image#Image-file","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.2)image#Image-file"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.11)OutlineGroup&DisclosureGroup#OutlineGroup":{"role":"pseudoSymbol","title":"OutlineGroup","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.11)OutlineGroup&DisclosureGroup#OutlineGroup","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.11)outlinegroup&disclosuregroup#OutlineGroup"},"Picker13.png":{"alt":"preview","type":"image","identifier":"Picker13.png","variants":[{"url":"\/images\/Picker13.png","traits":["1x","light"]}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.5)TextField":{"role":"project","title":"TextField","estimatedTime":"5분","abstract":[{"type":"text","text":"TextField는 사용자가 텍스트를 직접 입력할 수 있는 공간을 제공합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.5)TextField","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/1.5)textfield"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.10)Form&GroupBox#Form":{"role":"pseudoSymbol","title":"Form","abstract":[{"type":"text","text":"Form은 데이터 혹은 앱의 설정들을 나타내기 위해 사용하는 컨테이너입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.10)Form&GroupBox#Form","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.10)form&groupbox#Form"},"PickerCode11.swift":{"syntax":"swift","content":["import SwiftUI","","struct PickerView: View {","    @State private var selectedFlavor = Flavor.Chocolate","    ","    var body: some View{","        Menu {","            Picker(selection: $selectedFlavor, label: EmptyView()) {","                Text(\"Chocolate\").tag(Flavor.Chocolate)","                Text(\"Vanilla\").tag(Flavor.Vanilla)","                Text(\"Strawberry\").tag(Flavor.Strawberry)","                Text(\"MintChocolate\").tag(Flavor.MintChocolate)","            }","        }","    }","}","","enum Flavor: String {","    case Chocolate","    case Vanilla","    case Strawberry","    case MintChocolate","}","","","struct PickerView_Previews: PreviewProvider {","    static var previews: some View {","        PickerView()","    }","}"],"fileName":"PickerView.swift","identifier":"PickerCode11.swift","type":"file","fileType":"swift","highlights":[{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13}]},"doc://CodersHighDocument/tutorials/SwiftUI":{"role":"overview","title":"SwiftUI 프로토타이핑","abstract":[{"type":"text","text":"SwiftUI의 View에 대해 학습해보고 직접 UI화면을 구현해봅시다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI","kind":"overview","type":"topic","url":"\/tutorials\/swiftui"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.2)Image":{"role":"project","title":"Image","estimatedTime":"5분","abstract":[{"type":"text","text":"Image는 이미지를 보여주는 view입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.2)Image","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/1.2)image"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.6)LazyGrid#LazyVGrid":{"role":"pseudoSymbol","title":"LazyVGrid","abstract":[{"type":"text","text":"Grid는 웹 페이지에서 주로 사용되는 방법으로 요소들을 특정 패턴으로 나열하는 방식입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.6)LazyGrid#LazyVGrid","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.6)lazygrid#LazyVGrid"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.6)@State&@Binding":{"role":"project","title":"@State & @Binding","estimatedTime":"10분","abstract":[{"type":"text","text":"SwiftUI에서 @State와 @Binding은 가장 필수적으로 사용되는 Property Wrapper 중 한 종류입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.6)@State&@Binding","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/1.6)@state&@binding"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.4)Button#Button-UI":{"role":"pseudoSymbol","title":"Button UI 변경","abstract":[{"type":"text","text":"Button은 클릭되었을 때 action 작업을 수행하는 control입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.4)Button#Button-UI","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.4)button#Button-UI"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.6)@State&@Binding#@Binding":{"role":"pseudoSymbol","title":"@Binding","abstract":[{"type":"text","text":"SwiftUI에서 @State와 @Binding은 가장 필수적으로 사용되는 Property Wrapper 중 한 종류입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.6)@State&@Binding#@Binding","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.6)@state&@binding#@Binding"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.7)Alert&ActionSheet":{"role":"project","title":"Alert & ActionSheet","estimatedTime":"10분","abstract":[{"type":"text","text":"Alert와 ActionSheet는 알림창을 띄워서 사용자가 선택을 할 수 있는 화면을 구현하는 데 사용되는 View입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.7)Alert&ActionSheet","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.7)alert&actionsheet"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.7)Alert&ActionSheet#Alert":{"role":"pseudoSymbol","title":"Alert","abstract":[{"type":"text","text":"Alert와 ActionSheet는 알림창을 띄워서 사용자가 선택을 할 수 있는 화면을 구현하는 데 사용되는 View입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.7)Alert&ActionSheet#Alert","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.7)alert&actionsheet#Alert"},"Picker8.png":{"alt":"preview","type":"image","identifier":"Picker8.png","variants":[{"url":"\/images\/Picker8.png","traits":["1x","light"]}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.4)Button#Button":{"role":"pseudoSymbol","title":"Button의 구조","abstract":[{"type":"text","text":"Button은 클릭되었을 때 action 작업을 수행하는 control입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.4)Button#Button","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.4)button#Button"},"Toggle3.png":{"alt":"preview","type":"image","identifier":"Toggle3.png","variants":[{"url":"\/images\/Toggle3.png","traits":["1x","light"]}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.9)ProgressView#Custom-ProgressView":{"role":"pseudoSymbol","title":"Custom ProgressView","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.9)ProgressView#Custom-ProgressView","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.9)progressview#Custom-ProgressView"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.5)TabView":{"role":"project","title":"TabView","estimatedTime":"5분","abstract":[{"type":"text","text":"TabView는 화면의 하단에 생성되는 Bar를 통해 여러가지 View로의 전환이 가능하도록 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.5)TabView","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.5)tabview"},"doc://CodersHighDocument/tutorials/SwiftUI/SwiftUI-Views":{"role":"article","title":"SwiftUI Views","abstract":[],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/SwiftUI-Views","kind":"article","type":"topic","url":"\/tutorials\/swiftui\/swiftui-views"},"https://developer.apple.com/documentation/swiftui/pickerstyle":{"title":"PickerStyle","titleInlineContent":[{"type":"text","text":"PickerStyle"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/pickerstyle","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/pickerstyle"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.3)ScrollView#ScrollView":{"role":"pseudoSymbol","title":"ScrollView","abstract":[{"type":"text","text":"ScrollView는 한 화면에 모든 내용을 보여주지 못하는 경우 화면을 스크롤하여 화면에서 벗어난 부분의 내용을 볼 수 있도록 만들어줍니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.3)ScrollView#ScrollView","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.3)scrollview#ScrollView"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.4)NavigationView#NavigationView":{"role":"pseudoSymbol","title":"NavigationView 기초","abstract":[{"type":"text","text":"NavigationView는 SwiftUI의 가장 중요한 구성 요소 중 하나로, 계층적인 방식으로 메인 화면에서 서브 화면으로 쉽게 전환할 수 있도록 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.4)NavigationView#NavigationView","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.4)navigationview#NavigationView"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.4)Button#Button-Style":{"role":"pseudoSymbol","title":"재사용 가능한 Button Style","abstract":[{"type":"text","text":"Button은 클릭되었을 때 action 작업을 수행하는 control입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.4)Button#Button-Style","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.4)button#Button-Style"},"doc://CodersHighDocument/tutorials/CodersHighDocument/3.4)Gesture":{"role":"project","title":"Gesture","estimatedTime":"5분","abstract":[{"type":"text","text":"Gesture는 사용자의 특정한 행동에 따라 뷰에 변화가 알어나게 하는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.4)Gesture","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/3.4)gesture"},"Toggle4.png":{"alt":"preview","type":"image","identifier":"Toggle4.png","variants":[{"url":"\/images\/Toggle4.png","traits":["1x","light"]}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.1)Text":{"role":"project","title":"Text","estimatedTime":"5분","abstract":[{"type":"text","text":"Text View는 앱의 UI에 문자열을 그립니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.1)Text","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/1.1)text"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.11)OutlineGroup&DisclosureGroup":{"role":"project","title":"OutlineGroup & DisclosureGroup","estimatedTime":"10분","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.11)OutlineGroup&DisclosureGroup","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.11)outlinegroup&disclosuregroup"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.8)Spacer&Divider#Spacer":{"role":"pseudoSymbol","title":"Spacer","abstract":[{"type":"text","text":"Spacer와 Divider는 View 사이의 구분을 위해 사용됩니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.8)Spacer&Divider#Spacer","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.8)spacer&divider#Spacer"},"ToggleCode8.swift":{"syntax":"swift","content":["import SwiftUI","","struct ToggleView: View {","    ","    @State private var isToggle = false","    ","    var body: some View {","        VStack{","            Text(\"DARK MODE\")","                .font(.largeTitle)","                .foregroundColor(.pink)","                .padding()","                .overlay(","                    RoundedRectangle(cornerRadius: 20)","                        .stroke(Color.pink, lineWidth: 5)","                )","            ","            Image(isToggle ? \"dark_mode\" : \"light_mode\")","                .resizable()","                .aspectRatio(contentMode: .fit)","                .frame(width: 400, height: 300)","            ","            HStack{","                Toggle(\"Label\", isOn: $isToggle)","                    .labelsHidden()","                    .toggleStyle(SwitchToggleStyle(tint: .pink))","                ","                Text(\"OFF\")","                    .font(.title)","                    .padding()","                    .foregroundColor(.pink)","            }","        }","    }","}","","struct ToggleView_Previews: PreviewProvider {","    static var previews: some View {","        ToggleView()","    }","}"],"fileName":"ToggleView.swift","identifier":"ToggleCode8.swift","type":"file","fileType":"swift","highlights":[{"line":18}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.3)Stack#VStack":{"role":"pseudoSymbol","title":"VStack","abstract":[{"type":"text","text":"SwiftUI에서는 두개 이상의 View를 나열하기 위해서는 Stack을 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.3)Stack#VStack","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.3)stack#VStack"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.10)Form&GroupBox":{"role":"project","title":"Form","estimatedTime":"15분","abstract":[{"type":"text","text":"Form은 데이터 혹은 앱의 설정들을 나타내기 위해 사용하는 컨테이너입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.10)Form&GroupBox","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.10)form&groupbox"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.7)Toggle&Picker":{"role":"project","title":"Toggle & Picker","estimatedTime":"10분","abstract":[{"type":"text","text":"SwiftUI의 Value Selector는 여러가지 값들 중 하나를 선택할 수 있는 control View입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.7)Toggle&Picker","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/1.7)toggle&picker"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.12)GeometryReader":{"role":"project","title":"GeometryReader","estimatedTime":"10분","abstract":[{"type":"text","text":"GeometryReader를 사용하여 내부의 view가 전체 view의 틀 안에서 좌표계를 이용하여 내부 요소들을 쉽게 배치할 수 있습니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.12)GeometryReader","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.12)geometryreader"},"PickerCode3.swift":{"syntax":"swift","content":["import SwiftUI","","struct PickerView: View {","    @State private var selectedFlavor","    ","    var body: some View{","        VStack{","            Picker(){","                ","            }","            ","            Text(\"선택한 맛 : \")","                .font(.largeTitle)","                .foregroundColor(.pink)","        }","    }","}","","struct PickerView_Previews: PreviewProvider {","    static var previews: some View {","        PickerView()","    }","}"],"fileName":"PickerView.swift","identifier":"PickerCode3.swift","type":"file","fileType":"swift","highlights":[{"line":4}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/3.1)Shapes#Other-Shapes":{"role":"pseudoSymbol","title":"Other Shapes","abstract":[{"type":"text","text":"Animation은 이름대로 특정한 조건에 대하여 애니메이션으로 나타나는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.1)Shapes#Other-Shapes","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/3.1)shapes#Other-Shapes"},"doc://CodersHighDocument/tutorials/CodersHighDocument/3.3)Animation#Animation":{"role":"pseudoSymbol","title":"Animation","abstract":[{"type":"text","text":"Animation은 이름대로 특정한 조건에 대하여 애니메이션으로 나타나는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.3)Animation#Animation","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/3.3)animation#Animation"},"ToggleCode9.swift":{"syntax":"swift","content":["import SwiftUI","","struct ToggleView: View {","    ","    @State private var isToggle = false","    ","    var body: some View {","        VStack{","            Text(\"DARK MODE\")","                .font(.largeTitle)","                .foregroundColor(.pink)","                .padding()","                .overlay(","                    RoundedRectangle(cornerRadius: 20)","                        .stroke(Color.pink, lineWidth: 5)","                )","            ","            Image(isToggle ? \"dark_mode\" : \"light_mode\")","                .resizable()","                .aspectRatio(contentMode: .fit)","                .frame(width: 400, height: 300)","            ","            HStack{","                Toggle(\"Label\", isOn: $isToggle)","                    .labelsHidden()","                    .toggleStyle(SwitchToggleStyle(tint: .pink))","                ","                Text(isToggle ? \"ON\" : \"OFF\")","                    .font(.title)","                    .padding()","                    .foregroundColor(.pink)","            }","        }","    }","}","","struct ToggleView_Previews: PreviewProvider {","    static var previews: some View {","        ToggleView()","    }","}"],"fileName":"ToggleView.swift","identifier":"ToggleCode9.swift","type":"file","fileType":"swift","highlights":[{"line":28}]},"Toggle9.png":{"alt":"preview","type":"image","identifier":"Toggle9.png","variants":[{"url":"\/images\/Toggle9.png","traits":["1x","light"]}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.5)TextField#TextField":{"role":"pseudoSymbol","title":"TextField","abstract":[{"type":"text","text":"TextField는 사용자가 텍스트를 직접 입력할 수 있는 공간을 제공합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.5)TextField#TextField","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.5)textfield#TextField"},"ToggleCode3.swift":{"syntax":"swift","content":["import SwiftUI","","struct ToggleView: View {","    ","    @State private var isToggle = false","    ","    var body: some View {","        VStack{","            Text(\"DARK MODE\")","                .font(.largeTitle)","                .foregroundColor(.pink)","                .padding()","                .overlay(","                    RoundedRectangle(cornerRadius: 20)","                        .stroke(Color.pink, lineWidth: 5)","                )","            ","            Image(\"light_mode\")","                .resizable()","                .aspectRatio(contentMode: .fit)","                .frame(width: 400, height: 300)","            ","            Toggle(\"\", isOn: $isToggle)","        }","    }","}","","struct ToggleView_Previews: PreviewProvider {","    static var previews: some View {","        ToggleView()","    }","}"],"fileName":"ToggleView.swift","identifier":"ToggleCode3.swift","type":"file","fileType":"swift","highlights":[{"line":5},{"line":6},{"line":23}]},"Toggle7.png":{"alt":"preview","type":"image","identifier":"Toggle7.png","variants":[{"url":"\/images\/Toggle7.png","traits":["1x","light"]}]},"PickerCode13.swift":{"syntax":"swift","content":["import SwiftUI","","struct PickerView: View {","    @State private var selectedFlavor = Flavor.Chocolate","    ","    var body: some View{","        Menu {","            Picker(selection: $selectedFlavor, label: EmptyView()) {","                Text(\"Chocolate\").tag(Flavor.Chocolate)","                Text(\"Vanilla\").tag(Flavor.Vanilla)","                Text(\"Strawberry\").tag(Flavor.Strawberry)","                Text(\"MintChocolate\").tag(Flavor.MintChocolate)","            }","        } label: {","            HStack(spacing:5){","                Text(selectedFlavor.rawValue)","                    .font(.system(size:30, weight: .bold, design: .rounded))","                Image(systemName: \"chevron.down\")","                    .font(.system(size:20, weight: .medium, design: .rounded))","            }","            .foregroundColor(.black)","            .padding(.horizontal)","        }","    }","}","","enum Flavor: String {","    case Chocolate","    case Vanilla","    case Strawberry","    case MintChocolate","}","","","struct PickerView_Previews: PreviewProvider {","    static var previews: some View {","        PickerView()","    }","}"],"fileName":"PickerView.swift","identifier":"PickerCode13.swift","type":"file","fileType":"swift","highlights":[{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.9)ProgressView#ProgressView":{"role":"pseudoSymbol","title":"ProgressView","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.9)ProgressView#ProgressView","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.9)progressview#ProgressView"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.4)NavigationView":{"role":"project","title":"NavigationView","estimatedTime":"20분","abstract":[{"type":"text","text":"NavigationView는 SwiftUI의 가장 중요한 구성 요소 중 하나로, 계층적인 방식으로 메인 화면에서 서브 화면으로 쉽게 전환할 수 있도록 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.4)NavigationView","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.4)navigationview"},"ToggleCode5.swift":{"syntax":"swift","content":["import SwiftUI","","struct ToggleView: View {","    ","    @State private var isToggle = false","    ","    var body: some View {","        VStack{","            Text(\"DARK MODE\")","                .font(.largeTitle)","                .foregroundColor(.pink)","                .padding()","                .overlay(","                    RoundedRectangle(cornerRadius: 20)","                        .stroke(Color.pink, lineWidth: 5)","                )","            ","            Image(\"light_mode\")","                .resizable()","                .aspectRatio(contentMode: .fit)","                .frame(width: 400, height: 300)","            ","            Toggle(isOn: $isToggle){","                Text(\"Label\")","            }","        }","    }","}","","struct ToggleView_Previews: PreviewProvider {","    static var previews: some View {","        ToggleView()","    }","}"],"fileName":"ToggleView.swift","identifier":"ToggleCode5.swift","type":"file","fileType":"swift","highlights":[{"line":23},{"line":24},{"line":25}]},"Toggle8.png":{"alt":"preview","type":"image","identifier":"Toggle8.png","variants":[{"url":"\/images\/Toggle8.png","traits":["1x","light"]}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.6)LazyGrid":{"role":"project","title":"LazyGrid","estimatedTime":"10분","abstract":[{"type":"text","text":"Grid는 웹 페이지에서 주로 사용되는 방법으로 요소들을 특정 패턴으로 나열하는 방식입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.6)LazyGrid","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.6)lazygrid"},"Picker7.png":{"alt":"preview","type":"image","identifier":"Picker7.png","variants":[{"url":"\/images\/Picker7.png","traits":["1x","light"]}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.6)LazyGrid#LazyHGrid":{"role":"pseudoSymbol","title":"LazyHGrid","abstract":[{"type":"text","text":"Grid는 웹 페이지에서 주로 사용되는 방법으로 요소들을 특정 패턴으로 나열하는 방식입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.6)LazyGrid#LazyHGrid","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.6)lazygrid#LazyHGrid"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.8)Sheet#Sheet":{"role":"pseudoSymbol","title":"Sheet","abstract":[{"type":"text","text":"Sheet는 기존의 View 위에 보여지는 새로운 View입니다."},{"type":"text","text":" "},{"type":"text","text":"modal"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.8)Sheet#Sheet","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.8)sheet#Sheet"}}}