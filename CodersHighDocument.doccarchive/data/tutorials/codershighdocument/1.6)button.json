{"metadata":{"title":"Button","categoryPathComponent":"SwiftUI","role":"project","category":"SwiftUI"},"hierarchy":{"modules":[{"reference":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/SwiftUI-Basic","projects":[{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.1)Text","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.1)Text#Text"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.1)Text#ViewModifier"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.2)Stack","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.2)Stack#VStack"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.2)Stack#HStack"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.2)Stack#ZStack"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.3)TextField","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.3)TextField#TextField"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.4)@State&@Binding","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.4)@State&@Binding#@State"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.4)@State&@Binding#@Binding"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.5)Image","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.5)Image#Image-file"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.5)Image#Image"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.6)Button","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.6)Button#Button"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.6)Button#Button-UI"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.6)Button#Button-Style"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.7)Toggle&Picker","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.7)Toggle&Picker#Toggle"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.7)Toggle&Picker#Picker"}]}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/SwiftUI-Views","projects":[{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.1)ForEach","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.1)ForEach#ForEach"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.2)List","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.2)List#StaticList"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.2)List#DynamicList"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.3)ScrollView","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.3)ScrollView#ScrollView"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.4)LazyGrid","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.4)LazyGrid#LazyHGrid"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.4)LazyGrid#LazyVGrid"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.5)ProgressView","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.5)ProgressView#ProgressView"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.5)ProgressView#Custom-ProgressView"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.6)Form&GroupBox","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.6)Form&GroupBox#Form"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.6)Form&GroupBox#Form-&-Section"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.6)Form&GroupBox#GroupBox"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.7)OutlineGroup&DisclosureGroup","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.7)OutlineGroup&DisclosureGroup#OutlineGroup"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.7)OutlineGroup&DisclosureGroup#DisclosureGroup"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.8)Spacer&Divider","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.8)Spacer&Divider#Spacer"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.8)Spacer&Divider#Divider"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.9)NavigationView","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.9)NavigationView#NavigationView"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.10)TabView&EmptyView","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.10)TabView&EmptyView#TabView"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.10)TabView&EmptyView#EmptyView"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.11)Alert&ActionSheet","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.11)Alert&ActionSheet#Alert"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.11)Alert&ActionSheet#ActionSheet"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.12)Sheet","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.12)Sheet#Sheet"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.13)GeometryReader","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.13)GeometryReader#GeometryReader"}]}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/SwiftUI-Drawing-and-Animation","projects":[{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.1)Shapes","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.1)Shapes#Shapes"},{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.1)Shapes#Other-Shapes"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.2)Paints","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.2)Paints#Paints"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.3)Animation","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.3)Animation#Animation"}]},{"reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.4)Gesture","sections":[{"kind":"task","reference":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.4)Gesture#Gesture"}]}]}],"reference":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI","paths":[["doc:\/\/CodersHighDocument\/tutorials\/SwiftUI","doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/$volume","doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/SwiftUI-Basic"]]},"schemaVersion":{"major":0,"minor":1,"patch":0},"kind":"project","identifier":{"url":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.6)Button","interfaceLanguage":"swift"},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Button은 클릭되었을 때 action 작업을 수행하는 control입니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Button은 action부분과 label부분으로 구성되어 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"action에는 Button을 클릭했을 때의 수행되는 작업을 작성합니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"label에는 Button의 보여지는 UI를 작성합니다."}]}],"estimatedTimeInMinutes":5,"title":"Button","image":"","chapter":"SwiftUI Basic","kind":"hero","backgroundImage":""},{"kind":"tasks","tasks":[{"anchor":"Button","title":"Button의 구조","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Button을 추가하는 방법을 알아보고, Button의 각 부분의 역할을 확인해보세요."}]}],"mediaPosition":"trailing","media":""}],"stepsSection":[{"code":"ButtonCode1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"로그인 화면 예시 코드를 따라해보며 Button의 기본 구조에 대해 알아봅시다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"로그인 버튼을 제외한 나머지 코드는 이미 만들어져 있습니다."}]}],"type":"step","runtimePreview":"Text1.png","media":null},{"code":"ButtonCode2.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"로그인 버튼이 들어갈 위치에 Button()을 선언합니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Button은 두가지 부분으로 구성되어 있습니다."}]}],"type":"step","runtimePreview":"Text1.png","media":null},{"code":"ButtonCode3.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"먼저 Button()의 () 안에 action: {}를 넣어줍니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"action: {}의 내부에는 버튼을 클릭했을 때의 실행되는 코드를 넣습니다."}]}],"type":"step","runtimePreview":"Text1.png","media":null},{"code":"ButtonCode4.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"다음으로 ()가 끝난 뒤에 {}를 붙여줍니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"이 내부에는 Button의 보여지는 UI 코드를 넣습니다."}]}],"type":"step","runtimePreview":"Text1.png","media":null},{"code":"ButtonCode5.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“Log in”이라는 문구가 들어간 Text()를 넣어봅시다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Text의 font와 색상을 지정해줍니다. 원하는 색상과 크기로 지정해보세요."}]}],"type":"step","runtimePreview":"Text1.png","media":null},{"code":"ButtonCode6.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"버튼을 클릭했을 때 isLoggin 변수의 값을 true에서 false로 바꿔주어야 합니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"isLogin을 toggle()해서 true인 경우 false로, false인 경우 true로 바꾸도록 합니다."}]}],"type":"step","runtimePreview":"Text1.png","media":null},{"code":"ButtonCode7.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Button 주변에 간격을 띄우기 위해 padding()을 줍니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"TextField에 id, password 값이 모두 입력되어야 로그인 버튼을 클릭할 수 있도록"},{"type":"text","text":" "},{"type":"text","text":"id, password 변수값이 모두 비어있는 (isEmpty) 경우에는 Button을 disable합니다."}]}],"type":"step","runtimePreview":"Text1.png","media":null},{"code":"ButtonCode8.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"로그인이 된 이후의 화면에서도 마찬가지로 “Log out” Text를 보여주는 버튼을 만들어줍니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"action은 동일하게 isLoggin.toggle()을 해주고, 로그아웃 버튼의 경우는 disable은 하지 않습니다."}]}],"type":"step","runtimePreview":"Text1.png","media":null}]},{"anchor":"Button-UI","title":"Button UI 변경","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"지금은 Button의 UI가 단순하게 Text로만 이루어져 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Label 안의 코드를 변경하면 UI를 원하는 대로 변경할 수 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"3가지 Step에 따라서 UI를 변경해봅시다."}]}],"mediaPosition":"trailing","media":""}],"stepsSection":[{"code":"ButtonCode9.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"이미지 추가"}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Text의 오른쪽에 SF Symbol 이미지를 추가해봅시다."}]}],"type":"step","runtimePreview":"Text1.png","media":null},{"code":"ButtonCode10.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Text의 아래에 Image를 추가합니다. 원 모양의 오른쪽 화살표인 “arrow.right.circle”을 사용합니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Text와 Image를 좌우로 배치하기 위해서 HStack으로 감싸줍니다."}]}],"type":"step","runtimePreview":"Text1.png","media":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Tip. HStack에 지정한 modifier는 HStack 내부의 모든 View에 영향을 미칠 수 있습니다."}]},{"code":"ButtonCode11.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"테두리 생성"}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":".overlay를 사용해서 버튼의 테두리를 만들어봅시다."}]}],"type":"step","runtimePreview":"Text1.png","media":null},{"code":"ButtonCode12.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"버튼을 Capsule모양으로 만들 것이므로 테두리도 Capsule()을 사용해서 만들어줍니다."}]}],"caption":[],"type":"step","runtimePreview":"Text1.png","media":null},{"code":"ButtonCode13.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Capsule()에 .stroke()를 통해 테두리의 색상과 두께를 지정합니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"예제 코드에서는 pink색의 두께가 5인 테두리를 만들었습니다."}]}],"type":"step","runtimePreview":"Text1.png","media":null},{"code":"ButtonCode14.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"테두리가 Text와 너무 붙지 않도록 padding을 넣어줍니다."}]}],"caption":[],"type":"step","runtimePreview":"Text1.png","media":null},{"code":"ButtonCode15.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"색상 채우기"}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"버튼의 색상을 채워봅시다."},{"type":"text","text":" "},{"type":"text","text":"Button의 .foregroundColor 밑에 아래의 코드들을 추가하세요."}]}],"type":"step","runtimePreview":"Text1.png","media":null}]},{"anchor":"Button-Style","title":"재사용 가능한 Button Style","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Button의 경우에는 통일된 style이 자주 사용되는 경우가 많습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"그런 경우에 각각의 Button에 같은 코드를 계속 붙이는 것은 코드가 깔끔해 보이지 않고, Button의 UI에 변경이 필요할 때 모든 Button을 수정해야 하므로 유지보수성이 떨어지게 됩니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"그런 경우 ButtonStyle을 만들어서 모든 Button에 동일한 style을 지정할 수 있습니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"MyButtonStyle이라는 ButtonStyle을 만들어서 적용시켜봅시다."}]}],"mediaPosition":"trailing","media":""}],"stepsSection":[{"code":"ButtonCode16.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"코드 설명"}]}],"caption":[],"type":"step","runtimePreview":"Text1.png","media":null},{"code":"ButtonCode17.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"기존의 버튼의 modifier들을 모두 지우고 아래의 코드를 넣어보세요."}]}],"caption":[],"type":"step","runtimePreview":"Text1.png","media":null}]}]},{"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.7)Toggle&Picker","overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Toggle & Picker","abstract":[{"type":"text","text":"SwiftUI의 Value Selector는 여러가지 값들 중 하나를 선택할 수 있는 control View입니다."}]}],"references":{"ButtonCode8.swift":{"syntax":"swift","content":["import SwiftUI","","struct ButtonView: View {","    ","    @State private var isLoggin = false","    ","    @State private var id = \"\"","    @State private var password = \"\"","    ","    var body: some View {","        ","        VStack{","            HStack{","                Text(\"Login\")","                    .font(.largeTitle)","                    .bold()","                ","                Spacer()","            }","            .padding()","            ","            if isLoggin == false{","                VStack{","                    TextField(\"\", text: $id)","                        .placeholder(when: id.isEmpty) {","                            Text(\"ID\")}","                        .font(.title)","                        .underlineTextField()","                    ","                    SecureField(\"\", text: $password)","                        .placeholder(when: password.isEmpty) {","                            Text(\"Password\")}","                        .font(.title)","                        .underlineTextField()","                }","                .padding()","                ","                Button(action: {","                    self.isLoggin.toggle()","                }){","                    Text(\"Log in\")","                        .font(.system(size:30, weight: .bold, design: .rounded))","                        .foregroundColor(.pink)","                }","                .padding()","                .disabled(self.id.isEmpty && self.password.isEmpty)","                ","                Text(\"Forgot your password?\")","                    .font(.title)","                    .foregroundColor(.gray)","                ","                HStack{","                    Text(\"Don't have an account?\")","                        .font(.title)","                        .foregroundColor(.gray)","                    Text(\"Join\")","                        .font(.title)","                        .bold()","                }.padding()","                ","            }else{","                Image(uiImage: (UIImage(named: \"profile.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: ContentMode.fit)","                    .frame(width: 200, height: 200)","                    .clipShape(Circle())","                ","                Text(\"\\(id)님\")","                    .font(.largeTitle)","                    .bold()","                    .padding()","                    ","                Button(action: {","                    self.isLoggin.toggle()","                }){","                    Text(\"Log out\")","                        .font(.system(size:30, weight: .bold, design: .rounded))","                        .foregroundColor(.pink)","                }","                .padding()","            }","            Spacer()","        }","        ","    }","}","","extension Color {","    static let buttonColor = Color(red: 57 \/ 255, green: 57 \/ 255, blue: 57 \/ 255)","}","","extension View {","    func underlineTextField() -> some View {","        self","            .padding(.vertical, 10)","            .overlay(Rectangle().frame(height: 2).padding(.top, 35))","            .padding(10)","    }","    ","    func placeholder<Content: View>(","        when shouldShow: Bool,","        alignment: Alignment = .leading,","        @ViewBuilder placeholder: () -> Content) -> some View {","            ","            ZStack(alignment: alignment) {","                placeholder().opacity(shouldShow ? 1 : 0)","                self","            }","        }","}","","struct ButtonView_Previews: PreviewProvider {","    static var previews: some View {","        ButtonView()","    }","}"],"fileName":"ButtonView.swift","identifier":"ButtonCode8.swift","type":"file","fileType":"swift","highlights":[{"line":73},{"line":74},{"line":75},{"line":76},{"line":77},{"line":78},{"line":79},{"line":80}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/3.1)Shapes":{"role":"project","title":"Shapes","estimatedTime":"5분","abstract":[{"type":"text","text":"Animation은 이름대로 특정한 조건에 대하여 애니메이션으로 나타나는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.1)Shapes","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/3.1)shapes"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.6)Form&GroupBox#Form":{"role":"pseudoSymbol","title":"Form","abstract":[{"type":"text","text":"Form은 데이터 혹은 앱의 설정들을 나타내기 위해 사용하는 컨테이너입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.6)Form&GroupBox#Form","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.6)form&groupbox#Form"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.5)ProgressView":{"role":"project","title":"ProgressView","estimatedTime":"5분","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.5)ProgressView","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.5)progressview"},"Text1.png":{"alt":"preview","type":"image","identifier":"Text1.png","variants":[{"url":"\/images\/Text1.png","size":{"width":654,"height":1334},"traits":["1x","light"]}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.13)GeometryReader#GeometryReader":{"role":"pseudoSymbol","title":"GeometryReader","abstract":[{"type":"text","text":"GeometryReader를 사용하여 내부의 view가 전체 view의 틀 안에서 좌표계를 이용하여 내부 요소들을 쉽게 배치할 수 있습니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.13)GeometryReader#GeometryReader","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.13)geometryreader#GeometryReader"},"doc://CodersHighDocument/tutorials/SwiftUI/SwiftUI-Views":{"role":"article","title":"SwiftUI Views","abstract":[],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/SwiftUI-Views","kind":"article","type":"topic","url":"\/tutorials\/swiftui\/swiftui-views"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.5)Image":{"role":"project","title":"Image","estimatedTime":"5분","abstract":[{"type":"text","text":"Image는 이미지를 보여주는 view입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.5)Image","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/1.5)image"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.13)GeometryReader":{"role":"project","title":"GeometryReader","estimatedTime":"5분","abstract":[{"type":"text","text":"GeometryReader를 사용하여 내부의 view가 전체 view의 틀 안에서 좌표계를 이용하여 내부 요소들을 쉽게 배치할 수 있습니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.13)GeometryReader","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.13)geometryreader"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.12)Sheet":{"role":"project","title":"Sheet","estimatedTime":"5분","abstract":[{"type":"text","text":"Sheet는 기존의 View 위에 보여지는 새로운 View입니다."},{"type":"text","text":" "},{"type":"text","text":"modal"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.12)Sheet","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.12)sheet"},"ButtonCode1.swift":{"syntax":"swift","content":["import SwiftUI","","struct ButtonView: View {","    ","    @State private var isLoggin = false","    ","    @State private var id = \"\"","    @State private var password = \"\"","    ","    var body: some View {","        ","        VStack{","            HStack{","                Text(\"Login\")","                    .font(.largeTitle)","                    .bold()","                ","                Spacer()","            }","            .padding()","            ","            if isLoggin == false{","                VStack{","                    TextField(\"\", text: $id)","                        .placeholder(when: id.isEmpty) {","                            Text(\"ID\")}","                        .font(.title)","                        .underlineTextField()","                    ","                    SecureField(\"\", text: $password)","                        .placeholder(when: password.isEmpty) {","                            Text(\"Password\")}","                        .font(.title)","                        .underlineTextField()","                }","                .padding()","                ","                Text(\"Forgot your password?\")","                    .font(.title)","                    .foregroundColor(.gray)","                ","                HStack{","                    Text(\"Don't have an account?\")","                        .font(.title)","                        .foregroundColor(.gray)","                    Text(\"Join\")","                        .font(.title)","                        .bold()","                }.padding()","                ","            }else{","                Image(uiImage: (UIImage(named: \"profile.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: ContentMode.fit)","                    .frame(width: 200, height: 200)","                    .clipShape(Circle())","                ","                Text(\"\\(id)님\")","                    .font(.largeTitle)","                    .bold()","                    .padding()","                    ","                ","            }","            Spacer()","        }","        ","    }","}","","extension Color {","    static let buttonColor = Color(red: 57 \/ 255, green: 57 \/ 255, blue: 57 \/ 255)","}","","extension View {","    func underlineTextField() -> some View {","        self","            .padding(.vertical, 10)","            .overlay(Rectangle().frame(height: 2).padding(.top, 35))","            .padding(10)","    }","    ","    func placeholder<Content: View>(","        when shouldShow: Bool,","        alignment: Alignment = .leading,","        @ViewBuilder placeholder: () -> Content) -> some View {","            ","            ZStack(alignment: alignment) {","                placeholder().opacity(shouldShow ? 1 : 0)","                self","            }","        }","}","","struct ButtonView_Previews: PreviewProvider {","    static var previews: some View {","        ButtonView()","    }","}"],"fileName":"ButtonView.swift","identifier":"ButtonCode1.swift","type":"file","fileType":"swift","highlights":[]},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.1)ForEach":{"role":"project","title":"ForEach","estimatedTime":"5분","abstract":[{"type":"text","text":"어떤 특정한 순서를 반복하면서 View에 요소들을 나열하는 경우에 ForEach를 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.1)ForEach","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.1)foreach"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.1)ForEach#ForEach":{"role":"pseudoSymbol","title":"ForEach","abstract":[{"type":"text","text":"어떤 특정한 순서를 반복하면서 View에 요소들을 나열하는 경우에 ForEach를 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.1)ForEach#ForEach","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.1)foreach#ForEach"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.2)Stack#ZStack":{"role":"pseudoSymbol","title":"ZStack","abstract":[{"type":"text","text":"SwiftUI에서는 두개 이상의 View를 나열하기 위해서는 Stack을 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.2)Stack#ZStack","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.2)stack#ZStack"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.1)Text":{"role":"project","title":"Text","estimatedTime":"5분","abstract":[{"type":"text","text":"Text View는 앱의 UI에 문자열을 그립니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.1)Text","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/1.1)text"},"doc://CodersHighDocument/tutorials/SwiftUI/SwiftUI-Basic":{"role":"article","title":"SwiftUI Basic","abstract":[],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/SwiftUI-Basic","kind":"article","type":"topic","url":"\/tutorials\/swiftui\/swiftui-basic"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.3)TextField":{"role":"project","title":"TextField","estimatedTime":"5분","abstract":[{"type":"text","text":"TextField는 사용자가 텍스트를 직접 입력할 수 있는 공간을 제공합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.3)TextField","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/1.3)textfield"},"doc://CodersHighDocument/tutorials/CodersHighDocument/3.3)Animation":{"role":"project","title":"Animation","estimatedTime":"5분","abstract":[{"type":"text","text":"Animation은 이름대로 특정한 조건에 대하여 애니메이션으로 나타나는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.3)Animation","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/3.3)animation"},"ButtonCode3.swift":{"syntax":"swift","content":["import SwiftUI","","struct ButtonView: View {","    ","    @State private var isLoggin = false","    ","    @State private var id = \"\"","    @State private var password = \"\"","    ","    var body: some View {","        ","        VStack{","            HStack{","                Text(\"Login\")","                    .font(.largeTitle)","                    .bold()","                ","                Spacer()","            }","            .padding()","            ","            if isLoggin == false{","                VStack{","                    TextField(\"\", text: $id)","                        .placeholder(when: id.isEmpty) {","                            Text(\"ID\")}","                        .font(.title)","                        .underlineTextField()","                    ","                    SecureField(\"\", text: $password)","                        .placeholder(when: password.isEmpty) {","                            Text(\"Password\")}","                        .font(.title)","                        .underlineTextField()","                }","                .padding()","                ","                Button(action: {","                    ","                })","                ","                Text(\"Forgot your password?\")","                    .font(.title)","                    .foregroundColor(.gray)","                ","                HStack{","                    Text(\"Don't have an account?\")","                        .font(.title)","                        .foregroundColor(.gray)","                    Text(\"Join\")","                        .font(.title)","                        .bold()","                }.padding()","                ","            }else{","                Image(uiImage: (UIImage(named: \"profile.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: ContentMode.fit)","                    .frame(width: 200, height: 200)","                    .clipShape(Circle())","                ","                Text(\"\\(id)님\")","                    .font(.largeTitle)","                    .bold()","                    .padding()","                    ","                ","            }","            Spacer()","        }","        ","    }","}","","extension Color {","    static let buttonColor = Color(red: 57 \/ 255, green: 57 \/ 255, blue: 57 \/ 255)","}","","extension View {","    func underlineTextField() -> some View {","        self","            .padding(.vertical, 10)","            .overlay(Rectangle().frame(height: 2).padding(.top, 35))","            .padding(10)","    }","    ","    func placeholder<Content: View>(","        when shouldShow: Bool,","        alignment: Alignment = .leading,","        @ViewBuilder placeholder: () -> Content) -> some View {","            ","            ZStack(alignment: alignment) {","                placeholder().opacity(shouldShow ? 1 : 0)","                self","            }","        }","}","","struct ButtonView_Previews: PreviewProvider {","    static var previews: some View {","        ButtonView()","    }","}"],"fileName":"ButtonView.swift","identifier":"ButtonCode3.swift","type":"file","fileType":"swift","highlights":[{"line":38},{"line":39},{"line":40}]},"ButtonCode5.swift":{"syntax":"swift","content":["import SwiftUI","","struct ButtonView: View {","    ","    @State private var isLoggin = false","    ","    @State private var id = \"\"","    @State private var password = \"\"","    ","    var body: some View {","        ","        VStack{","            HStack{","                Text(\"Login\")","                    .font(.largeTitle)","                    .bold()","                ","                Spacer()","            }","            .padding()","            ","            if isLoggin == false{","                VStack{","                    TextField(\"\", text: $id)","                        .placeholder(when: id.isEmpty) {","                            Text(\"ID\")}","                        .font(.title)","                        .underlineTextField()","                    ","                    SecureField(\"\", text: $password)","                        .placeholder(when: password.isEmpty) {","                            Text(\"Password\")}","                        .font(.title)","                        .underlineTextField()","                }","                .padding()","                ","                Button(action: {","                    ","                }){","                    Text(\"Log in\")","                        .font(.system(size:30, weight: .bold, design: .rounded))","                        .foregroundColor(.pink)","                }","                ","                Text(\"Forgot your password?\")","                    .font(.title)","                    .foregroundColor(.gray)","                ","                HStack{","                    Text(\"Don't have an account?\")","                        .font(.title)","                        .foregroundColor(.gray)","                    Text(\"Join\")","                        .font(.title)","                        .bold()","                }.padding()","                ","            }else{","                Image(uiImage: (UIImage(named: \"profile.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: ContentMode.fit)","                    .frame(width: 200, height: 200)","                    .clipShape(Circle())","                ","                Text(\"\\(id)님\")","                    .font(.largeTitle)","                    .bold()","                    .padding()","                    ","                ","            }","            Spacer()","        }","        ","    }","}","","extension Color {","    static let buttonColor = Color(red: 57 \/ 255, green: 57 \/ 255, blue: 57 \/ 255)","}","","extension View {","    func underlineTextField() -> some View {","        self","            .padding(.vertical, 10)","            .overlay(Rectangle().frame(height: 2).padding(.top, 35))","            .padding(10)","    }","    ","    func placeholder<Content: View>(","        when shouldShow: Bool,","        alignment: Alignment = .leading,","        @ViewBuilder placeholder: () -> Content) -> some View {","            ","            ZStack(alignment: alignment) {","                placeholder().opacity(shouldShow ? 1 : 0)","                self","            }","        }","}","","struct ButtonView_Previews: PreviewProvider {","    static var previews: some View {","        ButtonView()","    }","}"],"fileName":"ButtonView.swift","identifier":"ButtonCode5.swift","type":"file","fileType":"swift","highlights":[{"line":41},{"line":42},{"line":43}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.4)LazyGrid#LazyHGrid":{"role":"pseudoSymbol","title":"LazyHGrid","abstract":[{"type":"text","text":"Grid는 웹 페이지에서 주로 사용되는 방법으로 요소들을 특정 패턴으로 나열하는 방식입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.4)LazyGrid#LazyHGrid","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.4)lazygrid#LazyHGrid"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.6)Button":{"role":"project","title":"Button","estimatedTime":"5분","abstract":[{"type":"text","text":"Button은 클릭되었을 때 action 작업을 수행하는 control입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.6)Button","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/1.6)button"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.6)Form&GroupBox#GroupBox":{"role":"pseudoSymbol","title":"GroupBox","abstract":[{"type":"text","text":"Form은 데이터 혹은 앱의 설정들을 나타내기 위해 사용하는 컨테이너입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.6)Form&GroupBox#GroupBox","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.6)form&groupbox#GroupBox"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.2)List#StaticList":{"role":"pseudoSymbol","title":"StaticList","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.2)List#StaticList","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.2)list#StaticList"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.10)TabView&EmptyView":{"role":"project","title":"TabView","estimatedTime":"5분","abstract":[{"type":"text","text":"TabView는 NavigationView처럼 View간의 전환을 목적으로 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.10)TabView&EmptyView","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.10)tabview&emptyview"},"ButtonCode14.swift":{"syntax":"swift","content":["import SwiftUI","","struct ButtonView: View {","    ","    @State private var isLoggin = false","    ","    @State private var id = \"\"","    @State private var password = \"\"","    ","    var body: some View {","        ","        VStack{","            HStack{","                Text(\"Login\")","                    .font(.largeTitle)","                    .bold()","                ","                Spacer()","            }","            .padding()","            ","            if isLoggin == false{","                VStack{","                    TextField(\"\", text: $id)","                        .placeholder(when: id.isEmpty) {","                            Text(\"ID\")}","                        .font(.title)","                        .underlineTextField()","                    ","                    SecureField(\"\", text: $password)","                        .placeholder(when: password.isEmpty) {","                            Text(\"Password\")}","                        .font(.title)","                        .underlineTextField()","                }","                .padding()","                ","                Button(action: {","                    self.isLoggin.toggle()","                }){","                    HStack{","                        Text(\"Log in\")","                        ","                        Image(systemName: \"arrow.right.circle\")","                    }","                    .font(.system(size:30, weight: .bold, design: .rounded))","                    .foregroundColor(.pink)","                    .padding()","                    .overlay(Capsule().stroke(Color.pink, lineWidth: 5))","","","                }","                .padding()","                .disabled(self.id.isEmpty && self.password.isEmpty)","                ","                Text(\"Forgot your password?\")","                    .font(.title)","                    .foregroundColor(.gray)","                ","                HStack{","                    Text(\"Don't have an account?\")","                        .font(.title)","                        .foregroundColor(.gray)","                    Text(\"Join\")","                        .font(.title)","                        .bold()","                }.padding()","                ","            }else{","                Image(uiImage: (UIImage(named: \"profile.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: ContentMode.fit)","                    .frame(width: 200, height: 200)","                    .clipShape(Circle())","                ","                Text(\"\\(id)님\")","                    .font(.largeTitle)","                    .bold()","                    .padding()","                    ","                Button(action: {","                    self.isLoggin.toggle()","                }){","                    HStack{","                        Text(\"Log out\")","                        ","                        Image(systemName: \"arrow.right.circle\")","                    }","                        .font(.system(size:30, weight: .bold, design: .rounded))","                        .foregroundColor(.pink)","                        .padding()","                        .overlay(Capsule().stroke(Color.pink, lineWidth: 5))","","","                }","                .padding()","            }","            Spacer()","        }","        ","    }","}","","extension Color {","    static let buttonColor = Color(red: 57 \/ 255, green: 57 \/ 255, blue: 57 \/ 255)","}","","extension View {","    func underlineTextField() -> some View {","        self","            .padding(.vertical, 10)","            .overlay(Rectangle().frame(height: 2).padding(.top, 35))","            .padding(10)","    }","    ","    func placeholder<Content: View>(","        when shouldShow: Bool,","        alignment: Alignment = .leading,","        @ViewBuilder placeholder: () -> Content) -> some View {","            ","            ZStack(alignment: alignment) {","                placeholder().opacity(shouldShow ? 1 : 0)","                self","            }","        }","}","","struct ButtonView_Previews: PreviewProvider {","    static var previews: some View {","        ButtonView()","    }","}"],"fileName":"ButtonView.swift","identifier":"ButtonCode14.swift","type":"file","fileType":"swift","highlights":[{"line":48}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.5)Image#Image":{"role":"pseudoSymbol","title":"Image","abstract":[{"type":"text","text":"Image는 이미지를 보여주는 view입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.5)Image#Image","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.5)image#Image"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.3)ScrollView":{"role":"project","title":"ScrollView","estimatedTime":"5분","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.3)ScrollView","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.3)scrollview"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.4)@State&@Binding#@Binding":{"role":"pseudoSymbol","title":"@Binding","abstract":[{"type":"text","text":"SwiftUI에서 @State와 @Binding은 가장 필수적으로 사용되는 Property Wrapper 중 한 종류입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.4)@State&@Binding#@Binding","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.4)@state&@binding#@Binding"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.7)Toggle&Picker#Toggle":{"role":"pseudoSymbol","title":"Toggle","abstract":[{"type":"text","text":"SwiftUI의 Value Selector는 여러가지 값들 중 하나를 선택할 수 있는 control View입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.7)Toggle&Picker#Toggle","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.7)toggle&picker#Toggle"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.3)TextField#TextField":{"role":"pseudoSymbol","title":"TextField","abstract":[{"type":"text","text":"TextField는 사용자가 텍스트를 직접 입력할 수 있는 공간을 제공합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.3)TextField#TextField","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.3)textfield#TextField"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.6)Button#Button-UI":{"role":"pseudoSymbol","title":"Button UI 변경","abstract":[{"type":"text","text":"Button은 클릭되었을 때 action 작업을 수행하는 control입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.6)Button#Button-UI","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.6)button#Button-UI"},"doc://CodersHighDocument/tutorials/CodersHighDocument/3.3)Animation#Animation":{"role":"pseudoSymbol","title":"Animation","abstract":[{"type":"text","text":"Animation은 이름대로 특정한 조건에 대하여 애니메이션으로 나타나는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.3)Animation#Animation","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/3.3)animation#Animation"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.8)Spacer&Divider#Divider":{"role":"pseudoSymbol","title":"Divider","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.8)Spacer&Divider#Divider","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.8)spacer&divider#Divider"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.1)Text#ViewModifier":{"role":"pseudoSymbol","title":"ViewModifier","abstract":[{"type":"text","text":"Text View는 앱의 UI에 문자열을 그립니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.1)Text#ViewModifier","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.1)text#ViewModifier"},"doc://CodersHighDocument/tutorials/CodersHighDocument/3.2)Paints":{"role":"project","title":"Paints","estimatedTime":"5분","abstract":[{"type":"text","text":"Paint는 Shape의 내부를 정해진 하나로 채워버리는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.2)Paints","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/3.2)paints"},"doc://CodersHighDocument/tutorials/CodersHighDocument/3.4)Gesture#Gesture":{"role":"pseudoSymbol","title":"Gesture","abstract":[{"type":"text","text":"Gesture는 사용자의 특정한 행동에 따라 뷰에 변화가 알어나게 하는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.4)Gesture#Gesture","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/3.4)gesture#Gesture"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.6)Form&GroupBox":{"role":"project","title":"Form","estimatedTime":"5분","abstract":[{"type":"text","text":"Form은 데이터 혹은 앱의 설정들을 나타내기 위해 사용하는 컨테이너입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.6)Form&GroupBox","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.6)form&groupbox"},"ButtonCode17.swift":{"syntax":"swift","content":["import SwiftUI","","struct ButtonView: View {","    ","    @State private var isLoggin = false","    ","    @State private var id = \"\"","    @State private var password = \"\"","    ","    var body: some View {","        ","        VStack{","            HStack{","                Text(\"Login\")","                    .font(.largeTitle)","                    .bold()","                ","                Spacer()","            }","            .padding()","            ","            if isLoggin == false{","                VStack{","                    TextField(\"\", text: $id)","                        .placeholder(when: id.isEmpty) {","                            Text(\"ID\")}","                        .font(.title)","                        .underlineTextField()","                    ","                    SecureField(\"\", text: $password)","                        .placeholder(when: password.isEmpty) {","                            Text(\"Password\")}","                        .font(.title)","                        .underlineTextField()","                }","                .padding()","                ","                Button(action: {","                    self.isLoggin.toggle()","                }){","                    HStack{","                        Text(\"Log in\")","                        ","                        Image(systemName: \"arrow.right.circle\")","                    }","                }","                .buttonStyle(MyButtonStyle())","                .padding()","                .disabled(self.id.isEmpty && self.password.isEmpty)","                ","                Text(\"Forgot your password?\")","                    .font(.title)","                    .foregroundColor(.gray)","                ","                HStack{","                    Text(\"Don't have an account?\")","                        .font(.title)","                        .foregroundColor(.gray)","                    Text(\"Join\")","                        .font(.title)","                        .bold()","                }.padding()","                ","            }else{","                Image(\"profile\")","                    .resizable()","                    .aspectRatio(contentMode: ContentMode.fit)","                    .frame(width: 200, height: 200)","                    .clipShape(Circle())","                ","                Text(\"\\(id)님\")","                    .font(.largeTitle)","                    .bold()","                    .padding()","                    ","                Button(action: {","                    self.isLoggin.toggle()","                }){","                    HStack{","                        Text(\"Log out\")","                        ","                        Image(systemName: \"arrow.right.circle\")","                    }","                }","                .buttonStyle(MyButtonStyle())","                .padding()","            }","            Spacer()","        }","    }","}","","struct MyButtonStyle: ButtonStyle {","    ","    func makeBody(configuration: Self.Configuration) -> some View {","        configuration.label","            .font(.system(size:30, weight: .bold, design: .rounded))","            .foregroundColor(.white)","            .padding()","            .background(Color.pink)","            .clipShape(Capsule())","            .overlay(Capsule().stroke(Color.pink, lineWidth: 5))","    }","}","","","extension Color {","    static let buttonColor = Color(red: 57 \/ 255, green: 57 \/ 255, blue: 57 \/ 255)","}","","extension View {","    func underlineTextField() -> some View {","        self","            .padding(.vertical, 10)","            .overlay(Rectangle().frame(height: 2).padding(.top, 35))","            .padding(10)","    }","    ","    func placeholder<Content: View>(","        when shouldShow: Bool,","        alignment: Alignment = .leading,","        @ViewBuilder placeholder: () -> Content) -> some View {","            ","            ZStack(alignment: alignment) {","                placeholder().opacity(shouldShow ? 1 : 0)","                self","            }","        }","}","","struct ButtonView_Previews: PreviewProvider {","    static var previews: some View {","        ButtonView()","    }","}"],"fileName":"ButtonView.swift","identifier":"ButtonCode17.swift","type":"file","fileType":"swift","highlights":[{"line":47},{"line":65},{"line":85}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.7)OutlineGroup&DisclosureGroup":{"role":"project","title":"OutlineGroup & DisclosureGroup","estimatedTime":"5분","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.7)OutlineGroup&DisclosureGroup","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.7)outlinegroup&disclosuregroup"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.5)ProgressView#ProgressView":{"role":"pseudoSymbol","title":"ProgressView","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.5)ProgressView#ProgressView","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.5)progressview#ProgressView"},"ButtonCode10.swift":{"syntax":"swift","content":["import SwiftUI","","struct ButtonView: View {","    ","    @State private var isLoggin = false","    ","    @State private var id = \"\"","    @State private var password = \"\"","    ","    var body: some View {","        ","        VStack{","            HStack{","                Text(\"Login\")","                    .font(.largeTitle)","                    .bold()","                ","                Spacer()","            }","            .padding()","            ","            if isLoggin == false{","                VStack{","                    TextField(\"\", text: $id)","                        .placeholder(when: id.isEmpty) {","                            Text(\"ID\")}","                        .font(.title)","                        .underlineTextField()","                    ","                    SecureField(\"\", text: $password)","                        .placeholder(when: password.isEmpty) {","                            Text(\"Password\")}","                        .font(.title)","                        .underlineTextField()","                }","                .padding()","                ","                Button(action: {","                    self.isLoggin.toggle()","                }){","                    HStack{","                        Text(\"Log in\")","                        ","                        Image(systemName: \"arrow.right.circle\")","                    }","                    .font(.system(size:30, weight: .bold, design: .rounded))","                    .foregroundColor(.pink)","                }","                .padding()","                .disabled(self.id.isEmpty && self.password.isEmpty)","                ","                Text(\"Forgot your password?\")","                    .font(.title)","                    .foregroundColor(.gray)","                ","                HStack{","                    Text(\"Don't have an account?\")","                        .font(.title)","                        .foregroundColor(.gray)","                    Text(\"Join\")","                        .font(.title)","                        .bold()","                }.padding()","                ","            }else{","                Image(uiImage: (UIImage(named: \"profile.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: ContentMode.fit)","                    .frame(width: 200, height: 200)","                    .clipShape(Circle())","                ","                Text(\"\\(id)님\")","                    .font(.largeTitle)","                    .bold()","                    .padding()","                    ","                Button(action: {","                    self.isLoggin.toggle()","                }){","                    HStack{","                        Text(\"Log out\")","                        ","                        Image(systemName: \"arrow.right.circle\")","                    }","                        .font(.system(size:30, weight: .bold, design: .rounded))","                        .foregroundColor(.pink)","                }","                .padding()","            }","            Spacer()","        }","        ","    }","}","","extension Color {","    static let buttonColor = Color(red: 57 \/ 255, green: 57 \/ 255, blue: 57 \/ 255)","}","","extension View {","    func underlineTextField() -> some View {","        self","            .padding(.vertical, 10)","            .overlay(Rectangle().frame(height: 2).padding(.top, 35))","            .padding(10)","    }","    ","    func placeholder<Content: View>(","        when shouldShow: Bool,","        alignment: Alignment = .leading,","        @ViewBuilder placeholder: () -> Content) -> some View {","            ","            ZStack(alignment: alignment) {","                placeholder().opacity(shouldShow ? 1 : 0)","                self","            }","        }","}","","struct ButtonView_Previews: PreviewProvider {","    static var previews: some View {","        ButtonView()","    }","}"],"fileName":"ButtonView.swift","identifier":"ButtonCode10.swift","type":"file","fileType":"swift","highlights":[{"line":41},{"line":42},{"line":43},{"line":44},{"line":45},{"line":46},{"line":47},{"line":80},{"line":81},{"line":82},{"line":83},{"line":84}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.7)Toggle&Picker":{"role":"project","title":"Toggle & Picker","estimatedTime":"5분","abstract":[{"type":"text","text":"SwiftUI의 Value Selector는 여러가지 값들 중 하나를 선택할 수 있는 control View입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.7)Toggle&Picker","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/1.7)toggle&picker"},"ButtonCode2.swift":{"syntax":"swift","content":["import SwiftUI","","struct ButtonView: View {","    ","    @State private var isLoggin = false","    ","    @State private var id = \"\"","    @State private var password = \"\"","    ","    var body: some View {","        ","        VStack{","            HStack{","                Text(\"Login\")","                    .font(.largeTitle)","                    .bold()","                ","                Spacer()","            }","            .padding()","            ","            if isLoggin == false{","                VStack{","                    TextField(\"\", text: $id)","                        .placeholder(when: id.isEmpty) {","                            Text(\"ID\")}","                        .font(.title)","                        .underlineTextField()","                    ","                    SecureField(\"\", text: $password)","                        .placeholder(when: password.isEmpty) {","                            Text(\"Password\")}","                        .font(.title)","                        .underlineTextField()","                }","                .padding()","                ","                Button()","                ","                Text(\"Forgot your password?\")","                    .font(.title)","                    .foregroundColor(.gray)","                ","                HStack{","                    Text(\"Don't have an account?\")","                        .font(.title)","                        .foregroundColor(.gray)","                    Text(\"Join\")","                        .font(.title)","                        .bold()","                }.padding()","                ","            }else{","                Image(uiImage: (UIImage(named: \"profile.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: ContentMode.fit)","                    .frame(width: 200, height: 200)","                    .clipShape(Circle())","                ","                Text(\"\\(id)님\")","                    .font(.largeTitle)","                    .bold()","                    .padding()","                    ","                ","            }","            Spacer()","        }","        ","    }","}","","extension Color {","    static let buttonColor = Color(red: 57 \/ 255, green: 57 \/ 255, blue: 57 \/ 255)","}","","extension View {","    func underlineTextField() -> some View {","        self","            .padding(.vertical, 10)","            .overlay(Rectangle().frame(height: 2).padding(.top, 35))","            .padding(10)","    }","    ","    func placeholder<Content: View>(","        when shouldShow: Bool,","        alignment: Alignment = .leading,","        @ViewBuilder placeholder: () -> Content) -> some View {","            ","            ZStack(alignment: alignment) {","                placeholder().opacity(shouldShow ? 1 : 0)","                self","            }","        }","}","","struct ButtonView_Previews: PreviewProvider {","    static var previews: some View {","        ButtonView()","    }","}"],"fileName":"ButtonView.swift","identifier":"ButtonCode2.swift","type":"file","fileType":"swift","highlights":[{"line":38},{"line":39}]},"ButtonCode15.swift":{"syntax":"swift","content":["import SwiftUI","","struct ButtonView: View {","    ","    @State private var isLoggin = false","    ","    @State private var id = \"\"","    @State private var password = \"\"","    ","    var body: some View {","        ","        VStack{","            HStack{","                Text(\"Login\")","                    .font(.largeTitle)","                    .bold()","                ","                Spacer()","            }","            .padding()","            ","            if isLoggin == false{","                VStack{","                    TextField(\"\", text: $id)","                        .placeholder(when: id.isEmpty) {","                            Text(\"ID\")}","                        .font(.title)","                        .underlineTextField()","                    ","                    SecureField(\"\", text: $password)","                        .placeholder(when: password.isEmpty) {","                            Text(\"Password\")}","                        .font(.title)","                        .underlineTextField()","                }","                .padding()","                ","                Button(action: {","                    self.isLoggin.toggle()","                }){","                    HStack{","                        Text(\"Log in\")","                        ","                        Image(systemName: \"arrow.right.circle\")","                    }","                    .font(.system(size:30, weight: .bold, design: .rounded))","                    .foregroundColor(.white)","                    .padding()","                    .background(Color.pink)","                    .clipShape(Capsule())","                    .overlay(Capsule().stroke(Color.pink, lineWidth: 5))","","                }","                .padding()","                .disabled(self.id.isEmpty && self.password.isEmpty)","                ","                Text(\"Forgot your password?\")","                    .font(.title)","                    .foregroundColor(.gray)","                ","                HStack{","                    Text(\"Don't have an account?\")","                        .font(.title)","                        .foregroundColor(.gray)","                    Text(\"Join\")","                        .font(.title)","                        .bold()","                }.padding()","                ","            }else{","                Image(uiImage: (UIImage(named: \"profile.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: ContentMode.fit)","                    .frame(width: 200, height: 200)","                    .clipShape(Circle())","                ","                Text(\"\\(id)님\")","                    .font(.largeTitle)","                    .bold()","                    .padding()","                    ","                Button(action: {","                    self.isLoggin.toggle()","                }){","                    HStack{","                        Text(\"Log out\")","                        ","                        Image(systemName: \"arrow.right.circle\")","                    }","                    .font(.system(size:30, weight: .bold, design: .rounded))","                    .foregroundColor(.white)","                    .padding()","                    .background(Color.pink)","                    .clipShape(Capsule())","                    .overlay(Capsule().stroke(Color.pink, lineWidth: 5))","","","                }","                .padding()","            }","            Spacer()","        }","        ","    }","}","","extension Color {","    static let buttonColor = Color(red: 57 \/ 255, green: 57 \/ 255, blue: 57 \/ 255)","}","","extension View {","    func underlineTextField() -> some View {","        self","            .padding(.vertical, 10)","            .overlay(Rectangle().frame(height: 2).padding(.top, 35))","            .padding(10)","    }","    ","    func placeholder<Content: View>(","        when shouldShow: Bool,","        alignment: Alignment = .leading,","        @ViewBuilder placeholder: () -> Content) -> some View {","            ","            ZStack(alignment: alignment) {","                placeholder().opacity(shouldShow ? 1 : 0)","                self","            }","        }","}","","struct ButtonView_Previews: PreviewProvider {","    static var previews: some View {","        ButtonView()","    }","}"],"fileName":"ButtonView.swift","identifier":"ButtonCode15.swift","type":"file","fileType":"swift","highlights":[{"line":47},{"line":49},{"line":50},{"line":90},{"line":91},{"line":92},{"line":93},{"line":94},{"line":95}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.10)TabView&EmptyView#TabView":{"role":"pseudoSymbol","title":"TabView","abstract":[{"type":"text","text":"TabView는 NavigationView처럼 View간의 전환을 목적으로 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.10)TabView&EmptyView#TabView","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.10)tabview&emptyview#TabView"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.7)OutlineGroup&DisclosureGroup#OutlineGroup":{"role":"pseudoSymbol","title":"OutlineGroup","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.7)OutlineGroup&DisclosureGroup#OutlineGroup","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.7)outlinegroup&disclosuregroup#OutlineGroup"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.5)Image#Image-file":{"role":"pseudoSymbol","title":"Image file 추가하기","abstract":[{"type":"text","text":"Image는 이미지를 보여주는 view입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.5)Image#Image-file","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.5)image#Image-file"},"doc://CodersHighDocument/tutorials/CodersHighDocument/3.4)Gesture":{"role":"project","title":"Gesture","estimatedTime":"5분","abstract":[{"type":"text","text":"Gesture는 사용자의 특정한 행동에 따라 뷰에 변화가 알어나게 하는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.4)Gesture","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/3.4)gesture"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.6)Button#Button-Style":{"role":"pseudoSymbol","title":"재사용 가능한 Button Style","abstract":[{"type":"text","text":"Button은 클릭되었을 때 action 작업을 수행하는 control입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.6)Button#Button-Style","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.6)button#Button-Style"},"ButtonCode13.swift":{"syntax":"swift","content":["import SwiftUI","","struct ButtonView: View {","    ","    @State private var isLoggin = false","    ","    @State private var id = \"\"","    @State private var password = \"\"","    ","    var body: some View {","        ","        VStack{","            HStack{","                Text(\"Login\")","                    .font(.largeTitle)","                    .bold()","                ","                Spacer()","            }","            .padding()","            ","            if isLoggin == false{","                VStack{","                    TextField(\"\", text: $id)","                        .placeholder(when: id.isEmpty) {","                            Text(\"ID\")}","                        .font(.title)","                        .underlineTextField()","                    ","                    SecureField(\"\", text: $password)","                        .placeholder(when: password.isEmpty) {","                            Text(\"Password\")}","                        .font(.title)","                        .underlineTextField()","                }","                .padding()","                ","                Button(action: {","                    self.isLoggin.toggle()","                }){","                    HStack{","                        Text(\"Log in\")","                        ","                        Image(systemName: \"arrow.right.circle\")","                    }","                    .font(.system(size:30, weight: .bold, design: .rounded))","                    .foregroundColor(.pink)","                    .overlay(Capsule().stroke(Color.pink, lineWidth: 5))","","","                }","                .padding()","                .disabled(self.id.isEmpty && self.password.isEmpty)","                ","                Text(\"Forgot your password?\")","                    .font(.title)","                    .foregroundColor(.gray)","                ","                HStack{","                    Text(\"Don't have an account?\")","                        .font(.title)","                        .foregroundColor(.gray)","                    Text(\"Join\")","                        .font(.title)","                        .bold()","                }.padding()","                ","            }else{","                Image(uiImage: (UIImage(named: \"profile.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: ContentMode.fit)","                    .frame(width: 200, height: 200)","                    .clipShape(Circle())","                ","                Text(\"\\(id)님\")","                    .font(.largeTitle)","                    .bold()","                    .padding()","                    ","                Button(action: {","                    self.isLoggin.toggle()","                }){","                    HStack{","                        Text(\"Log out\")","                        ","                        Image(systemName: \"arrow.right.circle\")","                    }","                        .font(.system(size:30, weight: .bold, design: .rounded))","                        .foregroundColor(.pink)","                        .padding()","                        .overlay(Capsule().stroke(Color.pink, lineWidth: 5))","","","                }","                .padding()","            }","            Spacer()","        }","        ","    }","}","","extension Color {","    static let buttonColor = Color(red: 57 \/ 255, green: 57 \/ 255, blue: 57 \/ 255)","}","","extension View {","    func underlineTextField() -> some View {","        self","            .padding(.vertical, 10)","            .overlay(Rectangle().frame(height: 2).padding(.top, 35))","            .padding(10)","    }","    ","    func placeholder<Content: View>(","        when shouldShow: Bool,","        alignment: Alignment = .leading,","        @ViewBuilder placeholder: () -> Content) -> some View {","            ","            ZStack(alignment: alignment) {","                placeholder().opacity(shouldShow ? 1 : 0)","                self","            }","        }","}","","struct ButtonView_Previews: PreviewProvider {","    static var previews: some View {","        ButtonView()","    }","}"],"fileName":"ButtonView.swift","identifier":"ButtonCode13.swift","type":"file","fileType":"swift","highlights":[{"line":48},{"line":49},{"line":50},{"line":90},{"line":91},{"line":92},{"line":93}]},"ButtonCode11.swift":{"syntax":"swift","content":["import SwiftUI","","struct ButtonView: View {","    ","    @State private var isLoggin = false","    ","    @State private var id = \"\"","    @State private var password = \"\"","    ","    var body: some View {","        ","        VStack{","            HStack{","                Text(\"Login\")","                    .font(.largeTitle)","                    .bold()","                ","                Spacer()","            }","            .padding()","            ","            if isLoggin == false{","                VStack{","                    TextField(\"\", text: $id)","                        .placeholder(when: id.isEmpty) {","                            Text(\"ID\")}","                        .font(.title)","                        .underlineTextField()","                    ","                    SecureField(\"\", text: $password)","                        .placeholder(when: password.isEmpty) {","                            Text(\"Password\")}","                        .font(.title)","                        .underlineTextField()","                }","                .padding()","                ","                Button(action: {","                    self.isLoggin.toggle()","                }){","                    HStack{","                        Text(\"Log in\")","                        ","                        Image(systemName: \"arrow.right.circle\")","                    }","                    .font(.system(size:30, weight: .bold, design: .rounded))","                    .foregroundColor(.pink)","                    .overlay()","                }","                .padding()","                .disabled(self.id.isEmpty && self.password.isEmpty)","                ","                Text(\"Forgot your password?\")","                    .font(.title)","                    .foregroundColor(.gray)","                ","                HStack{","                    Text(\"Don't have an account?\")","                        .font(.title)","                        .foregroundColor(.gray)","                    Text(\"Join\")","                        .font(.title)","                        .bold()","                }.padding()","                ","            }else{","                Image(uiImage: (UIImage(named: \"profile.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: ContentMode.fit)","                    .frame(width: 200, height: 200)","                    .clipShape(Circle())","                ","                Text(\"\\(id)님\")","                    .font(.largeTitle)","                    .bold()","                    .padding()","                    ","                Button(action: {","                    self.isLoggin.toggle()","                }){","                    HStack{","                        Text(\"Log out\")","                        ","                        Image(systemName: \"arrow.right.circle\")","                    }","                        .font(.system(size:30, weight: .bold, design: .rounded))","                        .foregroundColor(.pink)","                        .overlay()","                }","                .padding()","            }","            Spacer()","        }","        ","    }","}","","extension Color {","    static let buttonColor = Color(red: 57 \/ 255, green: 57 \/ 255, blue: 57 \/ 255)","}","","extension View {","    func underlineTextField() -> some View {","        self","            .padding(.vertical, 10)","            .overlay(Rectangle().frame(height: 2).padding(.top, 35))","            .padding(10)","    }","    ","    func placeholder<Content: View>(","        when shouldShow: Bool,","        alignment: Alignment = .leading,","        @ViewBuilder placeholder: () -> Content) -> some View {","            ","            ZStack(alignment: alignment) {","                placeholder().opacity(shouldShow ? 1 : 0)","                self","            }","        }","}","","struct ButtonView_Previews: PreviewProvider {","    static var previews: some View {","        ButtonView()","    }","}"],"fileName":"ButtonView.swift","identifier":"ButtonCode11.swift","type":"file","fileType":"swift","highlights":[{"line":48},{"line":88}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.2)Stack":{"role":"project","title":"Stack","estimatedTime":"5분","abstract":[{"type":"text","text":"SwiftUI에서는 두개 이상의 View를 나열하기 위해서는 Stack을 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.2)Stack","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/1.2)stack"},"ButtonCode4.swift":{"syntax":"swift","content":["import SwiftUI","","struct ButtonView: View {","    ","    @State private var isLoggin = false","    ","    @State private var id = \"\"","    @State private var password = \"\"","    ","    var body: some View {","        ","        VStack{","            HStack{","                Text(\"Login\")","                    .font(.largeTitle)","                    .bold()","                ","                Spacer()","            }","            .padding()","            ","            if isLoggin == false{","                VStack{","                    TextField(\"\", text: $id)","                        .placeholder(when: id.isEmpty) {","                            Text(\"ID\")}","                        .font(.title)","                        .underlineTextField()","                    ","                    SecureField(\"\", text: $password)","                        .placeholder(when: password.isEmpty) {","                            Text(\"Password\")}","                        .font(.title)","                        .underlineTextField()","                }","                .padding()","                ","                Button(action: {","                    ","                }){","                    ","                }","                ","                Text(\"Forgot your password?\")","                    .font(.title)","                    .foregroundColor(.gray)","                ","                HStack{","                    Text(\"Don't have an account?\")","                        .font(.title)","                        .foregroundColor(.gray)","                    Text(\"Join\")","                        .font(.title)","                        .bold()","                }.padding()","                ","            }else{","                Image(uiImage: (UIImage(named: \"profile.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: ContentMode.fit)","                    .frame(width: 200, height: 200)","                    .clipShape(Circle())","                ","                Text(\"\\(id)님\")","                    .font(.largeTitle)","                    .bold()","                    .padding()","                    ","                ","            }","            Spacer()","        }","        ","    }","}","","extension Color {","    static let buttonColor = Color(red: 57 \/ 255, green: 57 \/ 255, blue: 57 \/ 255)","}","","extension View {","    func underlineTextField() -> some View {","        self","            .padding(.vertical, 10)","            .overlay(Rectangle().frame(height: 2).padding(.top, 35))","            .padding(10)","    }","    ","    func placeholder<Content: View>(","        when shouldShow: Bool,","        alignment: Alignment = .leading,","        @ViewBuilder placeholder: () -> Content) -> some View {","            ","            ZStack(alignment: alignment) {","                placeholder().opacity(shouldShow ? 1 : 0)","                self","            }","        }","}","","struct ButtonView_Previews: PreviewProvider {","    static var previews: some View {","        ButtonView()","    }","}"],"fileName":"ButtonView.swift","identifier":"ButtonCode4.swift","type":"file","fileType":"swift","highlights":[{"line":40},{"line":41},{"line":42}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.11)Alert&ActionSheet#ActionSheet":{"role":"pseudoSymbol","title":"ActionSheet","abstract":[{"type":"text","text":"Alert는 특정한 동작에 대해서 화면에 작은 창을 띄워 사용자에게 경고하는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.11)Alert&ActionSheet#ActionSheet","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.11)alert&actionsheet#ActionSheet"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.9)NavigationView#NavigationView":{"role":"pseudoSymbol","title":"NavigationView","abstract":[{"type":"text","text":"NavigationView는 현재 View에서 다른 View로의 전환을 목적으로 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.9)NavigationView#NavigationView","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.9)navigationview#NavigationView"},"doc://CodersHighDocument/tutorials/SwiftUI/SwiftUI-Drawing-and-Animation":{"role":"article","title":"SwiftUI Drawing and Animation","abstract":[],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI\/SwiftUI-Drawing-and-Animation","kind":"article","type":"topic","url":"\/tutorials\/swiftui\/swiftui-drawing-and-animation"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.3)ScrollView#ScrollView":{"role":"pseudoSymbol","title":"ScrollView","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.3)ScrollView#ScrollView","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.3)scrollview#ScrollView"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.9)NavigationView":{"role":"project","title":"NavigationView","estimatedTime":"5분","abstract":[{"type":"text","text":"NavigationView는 현재 View에서 다른 View로의 전환을 목적으로 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.9)NavigationView","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.9)navigationview"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.12)Sheet#Sheet":{"role":"pseudoSymbol","title":"Sheet","abstract":[{"type":"text","text":"Sheet는 기존의 View 위에 보여지는 새로운 View입니다."},{"type":"text","text":" "},{"type":"text","text":"modal"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.12)Sheet#Sheet","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.12)sheet#Sheet"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.11)Alert&ActionSheet#Alert":{"role":"pseudoSymbol","title":"Alert","abstract":[{"type":"text","text":"Alert는 특정한 동작에 대해서 화면에 작은 창을 띄워 사용자에게 경고하는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.11)Alert&ActionSheet#Alert","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.11)alert&actionsheet#Alert"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.4)@State&@Binding#@State":{"role":"pseudoSymbol","title":"@State","abstract":[{"type":"text","text":"SwiftUI에서 @State와 @Binding은 가장 필수적으로 사용되는 Property Wrapper 중 한 종류입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.4)@State&@Binding#@State","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.4)@state&@binding#@State"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.8)Spacer&Divider":{"role":"project","title":"Spacer & Divider","estimatedTime":"5분","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.8)Spacer&Divider","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.8)spacer&divider"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.11)Alert&ActionSheet":{"role":"project","title":"Alert & ActionSheet","estimatedTime":"5분","abstract":[{"type":"text","text":"Alert는 특정한 동작에 대해서 화면에 작은 창을 띄워 사용자에게 경고하는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.11)Alert&ActionSheet","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.11)alert&actionsheet"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.2)Stack#HStack":{"role":"pseudoSymbol","title":"HStack","abstract":[{"type":"text","text":"SwiftUI에서는 두개 이상의 View를 나열하기 위해서는 Stack을 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.2)Stack#HStack","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.2)stack#HStack"},"ButtonCode9.swift":{"syntax":"swift","content":["import SwiftUI","","struct ButtonView: View {","    ","    @State private var isLoggin = false","    ","    @State private var id = \"\"","    @State private var password = \"\"","    ","    var body: some View {","        ","        VStack{","            HStack{","                Text(\"Login\")","                    .font(.largeTitle)","                    .bold()","                ","                Spacer()","            }","            .padding()","            ","            if isLoggin == false{","                VStack{","                    TextField(\"\", text: $id)","                        .placeholder(when: id.isEmpty) {","                            Text(\"ID\")}","                        .font(.title)","                        .underlineTextField()","                    ","                    SecureField(\"\", text: $password)","                        .placeholder(when: password.isEmpty) {","                            Text(\"Password\")}","                        .font(.title)","                        .underlineTextField()","                }","                .padding()","                ","                Button(action: {","                    self.isLoggin.toggle()","                }){","                    Text(\"Log in\")","                        .font(.system(size:30, weight: .bold, design: .rounded))","                        .foregroundColor(.pink)","                }","                .padding()","                .disabled(self.id.isEmpty && self.password.isEmpty)","                ","                Text(\"Forgot your password?\")","                    .font(.title)","                    .foregroundColor(.gray)","                ","                HStack{","                    Text(\"Don't have an account?\")","                        .font(.title)","                        .foregroundColor(.gray)","                    Text(\"Join\")","                        .font(.title)","                        .bold()","                }.padding()","                ","            }else{","                Image(uiImage: (UIImage(named: \"profile.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: ContentMode.fit)","                    .frame(width: 200, height: 200)","                    .clipShape(Circle())","                ","                Text(\"\\(id)님\")","                    .font(.largeTitle)","                    .bold()","                    .padding()","                    ","                Button(action: {","                    self.isLoggin.toggle()","                }){","                    Text(\"Log out\")","                        .font(.system(size:30, weight: .bold, design: .rounded))","                        .foregroundColor(.pink)","                }","                .padding()","            }","            Spacer()","        }","        ","    }","}","","extension Color {","    static let buttonColor = Color(red: 57 \/ 255, green: 57 \/ 255, blue: 57 \/ 255)","}","","extension View {","    func underlineTextField() -> some View {","        self","            .padding(.vertical, 10)","            .overlay(Rectangle().frame(height: 2).padding(.top, 35))","            .padding(10)","    }","    ","    func placeholder<Content: View>(","        when shouldShow: Bool,","        alignment: Alignment = .leading,","        @ViewBuilder placeholder: () -> Content) -> some View {","            ","            ZStack(alignment: alignment) {","                placeholder().opacity(shouldShow ? 1 : 0)","                self","            }","        }","}","","struct ButtonView_Previews: PreviewProvider {","    static var previews: some View {","        ButtonView()","    }","}"],"fileName":"ButtonView.swift","identifier":"ButtonCode9.swift","type":"file","fileType":"swift","highlights":[]},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.6)Form&GroupBox#Form-&-Section":{"role":"pseudoSymbol","title":"Form & Section","abstract":[{"type":"text","text":"Form은 데이터 혹은 앱의 설정들을 나타내기 위해 사용하는 컨테이너입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.6)Form&GroupBox#Form-&-Section","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.6)form&groupbox#Form-&-Section"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.4)LazyGrid":{"role":"project","title":"LazyGrid","estimatedTime":"5분","abstract":[{"type":"text","text":"Grid는 웹 페이지에서 주로 사용되는 방법으로 요소들을 특정 패턴으로 나열하는 방식입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.4)LazyGrid","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.4)lazygrid"},"doc://CodersHighDocument/tutorials/CodersHighDocument/3.1)Shapes#Shapes":{"role":"pseudoSymbol","title":"Shapes","abstract":[{"type":"text","text":"Animation은 이름대로 특정한 조건에 대하여 애니메이션으로 나타나는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.1)Shapes#Shapes","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/3.1)shapes#Shapes"},"ButtonCode7.swift":{"syntax":"swift","content":["import SwiftUI","","struct ButtonView: View {","    ","    @State private var isLoggin = false","    ","    @State private var id = \"\"","    @State private var password = \"\"","    ","    var body: some View {","        ","        VStack{","            HStack{","                Text(\"Login\")","                    .font(.largeTitle)","                    .bold()","                ","                Spacer()","            }","            .padding()","            ","            if isLoggin == false{","                VStack{","                    TextField(\"\", text: $id)","                        .placeholder(when: id.isEmpty) {","                            Text(\"ID\")}","                        .font(.title)","                        .underlineTextField()","                    ","                    SecureField(\"\", text: $password)","                        .placeholder(when: password.isEmpty) {","                            Text(\"Password\")}","                        .font(.title)","                        .underlineTextField()","                }","                .padding()","                ","                Button(action: {","                    self.isLoggin.toggle()","                }){","                    Text(\"Log in\")","                        .font(.system(size:30, weight: .bold, design: .rounded))","                        .foregroundColor(.pink)","                }","                .padding()","                .disabled(self.id.isEmpty && self.password.isEmpty)","                ","                Text(\"Forgot your password?\")","                    .font(.title)","                    .foregroundColor(.gray)","                ","                HStack{","                    Text(\"Don't have an account?\")","                        .font(.title)","                        .foregroundColor(.gray)","                    Text(\"Join\")","                        .font(.title)","                        .bold()","                }.padding()","                ","            }else{","                Image(uiImage: (UIImage(named: \"profile.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: ContentMode.fit)","                    .frame(width: 200, height: 200)","                    .clipShape(Circle())","                ","                Text(\"\\(id)님\")","                    .font(.largeTitle)","                    .bold()","                    .padding()","                    ","                ","            }","            Spacer()","        }","        ","    }","}","","extension Color {","    static let buttonColor = Color(red: 57 \/ 255, green: 57 \/ 255, blue: 57 \/ 255)","}","","extension View {","    func underlineTextField() -> some View {","        self","            .padding(.vertical, 10)","            .overlay(Rectangle().frame(height: 2).padding(.top, 35))","            .padding(10)","    }","    ","    func placeholder<Content: View>(","        when shouldShow: Bool,","        alignment: Alignment = .leading,","        @ViewBuilder placeholder: () -> Content) -> some View {","            ","            ZStack(alignment: alignment) {","                placeholder().opacity(shouldShow ? 1 : 0)","                self","            }","        }","}","","struct ButtonView_Previews: PreviewProvider {","    static var previews: some View {","        ButtonView()","    }","}"],"fileName":"ButtonView.swift","identifier":"ButtonCode7.swift","type":"file","fileType":"swift","highlights":[{"line":45},{"line":46}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.1)Text#Text":{"role":"pseudoSymbol","title":"Text","abstract":[{"type":"text","text":"Text View는 앱의 UI에 문자열을 그립니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.1)Text#Text","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.1)text#Text"},"doc://CodersHighDocument/tutorials/SwiftUI":{"role":"overview","title":"SwiftUI 프로토타이핑","abstract":[{"type":"text","text":"SwiftUI의 View에 대해 학습해보고 직접 UI화면을 구현해봅시다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/SwiftUI","kind":"overview","type":"topic","url":"\/tutorials\/swiftui"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.10)TabView&EmptyView#EmptyView":{"role":"pseudoSymbol","title":"EmptyView","abstract":[{"type":"text","text":"TabView는 NavigationView처럼 View간의 전환을 목적으로 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.10)TabView&EmptyView#EmptyView","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.10)tabview&emptyview#EmptyView"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.6)Button#Button":{"role":"pseudoSymbol","title":"Button의 구조","abstract":[{"type":"text","text":"Button은 클릭되었을 때 action 작업을 수행하는 control입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.6)Button#Button","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.6)button#Button"},"ButtonCode16.swift":{"syntax":"swift","content":["import SwiftUI","","struct ButtonView: View {","    ","    @State private var isLoggin = false","    ","    @State private var id = \"\"","    @State private var password = \"\"","    ","    var body: some View {","        ","        VStack{","            HStack{","                Text(\"Login\")","                    .font(.largeTitle)","                    .bold()","                ","                Spacer()","            }","            .padding()","            ","            if isLoggin == false{","                VStack{","                    TextField(\"\", text: $id)","                        .placeholder(when: id.isEmpty) {","                            Text(\"ID\")}","                        .font(.title)","                        .underlineTextField()","                    ","                    SecureField(\"\", text: $password)","                        .placeholder(when: password.isEmpty) {","                            Text(\"Password\")}","                        .font(.title)","                        .underlineTextField()","                }","                .padding()","                ","                Button(action: {","                    self.isLoggin.toggle()","                }){","                    HStack{","                        Text(\"Log in\")","                        ","                        Image(systemName: \"arrow.right.circle\")","                    }","                    .font(.system(size:30, weight: .bold, design: .rounded))","                    .foregroundColor(.white)","                    .padding()","                    .background(Color.pink)","                    .clipShape(Capsule())","                    .overlay(Capsule().stroke(Color.pink, lineWidth: 5))","","                }","                .padding()","                .disabled(self.id.isEmpty && self.password.isEmpty)","                ","                Text(\"Forgot your password?\")","                    .font(.title)","                    .foregroundColor(.gray)","                ","                HStack{","                    Text(\"Don't have an account?\")","                        .font(.title)","                        .foregroundColor(.gray)","                    Text(\"Join\")","                        .font(.title)","                        .bold()","                }.padding()","                ","            }else{","                Image(uiImage: (UIImage(named: \"profile.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: ContentMode.fit)","                    .frame(width: 200, height: 200)","                    .clipShape(Circle())","                ","                Text(\"\\(id)님\")","                    .font(.largeTitle)","                    .bold()","                    .padding()","                    ","                Button(action: {","                    self.isLoggin.toggle()","                }){","                    HStack{","                        Text(\"Log out\")","                        ","                        Image(systemName: \"arrow.right.circle\")","                    }","                    .font(.system(size:30, weight: .bold, design: .rounded))","                    .foregroundColor(.white)","                    .padding()","                    .background(Color.pink)","                    .clipShape(Capsule())","                    .overlay(Capsule().stroke(Color.pink, lineWidth: 5))","","","                }","                .padding()","            }","            Spacer()","        }","        ","    }","}","","","struct MyButtonStyle: ButtonStyle {","    ","    func makeBody(configuration: Self.Configuration) -> some View {","        configuration.label","            .font(.system(size:30, weight: .bold, design: .rounded))","            .foregroundColor(.white)","            .padding()","            .background(Color.pink)","            .clipShape(Capsule())","            .overlay(Capsule().stroke(Color.pink, lineWidth: 5))","    }","}","","","extension Color {","    static let buttonColor = Color(red: 57 \/ 255, green: 57 \/ 255, blue: 57 \/ 255)","}","","extension View {","    func underlineTextField() -> some View {","        self","            .padding(.vertical, 10)","            .overlay(Rectangle().frame(height: 2).padding(.top, 35))","            .padding(10)","    }","    ","    func placeholder<Content: View>(","        when shouldShow: Bool,","        alignment: Alignment = .leading,","        @ViewBuilder placeholder: () -> Content) -> some View {","            ","            ZStack(alignment: alignment) {","                placeholder().opacity(shouldShow ? 1 : 0)","                self","            }","        }","}","","struct ButtonView_Previews: PreviewProvider {","    static var previews: some View {","        ButtonView()","    }","}"],"fileName":"ButtonView.swift","identifier":"ButtonCode16.swift","type":"file","fileType":"swift","highlights":[]},"doc://CodersHighDocument/tutorials/CodersHighDocument/3.1)Shapes#Other-Shapes":{"role":"pseudoSymbol","title":"Other Shapes","abstract":[{"type":"text","text":"Animation은 이름대로 특정한 조건에 대하여 애니메이션으로 나타나는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.1)Shapes#Other-Shapes","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/3.1)shapes#Other-Shapes"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.7)Toggle&Picker#Picker":{"role":"pseudoSymbol","title":"Picker","abstract":[{"type":"text","text":"SwiftUI의 Value Selector는 여러가지 값들 중 하나를 선택할 수 있는 control View입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.7)Toggle&Picker#Picker","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.7)toggle&picker#Picker"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.4)LazyGrid#LazyVGrid":{"role":"pseudoSymbol","title":"LazyVGrid","abstract":[{"type":"text","text":"Grid는 웹 페이지에서 주로 사용되는 방법으로 요소들을 특정 패턴으로 나열하는 방식입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.4)LazyGrid#LazyVGrid","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.4)lazygrid#LazyVGrid"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.2)List#DynamicList":{"role":"pseudoSymbol","title":"DynamicList","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.2)List#DynamicList","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.2)list#DynamicList"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.2)List":{"role":"project","title":"List","estimatedTime":"5분","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.2)List","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/2.2)list"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.2)Stack#VStack":{"role":"pseudoSymbol","title":"VStack","abstract":[{"type":"text","text":"SwiftUI에서는 두개 이상의 View를 나열하기 위해서는 Stack을 사용합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.2)Stack#VStack","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/1.2)stack#VStack"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.5)ProgressView#Custom-ProgressView":{"role":"pseudoSymbol","title":"Custom ProgressView","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.5)ProgressView#Custom-ProgressView","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.5)progressview#Custom-ProgressView"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.8)Spacer&Divider#Spacer":{"role":"pseudoSymbol","title":"Spacer","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.8)Spacer&Divider#Spacer","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.8)spacer&divider#Spacer"},"doc://CodersHighDocument/tutorials/CodersHighDocument/1.4)@State&@Binding":{"role":"project","title":"@State & @Binding","estimatedTime":"5분","abstract":[{"type":"text","text":"SwiftUI에서 @State와 @Binding은 가장 필수적으로 사용되는 Property Wrapper 중 한 종류입니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/1.4)@State&@Binding","kind":"project","type":"topic","url":"\/tutorials\/codershighdocument\/1.4)@state&@binding"},"doc://CodersHighDocument/tutorials/CodersHighDocument/2.7)OutlineGroup&DisclosureGroup#DisclosureGroup":{"role":"pseudoSymbol","title":"DisclosureGroup","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/2.7)OutlineGroup&DisclosureGroup#DisclosureGroup","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/2.7)outlinegroup&disclosuregroup#DisclosureGroup"},"ButtonCode6.swift":{"syntax":"swift","content":["import SwiftUI","","struct ButtonView: View {","    ","    @State private var isLoggin = false","    ","    @State private var id = \"\"","    @State private var password = \"\"","    ","    var body: some View {","        ","        VStack{","            HStack{","                Text(\"Login\")","                    .font(.largeTitle)","                    .bold()","                ","                Spacer()","            }","            .padding()","            ","            if isLoggin == false{","                VStack{","                    TextField(\"\", text: $id)","                        .placeholder(when: id.isEmpty) {","                            Text(\"ID\")}","                        .font(.title)","                        .underlineTextField()","                    ","                    SecureField(\"\", text: $password)","                        .placeholder(when: password.isEmpty) {","                            Text(\"Password\")}","                        .font(.title)","                        .underlineTextField()","                }","                .padding()","                ","                Button(action: {","                    self.isLoggin.toggle()","                }){","                    Text(\"Log in\")","                        .font(.system(size:30, weight: .bold, design: .rounded))","                        .foregroundColor(.pink)","                }","                ","                Text(\"Forgot your password?\")","                    .font(.title)","                    .foregroundColor(.gray)","                ","                HStack{","                    Text(\"Don't have an account?\")","                        .font(.title)","                        .foregroundColor(.gray)","                    Text(\"Join\")","                        .font(.title)","                        .bold()","                }.padding()","                ","            }else{","                Image(uiImage: (UIImage(named: \"profile.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: ContentMode.fit)","                    .frame(width: 200, height: 200)","                    .clipShape(Circle())","                ","                Text(\"\\(id)님\")","                    .font(.largeTitle)","                    .bold()","                    .padding()","                    ","                ","            }","            Spacer()","        }","        ","    }","}","","extension Color {","    static let buttonColor = Color(red: 57 \/ 255, green: 57 \/ 255, blue: 57 \/ 255)","}","","extension View {","    func underlineTextField() -> some View {","        self","            .padding(.vertical, 10)","            .overlay(Rectangle().frame(height: 2).padding(.top, 35))","            .padding(10)","    }","    ","    func placeholder<Content: View>(","        when shouldShow: Bool,","        alignment: Alignment = .leading,","        @ViewBuilder placeholder: () -> Content) -> some View {","            ","            ZStack(alignment: alignment) {","                placeholder().opacity(shouldShow ? 1 : 0)","                self","            }","        }","}","","struct ButtonView_Previews: PreviewProvider {","    static var previews: some View {","        ButtonView()","    }","}"],"fileName":"ButtonView.swift","identifier":"ButtonCode6.swift","type":"file","fileType":"swift","highlights":[{"line":39}]},"doc://CodersHighDocument/tutorials/CodersHighDocument/3.2)Paints#Paints":{"role":"pseudoSymbol","title":"Paints","abstract":[{"type":"text","text":"Paint는 Shape의 내부를 정해진 하나로 채워버리는 역할을 합니다."}],"identifier":"doc:\/\/CodersHighDocument\/tutorials\/CodersHighDocument\/3.2)Paints#Paints","kind":"section","type":"section","url":"\/tutorials\/codershighdocument\/3.2)paints#Paints"},"ButtonCode12.swift":{"syntax":"swift","content":["import SwiftUI","","struct ButtonView: View {","    ","    @State private var isLoggin = false","    ","    @State private var id = \"\"","    @State private var password = \"\"","    ","    var body: some View {","        ","        VStack{","            HStack{","                Text(\"Login\")","                    .font(.largeTitle)","                    .bold()","                ","                Spacer()","            }","            .padding()","            ","            if isLoggin == false{","                VStack{","                    TextField(\"\", text: $id)","                        .placeholder(when: id.isEmpty) {","                            Text(\"ID\")}","                        .font(.title)","                        .underlineTextField()","                    ","                    SecureField(\"\", text: $password)","                        .placeholder(when: password.isEmpty) {","                            Text(\"Password\")}","                        .font(.title)","                        .underlineTextField()","                }","                .padding()","                ","                Button(action: {","                    self.isLoggin.toggle()","                }){","                    HStack{","                        Text(\"Log in\")","                        ","                        Image(systemName: \"arrow.right.circle\")","                    }","                    .font(.system(size:30, weight: .bold, design: .rounded))","                    .foregroundColor(.pink)","                    .overlay(Capsule())","                }","                .padding()","                .disabled(self.id.isEmpty && self.password.isEmpty)","                ","                Text(\"Forgot your password?\")","                    .font(.title)","                    .foregroundColor(.gray)","                ","                HStack{","                    Text(\"Don't have an account?\")","                        .font(.title)","                        .foregroundColor(.gray)","                    Text(\"Join\")","                        .font(.title)","                        .bold()","                }.padding()","                ","            }else{","                Image(uiImage: (UIImage(named: \"profile.png\")!))","                    .resizable()","                    .aspectRatio(contentMode: ContentMode.fit)","                    .frame(width: 200, height: 200)","                    .clipShape(Circle())","                ","                Text(\"\\(id)님\")","                    .font(.largeTitle)","                    .bold()","                    .padding()","                    ","                Button(action: {","                    self.isLoggin.toggle()","                }){","                    HStack{","                        Text(\"Log out\")","                        ","                        Image(systemName: \"arrow.right.circle\")","                    }","                        .font(.system(size:30, weight: .bold, design: .rounded))","                        .foregroundColor(.pink)","                }","                .padding()","            }","            Spacer()","        }","        ","    }","}","","extension Color {","    static let buttonColor = Color(red: 57 \/ 255, green: 57 \/ 255, blue: 57 \/ 255)","}","","extension View {","    func underlineTextField() -> some View {","        self","            .padding(.vertical, 10)","            .overlay(Rectangle().frame(height: 2).padding(.top, 35))","            .padding(10)","    }","    ","    func placeholder<Content: View>(","        when shouldShow: Bool,","        alignment: Alignment = .leading,","        @ViewBuilder placeholder: () -> Content) -> some View {","            ","            ZStack(alignment: alignment) {","                placeholder().opacity(shouldShow ? 1 : 0)","                self","            }","        }","}","","struct ButtonView_Previews: PreviewProvider {","    static var previews: some View {","        ButtonView()","    }","}"],"fileName":"ButtonView.swift","identifier":"ButtonCode12.swift","type":"file","fileType":"swift","highlights":[{"line":48}]}}}