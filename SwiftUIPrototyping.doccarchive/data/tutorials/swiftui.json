{"metadata":{"role":"overview","title":"SwiftUI 프로토타이핑","categoryPathComponent":"SwiftUI","category":"SwiftUI","estimatedTime":"2시간"},"hierarchy":{"paths":[],"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUI"},"schemaVersion":{"major":0,"minor":1,"patch":0},"kind":"overview","identifier":{"url":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUI","interfaceLanguage":"swift"},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUI의 View에 대해 학습해보고 직접 UI화면을 구현해봅시다."}]}],"kind":"hero","title":"SwiftUI 프로토타이핑","image":"getting_started_image.png","backgroundImage":"getting_started_image.png","action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.1)Text","overridingTitle":"Get started"}},{"kind":"volume","content":[],"name":null,"image":null,"chapters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"이 Chapter에서는 SwiftUI의 가장 기본적인 View 요소들에 대해 학습합니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"App을 구성하는데 가장 기본적인 View들인 Text, TextField, Image, Button, Toggle, Picker 등의 View들을 구현해보고"},{"type":"text","text":" "},{"type":"text","text":"이를 원하는 위치로 배치시키기 위한 Stack들을 알아봅니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"그리고 이를 사용하기 위해 필요한 @State & @Binding에 대해 학습합니다."}]}],"name":"SwiftUI Basic","tutorials":["doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.1)Text","doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.2)Stack","doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.3)TextField","doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.4)@State&@Binding","doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.5)Image","doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.6)Toggle&Picker","doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.7)Button"],"image":"chapter1_image.png"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"이 Chapter에서는 SwiftUI의 여러가지 View 요소들과 화면전환에 대해 학습합니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"다양한 형태의 데이터들을 구조화하는 ForEach, List, ScrollView, LazyGrid, Form, OutlineGroup, DisclosureGroup View들을 구현해보고"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"NavigationView, TabView를 통해 다른 화면으로 전환하는 방법을 알아봅니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Alert와 ActionSheet를 통해 알림을 띄우거나 Sheet를 사용하여 ModalView를 띄워봅니다."}]}],"name":"SwiftUI Views","tutorials":["doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.1)ForEach","doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.2)List","doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.3)ScrollView","doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.4)LazyGrid","doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.5)ProgressView","doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.6)Form&GroupBox","doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.7)OutlineGroup&DisclosureGroup","doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.8)Spacer&Divider","doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.9)NavigationView","doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.10)TabView&EmptyView","doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.11)Alert&ActionSheet","doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.12)Sheet"],"image":"chapter2_image.png"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"이 Chapter에서는 SwiftUI의 여러가지 Shapes, Animation 그리고 GeometryReader에 대해 학습합니다."}]}],"name":"SwiftUI Drawing and Animation","tutorials":["doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.1)Shapes","doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.2)Animation","doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.3)Gesture","doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.4)Paints","doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.5)GeometryReader"],"image":"SwiftUIPrototypingicon.png"}]}],"references":{"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.2)List":{"role":"project","title":"List","estimatedTime":"5분","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.2)List","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.2)list"},"chapter1_image.png":{"alt":"Welcome to SwiftUI Basic!","type":"image","identifier":"chapter1_image.png","variants":[{"url":"\/images\/chapter1_image.png","size":{"width":1500,"height":3248},"traits":["1x","light"]}]},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.7)OutlineGroup&DisclosureGroup":{"role":"project","title":"OutlineGroup & DisclosureGroup","estimatedTime":"5분","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.7)OutlineGroup&DisclosureGroup","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.7)outlinegroup&disclosuregroup"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/3.3)Gesture":{"role":"project","title":"Gesture","estimatedTime":"5분","abstract":[{"type":"text","text":"Gesture는 사용자의 특정한 행동에 따라 뷰에 변화가 알어나게 하는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.3)Gesture","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/3.3)gesture"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.8)Spacer&Divider":{"role":"project","title":"Spacer & Divider","estimatedTime":"5분","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.8)Spacer&Divider","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.8)spacer&divider"},"chapter2_image.png":{"alt":"Welcome to SwiftUI Views!","type":"image","identifier":"chapter2_image.png","variants":[{"url":"\/images\/chapter2_image.png","size":{"width":1500,"height":3248},"traits":["1x","light"]}]},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/3.5)GeometryReader":{"role":"project","title":"GeometryReader","estimatedTime":"5분","abstract":[{"type":"text","text":"GeometryReader를 사용하여 내부의 view가 전체 view의 틀 안에서 좌표계를 이용하여 내부 요소들을 쉽게 배치할 수 있습니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.5)GeometryReader","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/3.5)geometryreader"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.3)TextField":{"role":"project","title":"TextField","estimatedTime":"5분","abstract":[{"type":"text","text":"TextField는 사용자가 텍스트를 직접 입력할 수 있는 공간을 제공합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.3)TextField","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/1.3)textfield"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.3)ScrollView":{"role":"project","title":"ScrollView","estimatedTime":"5분","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.3)ScrollView","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.3)scrollview"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.4)LazyGrid":{"role":"project","title":"LazyGrid","estimatedTime":"5분","abstract":[{"type":"text","text":"Grid는 웹 페이지에서 주로 사용되는 방법으로 요소들을 특정 패턴으로 나열하는 방식입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.4)LazyGrid","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.4)lazygrid"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/3.1)Shapes":{"role":"project","title":"Shapes","estimatedTime":"5분","abstract":[{"type":"text","text":"Animation은 이름대로 특정한 조건에 대하여 애니메이션으로 나타나는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.1)Shapes","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/3.1)shapes"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.12)Sheet":{"role":"project","title":"Sheet","estimatedTime":"5분","abstract":[{"type":"text","text":"Sheet는 기존의 View 위에 보여지는 새로운 View입니다."},{"type":"text","text":" "},{"type":"text","text":"modal"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.12)Sheet","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.12)sheet"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.9)NavigationView":{"role":"project","title":"NavigationView","estimatedTime":"5분","abstract":[{"type":"text","text":"NavigationView는 현재 View에서 다른 View로의 전환을 목적으로 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.9)NavigationView","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.9)navigationview"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.10)TabView&EmptyView":{"role":"project","title":"TabView","estimatedTime":"5분","abstract":[{"type":"text","text":"TabView는 NavigationView처럼 View간의 전환을 목적으로 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.10)TabView&EmptyView","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.10)tabview&emptyview"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.1)ForEach":{"role":"project","title":"ForEach","estimatedTime":"5분","abstract":[{"type":"text","text":"어떤 특정한 순서를 반복하면서 View에 요소들을 나열하는 경우에 ForEach를 사용합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.1)ForEach","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.1)foreach"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.6)Toggle&Picker":{"role":"project","title":"Toggle & Picker","estimatedTime":"5분","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.6)Toggle&Picker","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/1.6)toggle&picker"},"doc://SwiftUIPrototyping/tutorials/SwiftUI":{"role":"overview","title":"SwiftUI 프로토타이핑","abstract":[{"type":"text","text":"SwiftUI의 View에 대해 학습해보고 직접 UI화면을 구현해봅시다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUI","kind":"overview","type":"topic","url":"\/tutorials\/swiftui"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.1)Text":{"role":"project","title":"Text","estimatedTime":"5분","abstract":[{"type":"text","text":"Text View는 앱의 UI에 문자열을 그립니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.1)Text","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/1.1)text"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.7)Button":{"role":"project","title":"Button","estimatedTime":"5분","abstract":[{"type":"text","text":"Button은 클릭되었을 때 action 작업을 수행하는 control입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.7)Button","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/1.7)button"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.4)@State&@Binding":{"role":"project","title":"@State & @Binding","estimatedTime":"5분","abstract":[{"type":"text","text":"SwiftUI에서 가장 기본적으로 사용되는 @State와 @Binding은 Property Wrapper 중 한 종류입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.4)@State&@Binding","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/1.4)@state&@binding"},"SwiftUIPrototypingicon.png":{"alt":"Welcome to SwiftUI Drawing And Animation!","type":"image","identifier":"SwiftUIPrototypingicon.png","variants":[{"url":"\/images\/SwiftUIPrototypingicon.png","size":{"width":400,"height":300},"traits":["1x","light"]}]},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.6)Form&GroupBox":{"role":"project","title":"Form","estimatedTime":"5분","abstract":[{"type":"text","text":"Form은 데이터 혹은 앱의 설정들을 나타내기 위해 사용하는 컨테이너입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.6)Form&GroupBox","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.6)form&groupbox"},"getting_started_image.png":{"alt":"Welcome to SwiftUI Prototyping!","type":"image","identifier":"getting_started_image.png","variants":[{"url":"\/images\/getting_started_image.png","size":{"width":2926,"height":1770},"traits":["1x","light"]}]},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.5)ProgressView":{"role":"project","title":"ProgressView","estimatedTime":"5분","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.5)ProgressView","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.5)progressview"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.11)Alert&ActionSheet":{"role":"project","title":"Alert & ActionSheet","estimatedTime":"5분","abstract":[{"type":"text","text":"Alert는 특정한 동작에 대해서 화면에 작은 창을 띄워 사용자에게 경고하는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.11)Alert&ActionSheet","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.11)alert&actionsheet"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/3.4)Paints":{"role":"project","title":"Paints","estimatedTime":"5분","abstract":[{"type":"text","text":"Paint는 Shape의 내부를 정해진 하나로 채워버리는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.4)Paints","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/3.4)paints"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.5)Image":{"role":"project","title":"Image","estimatedTime":"5분","abstract":[{"type":"text","text":"Image는 이미지를 표시하는 view입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.5)Image","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/1.5)image"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.2)Stack":{"role":"project","title":"Stack","estimatedTime":"5분","abstract":[{"type":"text","text":"SwiftUI에서는 두개 이상의 View를 나열하기 위해서는 Stack을 사용합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.2)Stack","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/1.2)stack"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/3.2)Animation":{"role":"project","title":"Animation","estimatedTime":"5분","abstract":[{"type":"text","text":"Animation은 이름대로 특정한 조건에 대하여 애니메이션으로 나타나는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.2)Animation","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/3.2)animation"}}}