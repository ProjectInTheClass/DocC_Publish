{"metadata":{"title":"Form","categoryPathComponent":"SwiftUI","role":"project","category":"SwiftUI"},"hierarchy":{"modules":[{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUI\/SwiftUI-Basic","projects":[{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.1)Text","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.1)Text#Text"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.1)Text#ViewModifier"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.2)Stack","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.2)Stack#VStack"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.2)Stack#HStack"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.2)Stack#ZStack"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.3)TextField","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.3)TextField#TextField"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.4)@State&@Binding","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.4)@State&@Binding#@State"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.4)@State&@Binding#@Binding"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.5)Image","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.5)Image#Image"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.6)Toggle&Picker","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.6)Toggle&Picker#Toggle"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.6)Toggle&Picker#Picker"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.7)Button","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.7)Button#Button"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.7)Button#Button-UI"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.7)Button#Button-Style"}]}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUI\/SwiftUI-Views","projects":[{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.1)ForEach","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.1)ForEach#ForEach"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.2)List","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.2)List#StaticList"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.2)List#DynamicList"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.3)ScrollView","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.3)ScrollView#ScrollView"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.4)LazyGrid","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.4)LazyGrid#LazyHGrid"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.4)LazyGrid#LazyVGrid"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.5)ProgressView","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.5)ProgressView#ProgressView"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.5)ProgressView#Custom-ProgressView"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.6)Form&GroupBox","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.6)Form&GroupBox#Form"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.6)Form&GroupBox#Form-&-Section"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.6)Form&GroupBox#GroupBox"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.7)OutlineGroup&DisclosureGroup","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.7)OutlineGroup&DisclosureGroup#OutlineGroup"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.7)OutlineGroup&DisclosureGroup#DisclosureGroup"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.8)Spacer&Divider","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.8)Spacer&Divider#Spacer"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.8)Spacer&Divider#Divider"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.9)NavigationView","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.9)NavigationView#NavigationView"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.10)TabView&EmptyView","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.10)TabView&EmptyView#TabView"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.10)TabView&EmptyView#EmptyView"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.11)Alert&ActionSheet","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.11)Alert&ActionSheet#Alert"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.11)Alert&ActionSheet#ActionSheet"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.12)Sheet","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.12)Sheet#Sheet"}]}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUI\/SwiftUI-Drawing-and-Animation","projects":[{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.1)Shapes","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.1)Shapes#Shapes"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.1)Shapes#Other-Shapes"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.2)Animation","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.2)Animation#Animation"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.3)Gesture","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.3)Gesture#Gesture"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.4)Paints","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.4)Paints#Paints"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.5)GeometryReader","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.5)GeometryReader#GeometryReader"}]}]}],"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUI","paths":[["doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUI","doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUI\/$volume","doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUI\/SwiftUI-Views"]]},"schemaVersion":{"major":0,"minor":1,"patch":0},"kind":"project","identifier":{"url":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.6)Form&GroupBox","interfaceLanguage":"swift"},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Form은 데이터 혹은 앱의 설정들을 나타내기 위해 사용하는 컨테이너입니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"하지만 Form의 내부에 표현될 수 있는 요소들의 개수는 10개로 제한되며"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"만약 10개가 넘는 요소를 입력하게되면 바로 에러가 발생합니다."}]}],"estimatedTimeInMinutes":5,"title":"Form","image":"","chapter":"SwiftUI Views","kind":"hero","backgroundImage":""},{"kind":"tasks","tasks":[{"anchor":"Form","title":"Form","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Text"}]}],"mediaPosition":"trailing","media":""}],"stepsSection":[{"code":"TextCode1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"코드 설명"}]}],"caption":[],"type":"step","runtimePreview":"Text1.png","media":null},{"code":"TextCode1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Form & Group"}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Form의 내부에 10개 이상의 요소들을 나타내봅시다."},{"type":"text","text":" "},{"type":"text","text":"우리는 앞에서 Form을 사용해서 회원가입 화면을 만들었습니다."},{"type":"text","text":" "},{"type":"text","text":"이번에는 Form 내부에 이메일 수신 동의, 문자 수신 동의, 성별, 직업 항목을 추가하려고 합니다."}]}],"type":"step","runtimePreview":"Text1.png","media":null},{"code":"TextCode1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"(1) 추가되는 항목에 필요한 변수들을 선언합니다."}]}],"caption":[],"type":"step","runtimePreview":"Text1.png","media":null},{"code":"TextCode1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"(2) 이메일 수신 동의, 문자 수신 동의 항목을 추가하세요."}]}],"caption":[],"type":"step","runtimePreview":"Text1.png","media":null},{"code":"TextCode1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"(3) 주소 아래에 성별, 직업 항목을 추가하세요."}]}],"caption":[],"type":"step","runtimePreview":"Text1.png","media":null},{"code":"TextCode1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"이 코드를 실행하면 다음과 같은 오류가 발생합니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Extra arguments at positions #11, #12 in call"}]}],"type":"step","runtimePreview":"Text1.png","media":null},{"code":"TextCode1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"이 오류는 Form 내부에는 10개 이하의 항목이 들어갈 수 있는데, 우리는 12개의 항목을 넣었기 때문에"},{"type":"text","text":" "},{"type":"text","text":"11번째, 12번째의 추가 항목이 있다고 알려주는 것입니다."},{"type":"text","text":" "},{"type":"text","text":"그렇다면 이 문제를 해결하려면 어떻게 해야할까요?"},{"type":"text","text":" "},{"type":"text","text":"Group은 내부에 포함된 모든 요소들을 전부 하나로 묶어 취급하는 역할을 합니다."},{"type":"text","text":" "},{"type":"text","text":"즉, Group 안에 3개가 포함되었든, 8개가 포함되었든 Form의 입장에서는 하나의 요소로 간주하는 것입니다."},{"type":"text","text":" "},{"type":"text","text":"이 점을 이용하면 Form 내부에 100개 이상의 요소를 펼치는것도 가능해집니다."},{"type":"text","text":" "},{"type":"text","text":"이제 위의 코드에 Group을 사용해서 문제를 해결해보세요."}]}],"caption":[],"type":"step","runtimePreview":"Text1.png","media":null}]},{"anchor":"Form-&-Section","title":"Form & Section","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Section은 View 내부에서 특정한 구역을 할당하고 그 내부에 요소들을 나타내기 위해 사용합니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"header와 footer로 나뉘며 이름대로 상단과 하단에 요소를 나타냅니다."}]}],"mediaPosition":"trailing","media":""}],"stepsSection":[{"code":"TextCode1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"코드 설명"}]}],"caption":[],"type":"step","runtimePreview":"Text1.png","media":null}]},{"anchor":"GroupBox","title":"GroupBox","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"GroupBox는 내부에 선언된 요소들을 마치 카드처럼 작은 사각형안에 나타내는 역할을 합니다."}]}],"mediaPosition":"trailing","media":""}],"stepsSection":[{"code":"TextCode1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"코드 설명"}]}],"caption":[],"type":"step","runtimePreview":"Text1.png","media":null},{"code":"TextCode1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Custom Style 적용"}]}],"caption":[],"type":"step","runtimePreview":"Text1.png","media":null}]}]},{"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.7)OutlineGroup&DisclosureGroup","overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"OutlineGroup & DisclosureGroup","abstract":[{"type":"text","text":"Text"}]}],"references":{"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.2)List#StaticList":{"role":"pseudoSymbol","title":"StaticList","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.2)List#StaticList","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.2)list#StaticList"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.4)@State&@Binding":{"role":"project","title":"@State & @Binding","estimatedTime":"5분","abstract":[{"type":"text","text":"SwiftUI에서 가장 기본적으로 사용되는 @State와 @Binding은 Property Wrapper 중 한 종류입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.4)@State&@Binding","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/1.4)@state&@binding"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.3)TextField":{"role":"project","title":"TextField","estimatedTime":"5분","abstract":[{"type":"text","text":"TextField는 사용자가 텍스트를 직접 입력할 수 있는 공간을 제공합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.3)TextField","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/1.3)textfield"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/3.4)Paints":{"role":"project","title":"Paints","estimatedTime":"5분","abstract":[{"type":"text","text":"Paint는 Shape의 내부를 정해진 하나로 채워버리는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.4)Paints","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/3.4)paints"},"Text1.png":{"alt":"preview","type":"image","identifier":"Text1.png","variants":[{"url":"\/images\/Text1.png","size":{"width":654,"height":1334},"traits":["1x","light"]}]},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.7)Button#Button-UI":{"role":"pseudoSymbol","title":"Button UI 변경","abstract":[{"type":"text","text":"Button은 클릭되었을 때 action 작업을 수행하는 control입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.7)Button#Button-UI","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.7)button#Button-UI"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.12)Sheet#Sheet":{"role":"pseudoSymbol","title":"Sheet","abstract":[{"type":"text","text":"Sheet는 기존의 View 위에 보여지는 새로운 View입니다."},{"type":"text","text":" "},{"type":"text","text":"modal"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.12)Sheet#Sheet","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.12)sheet#Sheet"},"TextCode1.swift":{"syntax":"swift","content":["import SwiftUI","","struct TextView: View {","    ","    var body: some View {","        Text(\"Hello, World!\")","    }","}","","struct TextView_Previews: PreviewProvider {","    static var previews: some View {","        TextView()","    }","}"],"fileName":"TextView.swift","identifier":"TextCode1.swift","type":"file","fileType":"swift","highlights":[]},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.12)Sheet":{"role":"project","title":"Sheet","estimatedTime":"5분","abstract":[{"type":"text","text":"Sheet는 기존의 View 위에 보여지는 새로운 View입니다."},{"type":"text","text":" "},{"type":"text","text":"modal"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.12)Sheet","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.12)sheet"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/3.3)Gesture#Gesture":{"role":"pseudoSymbol","title":"Gesture","abstract":[{"type":"text","text":"Gesture는 사용자의 특정한 행동에 따라 뷰에 변화가 알어나게 하는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.3)Gesture#Gesture","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/3.3)gesture#Gesture"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.1)Text#ViewModifier":{"role":"pseudoSymbol","title":"ViewModifier","abstract":[{"type":"text","text":"Text View는 앱의 UI에 문자열을 그립니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.1)Text#ViewModifier","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.1)text#ViewModifier"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/3.1)Shapes":{"role":"project","title":"Shapes","estimatedTime":"5분","abstract":[{"type":"text","text":"Animation은 이름대로 특정한 조건에 대하여 애니메이션으로 나타나는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.1)Shapes","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/3.1)shapes"},"doc://SwiftUIPrototyping/tutorials/SwiftUI":{"role":"overview","title":"SwiftUI 프로토타이핑","abstract":[{"type":"text","text":"SwiftUI의 View에 대해 학습해보고 직접 UI화면을 구현해봅시다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUI","kind":"overview","type":"topic","url":"\/tutorials\/swiftui"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.3)TextField#TextField":{"role":"pseudoSymbol","title":"TextField","abstract":[{"type":"text","text":"TextField는 사용자가 텍스트를 직접 입력할 수 있는 공간을 제공합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.3)TextField#TextField","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.3)textfield#TextField"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.7)OutlineGroup&DisclosureGroup#DisclosureGroup":{"role":"pseudoSymbol","title":"DisclosureGroup","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.7)OutlineGroup&DisclosureGroup#DisclosureGroup","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.7)outlinegroup&disclosuregroup#DisclosureGroup"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.6)Form&GroupBox#GroupBox":{"role":"pseudoSymbol","title":"GroupBox","abstract":[{"type":"text","text":"Form은 데이터 혹은 앱의 설정들을 나타내기 위해 사용하는 컨테이너입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.6)Form&GroupBox#GroupBox","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.6)form&groupbox#GroupBox"},"doc://SwiftUIPrototyping/tutorials/SwiftUI/SwiftUI-Basic":{"role":"article","title":"SwiftUI Basic","abstract":[],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUI\/SwiftUI-Basic","kind":"article","type":"topic","url":"\/tutorials\/swiftui\/swiftui-basic"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/3.2)Animation#Animation":{"role":"pseudoSymbol","title":"Animation","abstract":[{"type":"text","text":"Animation은 이름대로 특정한 조건에 대하여 애니메이션으로 나타나는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.2)Animation#Animation","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/3.2)animation#Animation"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.5)ProgressView#Custom-ProgressView":{"role":"pseudoSymbol","title":"Custom ProgressView","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.5)ProgressView#Custom-ProgressView","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.5)progressview#Custom-ProgressView"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/3.2)Animation":{"role":"project","title":"Animation","estimatedTime":"5분","abstract":[{"type":"text","text":"Animation은 이름대로 특정한 조건에 대하여 애니메이션으로 나타나는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.2)Animation","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/3.2)animation"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.6)Toggle&Picker#Picker":{"role":"pseudoSymbol","title":"Picker","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.6)Toggle&Picker#Picker","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.6)toggle&picker#Picker"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.2)Stack#ZStack":{"role":"pseudoSymbol","title":"ZStack","abstract":[{"type":"text","text":"SwiftUI에서는 두개 이상의 View를 나열하기 위해서는 Stack을 사용합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.2)Stack#ZStack","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.2)stack#ZStack"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/3.5)GeometryReader":{"role":"project","title":"GeometryReader","estimatedTime":"5분","abstract":[{"type":"text","text":"GeometryReader를 사용하여 내부의 view가 전체 view의 틀 안에서 좌표계를 이용하여 내부 요소들을 쉽게 배치할 수 있습니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.5)GeometryReader","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/3.5)geometryreader"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.7)OutlineGroup&DisclosureGroup":{"role":"project","title":"OutlineGroup & DisclosureGroup","estimatedTime":"5분","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.7)OutlineGroup&DisclosureGroup","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.7)outlinegroup&disclosuregroup"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.7)OutlineGroup&DisclosureGroup#OutlineGroup":{"role":"pseudoSymbol","title":"OutlineGroup","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.7)OutlineGroup&DisclosureGroup#OutlineGroup","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.7)outlinegroup&disclosuregroup#OutlineGroup"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.6)Toggle&Picker":{"role":"project","title":"Toggle & Picker","estimatedTime":"5분","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.6)Toggle&Picker","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/1.6)toggle&picker"},"doc://SwiftUIPrototyping/tutorials/SwiftUI/SwiftUI-Views":{"role":"article","title":"SwiftUI Views","abstract":[],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUI\/SwiftUI-Views","kind":"article","type":"topic","url":"\/tutorials\/swiftui\/swiftui-views"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.1)Text":{"role":"project","title":"Text","estimatedTime":"5분","abstract":[{"type":"text","text":"Text View는 앱의 UI에 문자열을 그립니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.1)Text","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/1.1)text"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.5)ProgressView":{"role":"project","title":"ProgressView","estimatedTime":"5분","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.5)ProgressView","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.5)progressview"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.7)Button#Button":{"role":"pseudoSymbol","title":"Button의 구조","abstract":[{"type":"text","text":"Button은 클릭되었을 때 action 작업을 수행하는 control입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.7)Button#Button","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.7)button#Button"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.10)TabView&EmptyView":{"role":"project","title":"TabView","estimatedTime":"5분","abstract":[{"type":"text","text":"TabView는 NavigationView처럼 View간의 전환을 목적으로 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.10)TabView&EmptyView","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.10)tabview&emptyview"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/3.4)Paints#Paints":{"role":"pseudoSymbol","title":"Paints","abstract":[{"type":"text","text":"Paint는 Shape의 내부를 정해진 하나로 채워버리는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.4)Paints#Paints","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/3.4)paints#Paints"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/3.1)Shapes#Other-Shapes":{"role":"pseudoSymbol","title":"Other Shapes","abstract":[{"type":"text","text":"Animation은 이름대로 특정한 조건에 대하여 애니메이션으로 나타나는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.1)Shapes#Other-Shapes","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/3.1)shapes#Other-Shapes"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.7)Button":{"role":"project","title":"Button","estimatedTime":"5분","abstract":[{"type":"text","text":"Button은 클릭되었을 때 action 작업을 수행하는 control입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.7)Button","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/1.7)button"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.6)Form&GroupBox#Form":{"role":"pseudoSymbol","title":"Form","abstract":[{"type":"text","text":"Form은 데이터 혹은 앱의 설정들을 나타내기 위해 사용하는 컨테이너입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.6)Form&GroupBox#Form","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.6)form&groupbox#Form"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.3)ScrollView":{"role":"project","title":"ScrollView","estimatedTime":"5분","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.3)ScrollView","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.3)scrollview"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.11)Alert&ActionSheet#Alert":{"role":"pseudoSymbol","title":"Alert","abstract":[{"type":"text","text":"Alert는 특정한 동작에 대해서 화면에 작은 창을 띄워 사용자에게 경고하는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.11)Alert&ActionSheet#Alert","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.11)alert&actionsheet#Alert"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.9)NavigationView#NavigationView":{"role":"pseudoSymbol","title":"NavigationView","abstract":[{"type":"text","text":"NavigationView는 현재 View에서 다른 View로의 전환을 목적으로 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.9)NavigationView#NavigationView","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.9)navigationview#NavigationView"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.2)Stack#HStack":{"role":"pseudoSymbol","title":"HStack","abstract":[{"type":"text","text":"SwiftUI에서는 두개 이상의 View를 나열하기 위해서는 Stack을 사용합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.2)Stack#HStack","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.2)stack#HStack"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.6)Form&GroupBox":{"role":"project","title":"Form","estimatedTime":"5분","abstract":[{"type":"text","text":"Form은 데이터 혹은 앱의 설정들을 나타내기 위해 사용하는 컨테이너입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.6)Form&GroupBox","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.6)form&groupbox"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/3.5)GeometryReader#GeometryReader":{"role":"pseudoSymbol","title":"GeometryReader","abstract":[{"type":"text","text":"GeometryReader를 사용하여 내부의 view가 전체 view의 틀 안에서 좌표계를 이용하여 내부 요소들을 쉽게 배치할 수 있습니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.5)GeometryReader#GeometryReader","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/3.5)geometryreader#GeometryReader"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.2)Stack#VStack":{"role":"pseudoSymbol","title":"VStack","abstract":[{"type":"text","text":"SwiftUI에서는 두개 이상의 View를 나열하기 위해서는 Stack을 사용합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.2)Stack#VStack","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.2)stack#VStack"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.11)Alert&ActionSheet#ActionSheet":{"role":"pseudoSymbol","title":"ActionSheet","abstract":[{"type":"text","text":"Alert는 특정한 동작에 대해서 화면에 작은 창을 띄워 사용자에게 경고하는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.11)Alert&ActionSheet#ActionSheet","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.11)alert&actionsheet#ActionSheet"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.2)List":{"role":"project","title":"List","estimatedTime":"5분","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.2)List","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.2)list"},"doc://SwiftUIPrototyping/tutorials/SwiftUI/SwiftUI-Drawing-and-Animation":{"role":"article","title":"SwiftUI Drawing and Animation","abstract":[],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUI\/SwiftUI-Drawing-and-Animation","kind":"article","type":"topic","url":"\/tutorials\/swiftui\/swiftui-drawing-and-animation"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.6)Toggle&Picker#Toggle":{"role":"pseudoSymbol","title":"Toggle","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.6)Toggle&Picker#Toggle","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.6)toggle&picker#Toggle"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.5)ProgressView#ProgressView":{"role":"pseudoSymbol","title":"ProgressView","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.5)ProgressView#ProgressView","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.5)progressview#ProgressView"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/3.3)Gesture":{"role":"project","title":"Gesture","estimatedTime":"5분","abstract":[{"type":"text","text":"Gesture는 사용자의 특정한 행동에 따라 뷰에 변화가 알어나게 하는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.3)Gesture","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/3.3)gesture"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.5)Image":{"role":"project","title":"Image","estimatedTime":"5분","abstract":[{"type":"text","text":"Image는 이미지를 표시하는 view입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.5)Image","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/1.5)image"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.4)LazyGrid#LazyVGrid":{"role":"pseudoSymbol","title":"LazyVGrid","abstract":[{"type":"text","text":"Grid는 웹 페이지에서 주로 사용되는 방법으로 요소들을 특정 패턴으로 나열하는 방식입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.4)LazyGrid#LazyVGrid","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.4)lazygrid#LazyVGrid"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.10)TabView&EmptyView#TabView":{"role":"pseudoSymbol","title":"TabView","abstract":[{"type":"text","text":"TabView는 NavigationView처럼 View간의 전환을 목적으로 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.10)TabView&EmptyView#TabView","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.10)tabview&emptyview#TabView"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.3)ScrollView#ScrollView":{"role":"pseudoSymbol","title":"ScrollView","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.3)ScrollView#ScrollView","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.3)scrollview#ScrollView"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.4)@State&@Binding#@State":{"role":"pseudoSymbol","title":"@State","abstract":[{"type":"text","text":"SwiftUI에서 가장 기본적으로 사용되는 @State와 @Binding은 Property Wrapper 중 한 종류입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.4)@State&@Binding#@State","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.4)@state&@binding#@State"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.2)Stack":{"role":"project","title":"Stack","estimatedTime":"5분","abstract":[{"type":"text","text":"SwiftUI에서는 두개 이상의 View를 나열하기 위해서는 Stack을 사용합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.2)Stack","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/1.2)stack"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.7)Button#Button-Style":{"role":"pseudoSymbol","title":"재사용 가능한 Button Style","abstract":[{"type":"text","text":"Button은 클릭되었을 때 action 작업을 수행하는 control입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.7)Button#Button-Style","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.7)button#Button-Style"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.9)NavigationView":{"role":"project","title":"NavigationView","estimatedTime":"5분","abstract":[{"type":"text","text":"NavigationView는 현재 View에서 다른 View로의 전환을 목적으로 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.9)NavigationView","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.9)navigationview"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.1)ForEach#ForEach":{"role":"pseudoSymbol","title":"ForEach","abstract":[{"type":"text","text":"어떤 특정한 순서를 반복하면서 View에 요소들을 나열하는 경우에 ForEach를 사용합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.1)ForEach#ForEach","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.1)foreach#ForEach"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.2)List#DynamicList":{"role":"pseudoSymbol","title":"DynamicList","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.2)List#DynamicList","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.2)list#DynamicList"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.8)Spacer&Divider#Spacer":{"role":"pseudoSymbol","title":"Spacer","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.8)Spacer&Divider#Spacer","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.8)spacer&divider#Spacer"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.4)@State&@Binding#@Binding":{"role":"pseudoSymbol","title":"@Binding","abstract":[{"type":"text","text":"SwiftUI에서 가장 기본적으로 사용되는 @State와 @Binding은 Property Wrapper 중 한 종류입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.4)@State&@Binding#@Binding","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.4)@state&@binding#@Binding"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.8)Spacer&Divider":{"role":"project","title":"Spacer & Divider","estimatedTime":"5분","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.8)Spacer&Divider","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.8)spacer&divider"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.5)Image#Image":{"role":"pseudoSymbol","title":"Image","abstract":[{"type":"text","text":"Image는 이미지를 표시하는 view입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.5)Image#Image","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.5)image#Image"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.8)Spacer&Divider#Divider":{"role":"pseudoSymbol","title":"Divider","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.8)Spacer&Divider#Divider","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.8)spacer&divider#Divider"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.10)TabView&EmptyView#EmptyView":{"role":"pseudoSymbol","title":"EmptyView","abstract":[{"type":"text","text":"TabView는 NavigationView처럼 View간의 전환을 목적으로 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.10)TabView&EmptyView#EmptyView","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.10)tabview&emptyview#EmptyView"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.1)Text#Text":{"role":"pseudoSymbol","title":"Text","abstract":[{"type":"text","text":"Text View는 앱의 UI에 문자열을 그립니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.1)Text#Text","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.1)text#Text"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.1)ForEach":{"role":"project","title":"ForEach","estimatedTime":"5분","abstract":[{"type":"text","text":"어떤 특정한 순서를 반복하면서 View에 요소들을 나열하는 경우에 ForEach를 사용합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.1)ForEach","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.1)foreach"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/3.1)Shapes#Shapes":{"role":"pseudoSymbol","title":"Shapes","abstract":[{"type":"text","text":"Animation은 이름대로 특정한 조건에 대하여 애니메이션으로 나타나는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.1)Shapes#Shapes","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/3.1)shapes#Shapes"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.4)LazyGrid#LazyHGrid":{"role":"pseudoSymbol","title":"LazyHGrid","abstract":[{"type":"text","text":"Grid는 웹 페이지에서 주로 사용되는 방법으로 요소들을 특정 패턴으로 나열하는 방식입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.4)LazyGrid#LazyHGrid","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.4)lazygrid#LazyHGrid"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.11)Alert&ActionSheet":{"role":"project","title":"Alert & ActionSheet","estimatedTime":"5분","abstract":[{"type":"text","text":"Alert는 특정한 동작에 대해서 화면에 작은 창을 띄워 사용자에게 경고하는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.11)Alert&ActionSheet","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.11)alert&actionsheet"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.6)Form&GroupBox#Form-&-Section":{"role":"pseudoSymbol","title":"Form & Section","abstract":[{"type":"text","text":"Form은 데이터 혹은 앱의 설정들을 나타내기 위해 사용하는 컨테이너입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.6)Form&GroupBox#Form-&-Section","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.6)form&groupbox#Form-&-Section"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.4)LazyGrid":{"role":"project","title":"LazyGrid","estimatedTime":"5분","abstract":[{"type":"text","text":"Grid는 웹 페이지에서 주로 사용되는 방법으로 요소들을 특정 패턴으로 나열하는 방식입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.4)LazyGrid","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.4)lazygrid"}}}