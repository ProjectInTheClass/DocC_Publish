{"metadata":{"title":"TextField","categoryPathComponent":"SwiftUI","role":"project","category":"SwiftUI"},"hierarchy":{"modules":[{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUI\/SwiftUI-Basic","projects":[{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.1)Text","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.1)Text#Text"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.1)Text#ViewModifier"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.2)Stack","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.2)Stack#VStack"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.2)Stack#HStack"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.2)Stack#ZStack"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.3)TextField","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.3)TextField#TextField"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.4)@State&@Binding","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.4)@State&@Binding#@State"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.4)@State&@Binding#@Binding"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.5)Image","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.5)Image#Image-file"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.5)Image#Image"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.6)Button","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.6)Button#Button"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.6)Button#Button-UI"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.6)Button#Button-Style"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.7)Toggle&Picker","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.7)Toggle&Picker#Toggle"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.7)Toggle&Picker#Picker"}]}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUI\/SwiftUI-Views","projects":[{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.1)ForEach","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.1)ForEach#ForEach"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.2)List","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.2)List#StaticList"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.2)List#DynamicList"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.3)ScrollView","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.3)ScrollView#ScrollView"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.4)LazyGrid","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.4)LazyGrid#LazyHGrid"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.4)LazyGrid#LazyVGrid"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.5)ProgressView","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.5)ProgressView#ProgressView"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.5)ProgressView#Custom-ProgressView"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.6)Form&GroupBox","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.6)Form&GroupBox#Form"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.6)Form&GroupBox#Form-&-Section"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.6)Form&GroupBox#GroupBox"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.7)OutlineGroup&DisclosureGroup","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.7)OutlineGroup&DisclosureGroup#OutlineGroup"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.7)OutlineGroup&DisclosureGroup#DisclosureGroup"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.8)Spacer&Divider","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.8)Spacer&Divider#Spacer"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.8)Spacer&Divider#Divider"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.9)NavigationView","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.9)NavigationView#NavigationView"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.10)TabView&EmptyView","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.10)TabView&EmptyView#TabView"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.10)TabView&EmptyView#EmptyView"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.11)Alert&ActionSheet","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.11)Alert&ActionSheet#Alert"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.11)Alert&ActionSheet#ActionSheet"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.12)Sheet","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.12)Sheet#Sheet"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.13)GeometryReader","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.13)GeometryReader#GeometryReader"}]}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUI\/SwiftUI-Drawing-and-Animation","projects":[{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.1)Shapes","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.1)Shapes#Shapes"},{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.1)Shapes#Other-Shapes"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.2)Paints","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.2)Paints#Paints"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.3)Animation","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.3)Animation#Animation"}]},{"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.4)Gesture","sections":[{"kind":"task","reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.4)Gesture#Gesture"}]}]}],"reference":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUI","paths":[["doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUI","doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUI\/$volume","doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUI\/SwiftUI-Basic"]]},"schemaVersion":{"major":0,"minor":1,"patch":0},"kind":"project","identifier":{"url":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.3)TextField","interfaceLanguage":"swift"},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"TextField는 사용자가 텍스트를 직접 입력할 수 있는 공간을 제공합니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"TextField는 레이블과 값에 대한 바인딩으로 구성됩니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"값에 대한 바인딩을 통해 TextField는 사용자가 입력하거나 편집할 때 값을 계속 업데이트합니다."}]}],"estimatedTimeInMinutes":5,"title":"TextField","image":"TextFieldCover.png","chapter":"SwiftUI Basic","kind":"hero","backgroundImage":"TextFieldCover.png"},{"kind":"tasks","tasks":[{"anchor":"TextField","title":"TextField","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"TextField에 대해 알아보고 Modifier를 적용시켜보세요."}]}],"mediaPosition":"trailing","media":"TextField.png"}],"stepsSection":[{"code":"TextFieldCode1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"가장 먼저 TextField()를 선언해줍니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"TextField의 입력값이 실시간으로 반영되는 것을 확인하기 위해서 Text를 선언하고 TextField와 Text를 VStack으로 정렬합니다. name 변수의 값을 보여주기 위해서 (변수명)의 형태로 Text의 값을 만들어줍니다."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"TextFieldCode2.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"입력된 값을 저장하기 위한 name 변수를 선언합니다. 이때 변수에 빈 값 (””)을 넣으면 TextField에 아무런 값도 들어있지 않은 상태로 실행되고, 다른 값을 넣게되면 해당 값이 TextField에 입력된 상태로 실행됩니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"name 변수 앞에 @State를 붙여줍니다. @State에 대한 자세한 내용은 다음 Chapter에서 다루어집니다."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"TextFieldCode3.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"TextField에는 두개의 값이 들어갑니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"앞부분의 “What is tour name?“이라고 적힌 부분은 placeholder로 사용자가 TextField에 어떤 값을 입력할 지 힌트를 주는 문구를 입력합니다."}]}],"type":"step","runtimePreview":"TextField3.png","media":null},{"code":"TextFieldCode3.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"뒤의 text: $name 부분은 TextField에 입력된 값이 name 변수의 값이 되도록 합니다. name의 앞에 $가 붙어있는 것을 볼 수 있습니다. 이것은 바인딩을 표시하는 것으로, name 변수의 양방향 통신을 위한 것입니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"TextField에서는 name의 값을 가져오는 것 뿐만 아니라 name의 값을 변경할 수 있어야 하므로 양방향 통신이 필요합니다. State가 붙은 변수의 값을 양방향으로 소통하기 위해서 필요한 것이 $입니다."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"TextFieldCode3.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"또한 name 변수의 앞에 @State를 붙임으로써, name 변수에 값 변동이 생기는 경우 이를 인지하여 View를 다시 만들어 name 변수가 사용된 모든 부분이 변경된 값이 적용될 수 있도록 합니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"예제 코드를 보면 Text()에서 name 변수가 사용되는데, TextField의 값을 변경하면 Text()의 값도 같은 값으로 변경되는 것을 확인할 수 있습니다."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"TextFieldCode4.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":".textFieldStyle(RoundedBorderTextFieldStyle())에 대해 알아봅시다."},{"type":"text","text":" "},{"type":"text","text":".textFieldStyle()는 TextField의 style을 지정하기 위한 modifier입니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":".textFieldStyle() 안에 PlainTextFieldStyle()을 넣어보세요."},{"type":"text","text":" "},{"type":"text","text":"RoundedBorderTextFieldStyle와 비교해서 TextField가 어떻게 변하나요?"}]}],"type":"step","runtimePreview":"TextField4.png","media":null},{"code":"TextFieldCode4.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":".padding()에 대해 알아봅시다."},{"type":"text","text":" "},{"type":"text","text":".padding()은 지정된 값 만큼 가장자리를 따라 padding값을 주는 것입니다."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":".padding(10)과 같이 ()안에 특정 값을 입력하여 해당 값만큼의 padding을 주거나 .padding(.horizontal, 20)과 같이 특정 방향을 지정하여 padding을 줄 수도 있습니다."}]}],"type":"step","runtimePreview":"TextField4.png","media":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"사용자가 텍스트를 입력할 수 있는 공간에는 TextField외에도 SecureField이라는 것이 있습니다."},{"type":"text","text":" "},{"type":"text","text":"SecureField는 사용자가 입력하는 텍스트가 화면 상에 암호화되어 나타납니다."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"SecureField에 대해서 더 공부하시려면 Google에 ‘SwiftUI SecureField’이라고 검색해보세요."}]}]}]},{"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.4)@State&@Binding","overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"@State & @Binding","abstract":[{"type":"text","text":"SwiftUI에서 @State와 @Binding은 가장 필수적으로 사용되는 Property Wrapper 중 한 종류입니다."}]}],"references":{"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/3.1)Shapes":{"role":"project","title":"Shapes","estimatedTime":"5분","abstract":[{"type":"text","text":"Animation은 이름대로 특정한 조건에 대하여 애니메이션으로 나타나는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.1)Shapes","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/3.1)shapes"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.5)ProgressView#ProgressView":{"role":"pseudoSymbol","title":"ProgressView","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.5)ProgressView#ProgressView","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.5)progressview#ProgressView"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.5)Image":{"role":"project","title":"Image","estimatedTime":"5분","abstract":[{"type":"text","text":"Image는 이미지를 보여주는 view입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.5)Image","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/1.5)image"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.11)Alert&ActionSheet":{"role":"project","title":"Alert & ActionSheet","estimatedTime":"5분","abstract":[{"type":"text","text":"Alert는 특정한 동작에 대해서 화면에 작은 창을 띄워 사용자에게 경고하는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.11)Alert&ActionSheet","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.11)alert&actionsheet"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.6)Form&GroupBox#Form-&-Section":{"role":"pseudoSymbol","title":"Form & Section","abstract":[{"type":"text","text":"Form은 데이터 혹은 앱의 설정들을 나타내기 위해 사용하는 컨테이너입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.6)Form&GroupBox#Form-&-Section","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.6)form&groupbox#Form-&-Section"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.4)LazyGrid":{"role":"project","title":"LazyGrid","estimatedTime":"5분","abstract":[{"type":"text","text":"Grid는 웹 페이지에서 주로 사용되는 방법으로 요소들을 특정 패턴으로 나열하는 방식입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.4)LazyGrid","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.4)lazygrid"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.1)Text#ViewModifier":{"role":"pseudoSymbol","title":"ViewModifier","abstract":[{"type":"text","text":"Text View는 앱의 UI에 문자열을 그립니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.1)Text#ViewModifier","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.1)text#ViewModifier"},"TextField.png":{"alt":"TextField preview","type":"image","identifier":"TextField.png","variants":[{"url":"\/images\/TextField.png","size":{"width":4000,"height":984},"traits":["1x","light"]}]},"TextFieldCode3.swift":{"syntax":"swift","content":["import SwiftUI","","struct TextFieldView: View {","    ","    @State private var name: String = \"\"","    ","    var body: some View {","        VStack{","            ","            TextField(\"What is your name?\", text: $name)","            ","            Text(\"Hi! \\(name)~~\")","                .font(.system(size: 30, weight: .bold, design: .rounded))","                .foregroundColor(.pink)","        }","    }","}","","struct TextFieldView_Previews: PreviewProvider {","    static var previews: some View {","        TextFieldView()","    }","}"],"fileName":"TextFieldView.swift","identifier":"TextFieldCode3.swift","type":"file","fileType":"swift","highlights":[]},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.3)ScrollView":{"role":"project","title":"ScrollView","estimatedTime":"5분","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.3)ScrollView","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.3)scrollview"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.3)ScrollView#ScrollView":{"role":"pseudoSymbol","title":"ScrollView","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.3)ScrollView#ScrollView","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.3)scrollview#ScrollView"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.10)TabView&EmptyView#EmptyView":{"role":"pseudoSymbol","title":"EmptyView","abstract":[{"type":"text","text":"TabView는 NavigationView처럼 View간의 전환을 목적으로 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.10)TabView&EmptyView#EmptyView","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.10)tabview&emptyview#EmptyView"},"doc://SwiftUIPrototyping/tutorials/SwiftUI/SwiftUI-Views":{"role":"article","title":"SwiftUI Views","abstract":[],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUI\/SwiftUI-Views","kind":"article","type":"topic","url":"\/tutorials\/swiftui\/swiftui-views"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/3.4)Gesture":{"role":"project","title":"Gesture","estimatedTime":"5분","abstract":[{"type":"text","text":"Gesture는 사용자의 특정한 행동에 따라 뷰에 변화가 알어나게 하는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.4)Gesture","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/3.4)gesture"},"doc://SwiftUIPrototyping/tutorials/SwiftUI":{"role":"overview","title":"SwiftUI 프로토타이핑","abstract":[{"type":"text","text":"SwiftUI의 View에 대해 학습해보고 직접 UI화면을 구현해봅시다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUI","kind":"overview","type":"topic","url":"\/tutorials\/swiftui"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.2)Stack":{"role":"project","title":"Stack","estimatedTime":"5분","abstract":[{"type":"text","text":"SwiftUI에서는 두개 이상의 View를 나열하기 위해서는 Stack을 사용합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.2)Stack","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/1.2)stack"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.5)Image#Image":{"role":"pseudoSymbol","title":"Image","abstract":[{"type":"text","text":"Image는 이미지를 보여주는 view입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.5)Image#Image","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.5)image#Image"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.5)ProgressView#Custom-ProgressView":{"role":"pseudoSymbol","title":"Custom ProgressView","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.5)ProgressView#Custom-ProgressView","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.5)progressview#Custom-ProgressView"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.2)List":{"role":"project","title":"List","estimatedTime":"5분","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.2)List","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.2)list"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.7)Toggle&Picker#Picker":{"role":"pseudoSymbol","title":"Picker","abstract":[{"type":"text","text":"SwiftUI의 Value Selector는 여러가지 값들 중 하나를 선택할 수 있는 control View입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.7)Toggle&Picker#Picker","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.7)toggle&picker#Picker"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.6)Form&GroupBox#Form":{"role":"pseudoSymbol","title":"Form","abstract":[{"type":"text","text":"Form은 데이터 혹은 앱의 설정들을 나타내기 위해 사용하는 컨테이너입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.6)Form&GroupBox#Form","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.6)form&groupbox#Form"},"doc://SwiftUIPrototyping/tutorials/SwiftUI/SwiftUI-Basic":{"role":"article","title":"SwiftUI Basic","abstract":[],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUI\/SwiftUI-Basic","kind":"article","type":"topic","url":"\/tutorials\/swiftui\/swiftui-basic"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/3.1)Shapes#Other-Shapes":{"role":"pseudoSymbol","title":"Other Shapes","abstract":[{"type":"text","text":"Animation은 이름대로 특정한 조건에 대하여 애니메이션으로 나타나는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.1)Shapes#Other-Shapes","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/3.1)shapes#Other-Shapes"},"TextFieldCover.png":{"alt":"preview","type":"image","identifier":"TextFieldCover.png","variants":[{"url":"\/images\/TextFieldCover.png","size":{"width":2034,"height":440},"traits":["1x","light"]}]},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.9)NavigationView":{"role":"project","title":"NavigationView","estimatedTime":"5분","abstract":[{"type":"text","text":"NavigationView는 현재 View에서 다른 View로의 전환을 목적으로 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.9)NavigationView","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.9)navigationview"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/3.4)Gesture#Gesture":{"role":"pseudoSymbol","title":"Gesture","abstract":[{"type":"text","text":"Gesture는 사용자의 특정한 행동에 따라 뷰에 변화가 알어나게 하는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.4)Gesture#Gesture","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/3.4)gesture#Gesture"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.1)Text#Text":{"role":"pseudoSymbol","title":"Text","abstract":[{"type":"text","text":"Text View는 앱의 UI에 문자열을 그립니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.1)Text#Text","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.1)text#Text"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.13)GeometryReader#GeometryReader":{"role":"pseudoSymbol","title":"GeometryReader","abstract":[{"type":"text","text":"GeometryReader를 사용하여 내부의 view가 전체 view의 틀 안에서 좌표계를 이용하여 내부 요소들을 쉽게 배치할 수 있습니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.13)GeometryReader#GeometryReader","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.13)geometryreader#GeometryReader"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.1)Text":{"role":"project","title":"Text","estimatedTime":"5분","abstract":[{"type":"text","text":"Text View는 앱의 UI에 문자열을 그립니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.1)Text","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/1.1)text"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.7)Toggle&Picker":{"role":"project","title":"Toggle & Picker","estimatedTime":"5분","abstract":[{"type":"text","text":"SwiftUI의 Value Selector는 여러가지 값들 중 하나를 선택할 수 있는 control View입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.7)Toggle&Picker","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/1.7)toggle&picker"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.1)ForEach":{"role":"project","title":"ForEach","estimatedTime":"5분","abstract":[{"type":"text","text":"어떤 특정한 순서를 반복하면서 View에 요소들을 나열하는 경우에 ForEach를 사용합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.1)ForEach","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.1)foreach"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.6)Button":{"role":"project","title":"Button","estimatedTime":"5분","abstract":[{"type":"text","text":"Button은 클릭되었을 때 action 작업을 수행하는 control입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.6)Button","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/1.6)button"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.3)TextField":{"role":"project","title":"TextField","estimatedTime":"5분","abstract":[{"type":"text","text":"TextField는 사용자가 텍스트를 직접 입력할 수 있는 공간을 제공합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.3)TextField","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/1.3)textfield"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.8)Spacer&Divider#Spacer":{"role":"pseudoSymbol","title":"Spacer","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.8)Spacer&Divider#Spacer","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.8)spacer&divider#Spacer"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.6)Button#Button-UI":{"role":"pseudoSymbol","title":"Button UI 변경","abstract":[{"type":"text","text":"Button은 클릭되었을 때 action 작업을 수행하는 control입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.6)Button#Button-UI","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.6)button#Button-UI"},"TextFieldCode4.swift":{"syntax":"swift","content":["import SwiftUI","","struct TextFieldView: View {","    ","    @State private var name: String = \"\"","    ","    var body: some View {","        VStack{","            ","            TextField(\"What is your name?\", text: $name)","                .textFieldStyle(RoundedBorderTextFieldStyle())","                .padding()","            ","            Text(\"Hi! \\(name)~~\")","                .font(.system(size: 30, weight: .bold, design: .rounded))","                .foregroundColor(.pink)","        }","    }","}","","struct TextFieldView_Previews: PreviewProvider {","    static var previews: some View {","        TextFieldView()","    }","}"],"fileName":"TextFieldView.swift","identifier":"TextFieldCode4.swift","type":"file","fileType":"swift","highlights":[]},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.13)GeometryReader":{"role":"project","title":"GeometryReader","estimatedTime":"5분","abstract":[{"type":"text","text":"GeometryReader를 사용하여 내부의 view가 전체 view의 틀 안에서 좌표계를 이용하여 내부 요소들을 쉽게 배치할 수 있습니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.13)GeometryReader","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.13)geometryreader"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.8)Spacer&Divider":{"role":"project","title":"Spacer & Divider","estimatedTime":"5분","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.8)Spacer&Divider","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.8)spacer&divider"},"TextField3.png":{"alt":"TextField preview","type":"image","identifier":"TextField3.png","variants":[{"url":"\/images\/TextField3.png","size":{"width":662,"height":1332},"traits":["1x","light"]}]},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.1)ForEach#ForEach":{"role":"pseudoSymbol","title":"ForEach","abstract":[{"type":"text","text":"어떤 특정한 순서를 반복하면서 View에 요소들을 나열하는 경우에 ForEach를 사용합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.1)ForEach#ForEach","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.1)foreach#ForEach"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.10)TabView&EmptyView":{"role":"project","title":"TabView","estimatedTime":"5분","abstract":[{"type":"text","text":"TabView는 NavigationView처럼 View간의 전환을 목적으로 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.10)TabView&EmptyView","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.10)tabview&emptyview"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/3.2)Paints":{"role":"project","title":"Paints","estimatedTime":"5분","abstract":[{"type":"text","text":"Paint는 Shape의 내부를 정해진 하나로 채워버리는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.2)Paints","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/3.2)paints"},"TextField4.png":{"alt":"TextField preview","type":"image","identifier":"TextField4.png","variants":[{"url":"\/images\/TextField4.png","size":{"width":660,"height":1332},"traits":["1x","light"]}]},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.2)Stack#VStack":{"role":"pseudoSymbol","title":"VStack","abstract":[{"type":"text","text":"SwiftUI에서는 두개 이상의 View를 나열하기 위해서는 Stack을 사용합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.2)Stack#VStack","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.2)stack#VStack"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.2)Stack#HStack":{"role":"pseudoSymbol","title":"HStack","abstract":[{"type":"text","text":"SwiftUI에서는 두개 이상의 View를 나열하기 위해서는 Stack을 사용합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.2)Stack#HStack","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.2)stack#HStack"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.4)@State&@Binding":{"role":"project","title":"@State & @Binding","estimatedTime":"5분","abstract":[{"type":"text","text":"SwiftUI에서 @State와 @Binding은 가장 필수적으로 사용되는 Property Wrapper 중 한 종류입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.4)@State&@Binding","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/1.4)@state&@binding"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.4)@State&@Binding#@Binding":{"role":"pseudoSymbol","title":"@Binding","abstract":[{"type":"text","text":"SwiftUI에서 @State와 @Binding은 가장 필수적으로 사용되는 Property Wrapper 중 한 종류입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.4)@State&@Binding#@Binding","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.4)@state&@binding#@Binding"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.11)Alert&ActionSheet#ActionSheet":{"role":"pseudoSymbol","title":"ActionSheet","abstract":[{"type":"text","text":"Alert는 특정한 동작에 대해서 화면에 작은 창을 띄워 사용자에게 경고하는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.11)Alert&ActionSheet#ActionSheet","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.11)alert&actionsheet#ActionSheet"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.4)LazyGrid#LazyVGrid":{"role":"pseudoSymbol","title":"LazyVGrid","abstract":[{"type":"text","text":"Grid는 웹 페이지에서 주로 사용되는 방법으로 요소들을 특정 패턴으로 나열하는 방식입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.4)LazyGrid#LazyVGrid","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.4)lazygrid#LazyVGrid"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.7)OutlineGroup&DisclosureGroup#DisclosureGroup":{"role":"pseudoSymbol","title":"DisclosureGroup","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.7)OutlineGroup&DisclosureGroup#DisclosureGroup","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.7)outlinegroup&disclosuregroup#DisclosureGroup"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.6)Button#Button-Style":{"role":"pseudoSymbol","title":"재사용 가능한 Button Style","abstract":[{"type":"text","text":"Button은 클릭되었을 때 action 작업을 수행하는 control입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.6)Button#Button-Style","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.6)button#Button-Style"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/3.2)Paints#Paints":{"role":"pseudoSymbol","title":"Paints","abstract":[{"type":"text","text":"Paint는 Shape의 내부를 정해진 하나로 채워버리는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.2)Paints#Paints","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/3.2)paints#Paints"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.9)NavigationView#NavigationView":{"role":"pseudoSymbol","title":"NavigationView","abstract":[{"type":"text","text":"NavigationView는 현재 View에서 다른 View로의 전환을 목적으로 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.9)NavigationView#NavigationView","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.9)navigationview#NavigationView"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.5)Image#Image-file":{"role":"pseudoSymbol","title":"Image file 추가하기","abstract":[{"type":"text","text":"Image는 이미지를 보여주는 view입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.5)Image#Image-file","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.5)image#Image-file"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.10)TabView&EmptyView#TabView":{"role":"pseudoSymbol","title":"TabView","abstract":[{"type":"text","text":"TabView는 NavigationView처럼 View간의 전환을 목적으로 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.10)TabView&EmptyView#TabView","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.10)tabview&emptyview#TabView"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.4)LazyGrid#LazyHGrid":{"role":"pseudoSymbol","title":"LazyHGrid","abstract":[{"type":"text","text":"Grid는 웹 페이지에서 주로 사용되는 방법으로 요소들을 특정 패턴으로 나열하는 방식입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.4)LazyGrid#LazyHGrid","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.4)lazygrid#LazyHGrid"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.2)List#StaticList":{"role":"pseudoSymbol","title":"StaticList","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.2)List#StaticList","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.2)list#StaticList"},"doc://SwiftUIPrototyping/tutorials/SwiftUI/SwiftUI-Drawing-and-Animation":{"role":"article","title":"SwiftUI Drawing and Animation","abstract":[],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUI\/SwiftUI-Drawing-and-Animation","kind":"article","type":"topic","url":"\/tutorials\/swiftui\/swiftui-drawing-and-animation"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.12)Sheet#Sheet":{"role":"pseudoSymbol","title":"Sheet","abstract":[{"type":"text","text":"Sheet는 기존의 View 위에 보여지는 새로운 View입니다."},{"type":"text","text":" "},{"type":"text","text":"modal"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.12)Sheet#Sheet","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.12)sheet#Sheet"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/3.3)Animation#Animation":{"role":"pseudoSymbol","title":"Animation","abstract":[{"type":"text","text":"Animation은 이름대로 특정한 조건에 대하여 애니메이션으로 나타나는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.3)Animation#Animation","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/3.3)animation#Animation"},"TextFieldCode1.swift":{"syntax":"swift","content":["import SwiftUI","","struct TextFieldView: View {","    ","    var body: some View {","        VStack{","            ","            TextField()","            ","            Text(\"Hi! \\(name)~~\")","                .font(.system(size: 30, weight: .bold, design: .rounded))","                .foregroundColor(.pink)","        }","    }","}","","struct TextFieldView_Previews: PreviewProvider {","    static var previews: some View {","        TextFieldView()","    }","}"],"fileName":"TextFieldView.swift","identifier":"TextFieldCode1.swift","type":"file","fileType":"swift","highlights":[]},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.7)OutlineGroup&DisclosureGroup":{"role":"project","title":"OutlineGroup & DisclosureGroup","estimatedTime":"5분","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.7)OutlineGroup&DisclosureGroup","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.7)outlinegroup&disclosuregroup"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/3.3)Animation":{"role":"project","title":"Animation","estimatedTime":"5분","abstract":[{"type":"text","text":"Animation은 이름대로 특정한 조건에 대하여 애니메이션으로 나타나는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.3)Animation","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/3.3)animation"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.3)TextField#TextField":{"role":"pseudoSymbol","title":"TextField","abstract":[{"type":"text","text":"TextField는 사용자가 텍스트를 직접 입력할 수 있는 공간을 제공합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.3)TextField#TextField","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.3)textfield#TextField"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.12)Sheet":{"role":"project","title":"Sheet","estimatedTime":"5분","abstract":[{"type":"text","text":"Sheet는 기존의 View 위에 보여지는 새로운 View입니다."},{"type":"text","text":" "},{"type":"text","text":"modal"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.12)Sheet","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.12)sheet"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.6)Button#Button":{"role":"pseudoSymbol","title":"Button의 구조","abstract":[{"type":"text","text":"Button은 클릭되었을 때 action 작업을 수행하는 control입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.6)Button#Button","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.6)button#Button"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.4)@State&@Binding#@State":{"role":"pseudoSymbol","title":"@State","abstract":[{"type":"text","text":"SwiftUI에서 @State와 @Binding은 가장 필수적으로 사용되는 Property Wrapper 중 한 종류입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.4)@State&@Binding#@State","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.4)@state&@binding#@State"},"TextFieldCode2.swift":{"syntax":"swift","content":["import SwiftUI","","struct TextFieldView: View {","    ","    @State private var name: String = \"\"","    ","    var body: some View {","        VStack{","            ","            TextField()","            ","            Text(\"Hi! \\(name)~~\")","                .font(.system(size: 30, weight: .bold, design: .rounded))","                .foregroundColor(.pink)","        }","    }","}","","struct TextFieldView_Previews: PreviewProvider {","    static var previews: some View {","        TextFieldView()","    }","}"],"fileName":"TextFieldView.swift","identifier":"TextFieldCode2.swift","type":"file","fileType":"swift","highlights":[{"line":5},{"line":6}]},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.2)Stack#ZStack":{"role":"pseudoSymbol","title":"ZStack","abstract":[{"type":"text","text":"SwiftUI에서는 두개 이상의 View를 나열하기 위해서는 Stack을 사용합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.2)Stack#ZStack","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.2)stack#ZStack"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/3.1)Shapes#Shapes":{"role":"pseudoSymbol","title":"Shapes","abstract":[{"type":"text","text":"Animation은 이름대로 특정한 조건에 대하여 애니메이션으로 나타나는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/3.1)Shapes#Shapes","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/3.1)shapes#Shapes"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.6)Form&GroupBox":{"role":"project","title":"Form","estimatedTime":"5분","abstract":[{"type":"text","text":"Form은 데이터 혹은 앱의 설정들을 나타내기 위해 사용하는 컨테이너입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.6)Form&GroupBox","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.6)form&groupbox"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.2)List#DynamicList":{"role":"pseudoSymbol","title":"DynamicList","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.2)List#DynamicList","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.2)list#DynamicList"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.5)ProgressView":{"role":"project","title":"ProgressView","estimatedTime":"5분","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.5)ProgressView","kind":"project","type":"topic","url":"\/tutorials\/swiftuiprototyping\/2.5)progressview"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/1.7)Toggle&Picker#Toggle":{"role":"pseudoSymbol","title":"Toggle","abstract":[{"type":"text","text":"SwiftUI의 Value Selector는 여러가지 값들 중 하나를 선택할 수 있는 control View입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/1.7)Toggle&Picker#Toggle","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/1.7)toggle&picker#Toggle"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.6)Form&GroupBox#GroupBox":{"role":"pseudoSymbol","title":"GroupBox","abstract":[{"type":"text","text":"Form은 데이터 혹은 앱의 설정들을 나타내기 위해 사용하는 컨테이너입니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.6)Form&GroupBox#GroupBox","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.6)form&groupbox#GroupBox"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.8)Spacer&Divider#Divider":{"role":"pseudoSymbol","title":"Divider","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.8)Spacer&Divider#Divider","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.8)spacer&divider#Divider"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.7)OutlineGroup&DisclosureGroup#OutlineGroup":{"role":"pseudoSymbol","title":"OutlineGroup","abstract":[{"type":"text","text":"Text"}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.7)OutlineGroup&DisclosureGroup#OutlineGroup","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.7)outlinegroup&disclosuregroup#OutlineGroup"},"doc://SwiftUIPrototyping/tutorials/SwiftUIPrototyping/2.11)Alert&ActionSheet#Alert":{"role":"pseudoSymbol","title":"Alert","abstract":[{"type":"text","text":"Alert는 특정한 동작에 대해서 화면에 작은 창을 띄워 사용자에게 경고하는 역할을 합니다."}],"identifier":"doc:\/\/SwiftUIPrototyping\/tutorials\/SwiftUIPrototyping\/2.11)Alert&ActionSheet#Alert","kind":"section","type":"section","url":"\/tutorials\/swiftuiprototyping\/2.11)alert&actionsheet#Alert"}}}